<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FastDFS笔记</title>
      <link href="/choodsire.github.io/2022/03/31/fastdfs-bi-ji/"/>
      <url>/choodsire.github.io/2022/03/31/fastdfs-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="第一章-分布式文件系统"><a href="#第一章-分布式文件系统" class="headerlink" title="第一章 分布式文件系统"></a>第一章 分布式文件系统</h3><p>解决了单点文件管理的缺陷: 主机宕机,硬盘损坏,数据丢失等…</p><p>通过一台分布式文件系统,连接多个文件Storge组,组中有备份机器</p><h3 id="第二章-FastDFS下载"><a href="#第二章-FastDFS下载" class="headerlink" title="第二章 FastDFS下载"></a>第二章 FastDFS下载</h3><p>FastDFS:由阿里巴巴提供,c语言编写,在github上开源,只有linux版本</p><p>下载地址: <a href="https://github.com/happyfish100">https://github.com/happyfish100</a></p><p>下载 </p><p>libfastcommon-master.zip</p><p>fastdfs-client-java-master.zip</p><p>fastdfs-master.zip</p><p>fastdfs-nginx-module-master.zip</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#下载环境yum install gcc libevent libevent-devel -y#切换目录cd /opt/mysoftwares#上传文件#libfastcommon-master.zip 公共接口#fastdfs-master.zip#解压缩unzip libfastcommon-master.zip cd libfastcommon-master#编译安装./make.sh &amp; ./make.sh install#解压缩cd ..unzip fastdfs-master.zip cd fastdfs-maste#编译安装./make.sh &amp; ./make.sh install#配置文件cd /etc/fdfs/#client.conf  storage.conf  storage_ids.conf  tracker.conf#将fastdfs-maste/conf中的http.conf和mime.types 文件到/etc/fdfs中cd /opt/mysoftwares/fastdfs-maste/confcp http.conf /etc/fdfscp mime.types /etc/fdfscd /etc/fdfsls#client.conf  mime.types    storage_ids.conf#http.conf    storage.conf  tracker.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第三章-配置文件"><a href="#第三章-配置文件" class="headerlink" title="第三章 配置文件"></a>第三章 配置文件</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#修改tracker.conf中的 base_path ----&gt; 日志存储路径 , 该路径必须存在# the base path to store data and log filesbase_path = /opt/fastdfs/tracker#端口号port=22122<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#storage.conf#组名group_name = group1#端口号port = 23000#日志路径base_path = /opt/fastdfs/storage#磁盘存放路径store_path0 = /opt/fastdfs/storage/files#配置 tracker的访问地址tracker_server = 192.168.1.101:22122<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第四章-启动-关闭-重启"><a href="#第四章-启动-关闭-重启" class="headerlink" title="第四章 启动 关闭 重启"></a>第四章 启动 关闭 重启</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#启动fdfs_tracker /ect/fdfs/tracker.conf startfdfs_storage /ect/fdfs/storage.conf start#关闭fdfs_tracker /ect/fdfs/tracker.conf stopfdfs_storage /ect/fdfs/storage.conf stop#重启fdfs_tracker /ect/fdfs/tracker.conf restartfdfs_storage /ect/fdfs/storage.conf restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第五章-测试"><a href="#第五章-测试" class="headerlink" title="第五章 测试"></a>第五章 测试</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#修改/etc/fdfs/client.conf#日志路径base_path = /opt/fastdfs/client#tracker的访问地址tracker_server = 192.168.1.101:22122<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#fdfs_test &lt;confg_file&gt; &lt;operation&gt;#operation: upload ,download, getmeta, setmeta, delete and query_serversfdfs_test /etc/fdfs/client.conf upload aa.txt#上传成功后tracker_query_storage_store_list_without_group:        server 1. group_name=, ip_addr=192.168.1.101, port=23000group_name=group1, ip_addr=192.168.1.101, port=23000storage_upload_by_filenamegroup_name=group1, remote_filename=M00/00/00/wKgBZWJFKDaAJ97dAAAAGgNbbZ0410.txtsource ip address: 192.168.1.101file timestamp=2022-03-30 21:04:06file size=26file crc32=56323485example file url: http://192.168.1.101/group1/M00/00/00/wKgBZWJFKDaAJ97dAAAAGgNbbZ0410.txtstorage_upload_slave_by_filenamegroup_name=group1, remote_filename=M00/00/00/wKgBZWJFKDaAJ97dAAAAGgNbbZ0410_big.txtsource ip address: 192.168.1.101file timestamp=2022-03-30 21:04:07file size=26file crc32=56323485example file url: http://192.168.1.101/group1/M00/00/00/wKgBZWJFKDaAJ97dAAAAGgNbbZ0410_big.txt#下载fdfs_test /etc/fdfs/client.conf download group1 M00/00/00/wKgBZWJFKDaAJ97dAAAAGgNbbZ0410_big.txt#删除fdfs_test /etc/fdfs/client.conf delete group1 M00/00/00/wKgBZWJFKDaAJ97dAAAAGgNbbZ0410_big.txt#上述测试代码安装成功,没有问题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第六章-HTTP访问"><a href="#第六章-HTTP访问" class="headerlink" title="第六章 HTTP访问"></a>第六章 HTTP访问</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#上传 fastdfs-nginx-module-master.zipunzip fastdfs-nginx-module-master.zipcd fastdfs-nginx-module-master/srcpwd#/opt/mysoftwares/fastdfs-nginx-module-master/src#安装nginx 添加扩展模块tar -zxvf nginx-1.20.2.tar.gzcd nginx-1.20.2.tar./configure --prefix=/usr/local/nginx_fdfs --add-module=/opt/mysoftwares/fastdfs-nginx-module-master/srcmake &amp; make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#修改fastdfs-nginx-module-master/src中的mod_fastdfs.conf#日志路径base_path=/opt/fastdfs/nginx_mod#tracker的地址tracker_server=192.168.1.101:22122#storage的端口storage_server_port=23000#这个一定设为true有groupurl_have_group_name = true#存储路径store_path0=/opt/fastdfs/storage/files#将该文件上传到/etc/fdfs中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#修改nginx_sdfs中的conf中的nginx.conf#添加location ~ /group[1-9]/M0[0-9] {ngx_fastdfs_module;}#运行nginx/usr/local/nginx_fdfs/sbin/nginx -c /usr/local/nginx_fdfs/conf/nginx.conf -t/usr/local/nginx_fdfs/sbin/nginx -c /usr/local/nginx_fdfs/conf/nginx.conf#启动没问题的话,就可以通过浏览器访问到我们的文件了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第七章-java操作"><a href="#第七章-java操作" class="headerlink" title="第七章 java操作"></a>第七章 java操作</h3><p>加上依赖包,在github上下载,用mvn clean install编译下载,repository中没有</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--fastdfs依赖包--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.csource<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastdfs-client-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.29-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写fastdfs.conf配置文件</p><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">tracker_server=192.168.1.101:22122<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token class-name">StorageClient</span> sc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token comment">//通过配置文件初始化,获取group</span>        <span class="token class-name">ClientGlobal</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">"fastdfs.conf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过group获取TrackerClient</span>        <span class="token class-name">TrackerClient</span> tc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrackerClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过TrackerClient获取TrackerServer</span>        <span class="token class-name">TrackerServer</span> ts <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getTrackerServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过TrackerClient获取StorageServer</span>        <span class="token class-name">StorageServer</span> ss <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getStoreStorage</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过TrackerServer和StorageServer 获取StorageClient</span>        sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StorageClient</span><span class="token punctuation">(</span>ts<span class="token punctuation">,</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//通过获取StorageClient来操作文件,返回值是一个字符串数值,第一个字符串是组名,第二个字符串是路径,建议存到数据库中使用</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">upload_file</span><span class="token punctuation">(</span><span class="token string">"C:\\Game\\steam\\steamapps\\workshop\\content\\431960\\2772316196\\preview.jpg"</span><span class="token punctuation">,</span><span class="token string">"jpg"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token operator">:</span>result<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MyException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>sc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第八章-web"><a href="#第八章-web" class="headerlink" title="第八章 web"></a>第八章 web</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.csource<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>fastdfs-client-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.29-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置fastdfs.conf</p><pre class="line-numbers language-conf" data-language="conf"><code class="language-conf">tracker_server=192.168.1.101:22122<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://192.168.1.101:3306/fastdfs?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">123</span><span class="token attr-name">spring.thymeleaf.cache</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token comment">#去掉HTML5语法验证</span><span class="token attr-name">spring.thymeleaf.mode</span><span class="token punctuation">=</span><span class="token attr-value">LEGACYHTML5</span><span class="token attr-name">mybatis.configuration.log-impl</span><span class="token punctuation">=</span><span class="token attr-value">org.apache.ibatis.logging.stdout.StdOutImpl</span><span class="token attr-name">mybatis.mapper-locations</span><span class="token punctuation">=</span><span class="token attr-value">classpath:mapper/*.xml</span><span class="token comment">#文件大小控制</span><span class="token attr-name">spring.servlet.multipart.max-file-size</span><span class="token punctuation">=</span><span class="token attr-value">300MB</span><span class="token attr-name">spring.servlet.multipart.max-request-size</span><span class="token punctuation">=</span><span class="token attr-value">1024MB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>bjpowernode<span class="token punctuation">.</span>utils</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>csource<span class="token punctuation">.</span>common<span class="token punctuation">.</span></span><span class="token class-name">MyException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>csource<span class="token punctuation">.</span>fastdfs<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FastDFSUtil</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 文件上传     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffFile<span class="token punctuation">,</span><span class="token class-name">String</span> extFilename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">StorageClient</span> sc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">ClientGlobal</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">"fastdfs.conf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TrackerClient</span> tc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrackerClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TrackerServer</span> ts <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getTrackerServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">StorageServer</span> ss <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getStoreStorage</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">;</span>            sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StorageClient</span><span class="token punctuation">(</span>ts<span class="token punctuation">,</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">upload_appender_file</span><span class="token punctuation">(</span>buffFile<span class="token punctuation">,</span>extFilename<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> result<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MyException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 文件下载     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token class-name">String</span> groupName<span class="token punctuation">,</span><span class="token class-name">String</span> remoteFilename<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">StorageClient</span> sc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">ClientGlobal</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">"fastdfs.conf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TrackerClient</span> tc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrackerClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TrackerServer</span> ts <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getTrackerServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">StorageServer</span> ss <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getStoreStorage</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">;</span>            sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StorageClient</span><span class="token punctuation">(</span>ts<span class="token punctuation">,</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bullFile <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">download_file</span><span class="token punctuation">(</span>groupName<span class="token punctuation">,</span>remoteFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> bullFile<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MyException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>sc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">try</span> <span class="token punctuation">{</span>                    sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 文件删除     */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">String</span> groupName<span class="token punctuation">,</span><span class="token class-name">String</span> remoteFilename<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">StorageClient</span> sc <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token class-name">ClientGlobal</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token string">"fastdfs.conf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TrackerClient</span> tc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrackerClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">TrackerServer</span> ts <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getTrackerServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">StorageServer</span> ss <span class="token operator">=</span> tc<span class="token punctuation">.</span><span class="token function">getStoreStorage</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">;</span>            sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StorageClient</span><span class="token punctuation">(</span>ts<span class="token punctuation">,</span>ss<span class="token punctuation">)</span><span class="token punctuation">;</span>            sc<span class="token punctuation">.</span><span class="token function">delete_file</span><span class="token punctuation">(</span>groupName<span class="token punctuation">,</span>remoteFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MyException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/**     * MultipartFile Spring提供,用于封装文件     * @param id     * @param myFile     * @param model     * @return     */</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/upload"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span> myFile<span class="token punctuation">,</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffFile <span class="token operator">=</span> myFile<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> fileName <span class="token operator">=</span> myFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token class-name">FastDFSUtil</span><span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>buffFile<span class="token punctuation">,</span>fileName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">CreaditorInfo</span> creaditorInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CreaditorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorInfo<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorInfo<span class="token punctuation">.</span><span class="token function">setFileSize</span><span class="token punctuation">(</span>myFile<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorInfo<span class="token punctuation">.</span><span class="token function">setFileType</span><span class="token punctuation">(</span>myFile<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorInfo<span class="token punctuation">.</span><span class="token function">setGroupname</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorInfo<span class="token punctuation">.</span><span class="token function">setRemoteFilepath</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorInfo<span class="token punctuation">.</span><span class="token function">setOldFilename</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>        creaditorService<span class="token punctuation">.</span><span class="token function">updateFileInfo</span><span class="token punctuation">(</span>creaditorInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span><span class="token string">"文件上传成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"success"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 完成文件的下载     * ResponseEntity 响应实体,Spring提供     * @param id     * @return     */</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/download/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token function">download</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">CreaditorInfo</span> creaditorInfo <span class="token operator">=</span> creaditorService<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffFile <span class="token operator">=</span> <span class="token class-name">FastDFSUtil</span><span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>creaditorInfo<span class="token punctuation">.</span><span class="token function">getGroupname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>creaditorInfo<span class="token punctuation">.</span><span class="token function">getRemoteFilepath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HttpHeaders</span> httpHeaders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        httpHeaders<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_OCTET_STREAM<span class="token punctuation">)</span><span class="token punctuation">;</span>        httpHeaders<span class="token punctuation">.</span><span class="token function">setContentLength</span><span class="token punctuation">(</span>creaditorInfo<span class="token punctuation">.</span><span class="token function">getFileSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        httpHeaders<span class="token punctuation">.</span><span class="token function">setContentDispositionFormData</span><span class="token punctuation">(</span><span class="token string">"attachment"</span><span class="token punctuation">,</span>creaditorInfo<span class="token punctuation">.</span><span class="token function">getOldFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> responseEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token operator">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>                buffFile<span class="token punctuation">,</span>httpHeaders<span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> responseEntity<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/delete/{id}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>        creaditorService<span class="token punctuation">.</span><span class="token function">deleteFileById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"redirect:/"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第九章-集群"><a href="#第九章-集群" class="headerlink" title="第九章 集群"></a>第九章 集群</h3><p>FastDFS分布式文件系统集群环境搭建-操作步骤手册</p><p>搭建一个FastDFS分布式文件系统集群，推荐至少部署6个服务器节点；<br>================================搭建FastDFS的集群==============================<br>第一步：安装6个迷你版的Linux，迷你版Linux没有图形界面，占用磁盘及资源小，企业里面使用的Linux都是没有图形界面的Linux；</p><p>第二步：由于迷你版Linux缺少一些常用的工具库，操作起来不方便，推荐安装如下的工具库：<br>1、安装lrzsz， yum install lrzsz -y<br>2、安装wget, yum install wget -y<br>4、安装vim， yum install vim -y<br>5、安装unzip，yum install unzip -y<br>6、安装ifconfig，yum install net-tools -y</p><p>yum install lrzsz wget vim unzip net-tools -y</p><p>7、安装nginx及fastdfs需要的库依赖：<br>   yum install gcc perl openssl openssl-devel pcre pcre-devel zlib zlib-devel libevent libevent-devel -y</p><p>第三步 安装fastdfs<br>   1、 上传fastdfs的安装包和libfastcommon的安装包<br>   2、 解压libfastcommon 安装libfastcommon<br>   3、 解压fastdfs 安装fastdfs<br>   4、 拷贝fastdfs目录中的http.conf和mime.types到/etc/fdfs 目录中<br>注：6台机器全部执行这些操作</p><p>第四步：部署两个tracker server服务器，需要做的工作:</p><pre><code>修改两个tracker服务器的配置文件：tracker.conf: 修改一个地方：base_path=/opt/fastdfs/tracker   #设置tracker的数据文件和日志目录（需预先创建）启动tracker服务器 fdfs_trackerd /etc/fdfs/tracker.conf</code></pre><p>第五步 修改两个组中的4台storage中storage.conf文件<br>    第一组group1的第一个storage server（修改storage.conf配置文件）：<br>    group_name=group1   #组名，根据实际情况修改，值为 group1 或 group2<br>    base_path=/opt/fastdfs/storage   #设置storage的日志目录（需预先创建）<br>    store_path0=/opt/fastdfs/storage/files    #存储路径<br>    tracker_server=192.168.171.135:22122  #tracker服务器的IP地址以及端口号<br>    tracker_server=192.168.171.136:22122</p><pre><code>第二组group2的第一个storage server（修改storage.conf配置文件）：group_name=group2   #组名，根据实际情况修改，值为 group1 或 group2base_path=/opt/fastdfs/storage   #设置storage的日志目录（需预先创建）store_path0=/opt/fastdfs/storage/files    #存储路径tracker_server=192.168.171.135:22122  #tracker服务器的IP地址以及端口号tracker_server=192.168.171.136:22122   启动storage服务器使用之前的Java代码测试FastDFS的6台机器是否可以上传文件</code></pre><p>注意：FastDFS默认是带有负载均衡策略的可以在tracker的2台机器中修改tracker.conf文件<br>    store_lookup=1</p><pre><code>0 随机存放策略1 指定组2 选择磁盘空间的优先存放 默认值修改后重启服务fdfs_trackerd /etc/fdfs/tracker.conf restart</code></pre><p>======================使用Nginx进行负载均衡==============================</p><p>第六步 安装 nginx ，使用nginx 对fastdfs 进行负载均衡<br>    上传 nginx-1.12.2.tar.gz以及 nginx的fastdfs扩展模块安装包fastdfs-nginx-module-master.zip<br>    添加nginx的安装依赖<br>       yum install gcc openssl openssl-devel pcre pcre-devel zlib zlib-devel -y<br>    解压nginx<br>       tar -zxvf  nginx-1.12.2.tar.gz<br>    解压fastdfs扩展模块<br>       unzip fastdfs-nginx-module-master.zip<br>    配置nginx的安装信息<br>       2台tracker服务器的配置信息（不需要fastdfs模块）<br>         ./configure –prefix=/usr/local/nginx_fdfs<br>       4台storage服务器其的配置信息（需要使用fastdfs模块）<br>         ./configure –prefix=/usr/local/nginx_fdfs –add-module=/root/fastdfs-nginx-module-master/src<br>    编译并安装nginx<br>       ./make<br>       ./make install</p><pre><code>4台storage的服务器需要拷贝mod_fastdfs文件将/root/fastdfs-nginx-module-master/src目录下的mod_fastdfs.conf文件拷贝到 /etc/fdfs/目录下，这样才能正常启动Nginx；</code></pre><p>第七步 配置tracker 的两台机器的nginx</p><p>​    进入安装目录<br>​    cd /usr/local/nginx_fdfs</p><pre><code>添加一个location 对请求进行拦截，配置一个正则规则 拦截fastdfs的文件路径， 并将请求转发到其余的4台storage服务器(修改 conf目录下nginx.conf 文件)#nginx拦截请求路径：location ~ /group[1-9]/M0[0-9] {       proxy_pass http://fastdfs_group_server; }添加一个upstream 执行服务的IP为 另外的4台stroage 的地址#部署配置nginx负载均衡:upstream fastdfs_group_server {      server 192.168.171.137:80;      server 192.168.171.138:80;    server 192.168.171.139:80;      server 192.168.171.140:80;  }</code></pre><p>第八步 配置另外4台storage的nginx添加http访问的请求路径拦截<br>    进入安装目录<br>    cd /usr/local/nginx_fdfs<br>    添加一个location 对请求进行拦截，配置一个正则规则 拦截fastdfs的文件路径，使用fastdfs的nginx模块转发请求(修改 conf目录下nginx.conf 文件)<br>    #nginx拦截请求路径：<br>    location ~ /group[1-9]/M0[0-9] {<br>        ngx_fastdfs_module;<br>    }</p><p>第九步 分别修改4台storage服务器的mod_fasfdfs.conf文件（/etc/fdfs/mod_fastdfs.conf）<br>    #修改基本路径，并在指定路径创建对应文件夹<br>    base_path=/opt/fastdfs/nginx_mod #保存日志目录<br>    #指定两台tracker服务器的ip和端口<br>    tracker_server=192.168.171.135:22122  #tracker服务器的IP地址以及端口号<br>    tracker_server=192.168.171.136:22122<br>    #指定storage服务器的端口号<br>    storage_server_port=23000 #通常情况不需要修改<br>    #指定当前的storage服务器所属的组名 （当前案例03和04为group1 05和06为group2）<br>    group_name=group1  #当前服务器的group名<br>    #指定url路径中是否包含组名 （当前案例url包含组名）<br>    url_have_group_name=true     #文件url中是否有group名<br>    store_path_count=1           #存储路径个数，需要和store_path个数匹配（一般不用改）<br>    store_path0=/opt/fastdfs/storage/files    #存储路径<br>    #指定组个数，根据实际配置决定，（当前案例拥有2个组group1和group2）<br>    group_count = 2                   #设置组的个数</p><pre><code>在末尾增加2个组的具体信息：[group1]group_name=group1storage_server_port=23000store_path_count=1store_path0=/opt/fastdfs/storage/files[group2]group_name=group2storage_server_port=23000store_path_count=1store_path0=/opt/fastdfs/storage/files第一个组的第二个storage按照相同的步骤操作；另外一个组的两个storage也按照相同的步骤操作；#测试nginx的配置文件是否正确（测试全部6台服务器）   /usr/local/nginx_fdfs/sbin/nginx -c /usr/local/nginx_fdfs/conf/nginx.conf -t#启动nginx服务器(全部6台服务器)  /usr/local/nginx_fdfs/sbin/nginx -c /usr/local/nginx_fdfs/conf/nginx.conf</code></pre><p>测试：使用浏览器分别访问 6台 服务器中的fastdfs文件</p><p>第十步：部署前端用户访问入口服务器，即访问192.168.230.128上的Nginx，该Nginx负载均衡到后端2个tracker server；<br>    配置nginx.conf文件<br>    location ~ /group[1-9]/M0[0-9] {<br>        proxy_pass <a href="http://fastdfs_group_server/">http://fastdfs_group_server</a>;<br>    }</p><pre><code>添加一个upstream 执行服务的IP为 2台tracker 的地址#部署配置nginx负载均衡:upstream fastdfs_group_server {      server 192.168.171.135:80;      server 192.168.171.136:80; }</code></pre><p>测试：使用浏览器访问128（唯一入口的nginx服务器）服务器中的fastdfs文件<br>注意：由于之前128的nginx中可能拥有静态资源拦截会导致访问不到文件，这时可以注释或删除这些静态资源拦截</p><p>==============================补充资料============================================<br>最后，为了让服务能正常连接tracker，请关闭所有机器的防火墙：<br>systemctl status firewalld   查看防火墙状态<br>systemctl disable firewalld  禁用开机启动防火墙<br>systemctl stop firewalld     停止防火墙<br>systemctl  restart  network  重启网络<br>systemctl  start network     启动网络<br>systemctl  stop  network     停止网络</p><p>可能安装的linux（无图形的）没有开启网卡服务，可以修改/etc/sysconfig/network-scripts 下的网卡配置文件设置 ONBOOT=yse<br>表示开机启动网卡，然后启动网络服务即可</p><p>Keepalived当主nginx出现故障后会自动切换到备用nginx服务器的一款软件 通常由运维人员进行使用</p>]]></content>
      
      
      <categories>
          
          <category> JaveWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml解析错误</title>
      <link href="/choodsire.github.io/2022/03/30/xml-jie-xi-cuo-wu/"/>
      <url>/choodsire.github.io/2022/03/30/xml-jie-xi-cuo-wu/</url>
      
        <content type="html"><![CDATA[<h1 id="Invalid-byte-2-of-2-byte-UTF-8-sequence"><a href="#Invalid-byte-2-of-2-byte-UTF-8-sequence" class="headerlink" title="Invalid byte 2 of 2-byte UTF-8 sequence."></a>Invalid byte 2 of 2-byte UTF-8 sequence.</h1><p>中文编码错误,把中文去掉就行</p>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring-session笔记</title>
      <link href="/choodsire.github.io/2022/03/30/spring-session-bi-ji/"/>
      <url>/choodsire.github.io/2022/03/30/spring-session-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="SpringSession"><a href="#SpringSession" class="headerlink" title="SpringSession"></a>SpringSession</h3><h4 id="第一章-session丢失解决方案"><a href="#第一章-session丢失解决方案" class="headerlink" title="第一章 session丢失解决方案"></a>第一章 session丢失解决方案</h4><h5 id="第一种-容器扩展插件"><a href="#第一种-容器扩展插件" class="headerlink" title="第一种: 容器扩展插件"></a>第一种: 容器扩展插件</h5><p>tomcat-redis-session-manager插件,jetty-session-redis插件,memcached-session-manager插件</p><p>对项目透明,不需要修改代码,但是依赖容器,一旦容器更新替换,就得重新配置,麻烦</p><h5 id="第二种-nginx的负载均衡策略"><a href="#第二种-nginx的负载均衡策略" class="headerlink" title="第二种: nginx的负载均衡策略"></a>第二种: nginx的负载均衡策略</h5><p>使用ip_hash</p><p>但是会造成服务器压力过大</p><p>移动端,频繁ip变换,也会导致session丢失</p><h5 id="第三种-自己写redis的工具"><a href="#第三种-自己写redis的工具" class="headerlink" title="第三种: 自己写redis的工具"></a>第三种: 自己写redis的工具</h5><h5 id="第四种-spring-session"><a href="#第四种-spring-session" class="headerlink" title="第四种: spring-session"></a>第四种: spring-session</h5><p>spring-session是spring家族的一个子项目,提供一组api,用于管理session</p><ul><li>提供用户session管理的api和实现</li><li>提供httpsession,以中立的方式取代web中的session,比如tomcat中的session</li><li>支持集群的session处理,不必绑定到具体的web容器去解决集群下的session共享问题</li></ul><h4 id="第二章-SpringSession的使用"><a href="#第二章-SpringSession的使用" class="headerlink" title="第二章 SpringSession的使用"></a>第二章 SpringSession的使用</h4><h5 id="SpringMVC中"><a href="#SpringMVC中" class="headerlink" title="SpringMVC中"></a>SpringMVC中</h5><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-session-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>springSessionRepositoryFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">&gt;</span></span>org.springframework.web.filter.DelegatingFilterProxy<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">&gt;</span></span>springSessionRepositoryFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--如果有组件扫描器,可以不用,启动spring注解支持,spring-session需要spring注解--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>annotation-config</span><span class="token punctuation">/&gt;</span></span><span class="token comment">&lt;!--同域名同项目 只需要RedisHttpSessionConfiguration--&gt;</span>    <span class="token comment">&lt;!--配置spring-session--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>maxInactiveIntervalInSeconds<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1800<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!--其他需要--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cookieSerializer<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>defaultCookieSerializer<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--配置Cookie序列化--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>defaultCookieSerializer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.session.web.http.DefaultCookieSerializer<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--同域名不同项目--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cookiePath<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!--同域名不同子域名--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>domainName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myweb.com<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--配置redis--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jedisConnectionFactory<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>org.springframework.data.redis.connection.jedis.JedisConnectionFactory<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hostName<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>192.168.1.101<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>port<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6379<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123456<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三章-SpringBoot中使用"><a href="#第三章-SpringBoot中使用" class="headerlink" title="第三章 SpringBoot中使用"></a>第三章 SpringBoot中使用</h4><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-session-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.redis.host</span><span class="token punctuation">=</span><span class="token attr-value">xxx.xxx.xxx.xxx</span><span class="token attr-name">spring.redis.port</span><span class="token punctuation">=</span><span class="token attr-value">6379</span><span class="token attr-name">spring.redis.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span class="token comment">#cookie超时时间</span><span class="token comment">#server.reactive.session.timeout=30m</span><span class="token comment">#用于同域名不同项目</span><span class="token attr-name">server.servlet.session.cookie.path</span><span class="token punctuation">=</span><span class="token attr-value">/</span><span class="token comment">#同域名不同子域名</span><span class="token attr-name">server.servlet.session.cookie.domain</span><span class="token punctuation">=</span><span class="token attr-value">myweb.com</span><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">9400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringSession </category>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> SpringSession </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx笔记</title>
      <link href="/choodsire.github.io/2022/03/30/nginx-bi-ji/"/>
      <url>/choodsire.github.io/2022/03/30/nginx-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><h4 id="第一章-安装"><a href="#第一章-安装" class="headerlink" title="第一章 安装"></a>第一章 安装</h4><h5 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum updateyum install gcc openssl openssl-devel pcre pcre-devel zlib zlib-devel -ycd /root/opt/mysoftwarestar -zxvf nginx.tarcd nginx./configure --prefix=/usr/local/nginxmake &amp; make installcd /usr/local/nginxcd sbinls# nginx#运行./nginx#检测ps -ef|grep nginx# master worker 进程代表成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h5><p>进入到sbin目录下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通过配置文件启动</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./nginx -c /usr/local/nginx/conf/nginx.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="关闭nginx"><a href="#关闭nginx" class="headerlink" title="关闭nginx"></a>关闭nginx</h5><h6 id="第一种-优雅的关闭"><a href="#第一种-优雅的关闭" class="headerlink" title="第一种 优雅的关闭"></a>第一种 优雅的关闭</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -ef|grep nginxkill -quit pid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h6 id="第二种-快速关闭"><a href="#第二种-快速关闭" class="headerlink" title="第二种 快速关闭"></a>第二种 快速关闭</h6><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -ef|grep nginxkill -term pid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="配置检查"><a href="#配置检查" class="headerlink" title="配置检查"></a>配置检查</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./nginx -c /usr/local/nginx/conf/nginx.conf -t<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>-t: 进行配置检查</p><h5 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#查看版本号./nginx -v#查看版本号,编译版本,配置信息./nginx -V<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第二章-配置文件"><a href="#第二章-配置文件" class="headerlink" title="第二章 配置文件"></a>第二章 配置文件</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#配置worker进程运行用户,nobody也是一个linux用户,一般用于启动程序,没有密码#user  nobody;#配置工作进程数目,根据硬件调整,通常等于cpu数量或者2倍worker_processes  1;#配置全局错误日志及类型[debug | info | notice | warn | error | crit],默认是error#error_log  logs/error.log;#error_log  logs/error.log  notice;#error_log  logs/error.log  info;#保存pid的文件#pid        logs/nginx.pid;#配置工作模式和连接数events {    worker_connections  1024;#配置每个worker进程的连接数上限,nginx支持的总连接数就等于改数乘工作进程数目,最大为65535}#配置http服务器,利用它的反向代理功能提供负载均衡支持http {#配置nginx支持哪些多媒体类型,可以在conf/mime.types查看支持哪些多媒体类型    include       mime.types;    #默认文件类型 流类型,可以理解为支持任意类型    default_type  application/octet-stream;#配置日志格式    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '    #                  '$status $body_bytes_sent "$http_referer" '    #                  '"$http_user_agent" "$http_x_forwarded_for"';#配置access.log日志及存放路径,并使用上面的main日志格式,访问日志    #access_log  logs/access.log  main;    sendfile        on;#开启高效文件传输模式    #tcp_nopush     on;#防止网络阻塞,上线一般开启    #keepalive_timeout  0;    keepalive_timeout  65;#长连接超时时间,单位是秒    #gzip  on;#开启gzip压缩输出,上线一般开启#配置虚拟主机    server {        listen       80;#配置监听端口        server_name  localhost;#配置服务名        #charset koi8-r; #配置字符集,默认是utf-8        #access_log  logs/host.access.log  main; #访问日志,虚拟主机的#默认的匹配斜杠/的请求,当访问路径中有斜杠/,会被该location匹配到并进行处理        location / {            root   html;#root是配置服务器的默认网站跟目录位置,默认为nginx安装主目录下的html目录            index  index.html index.htm;#默认的首页文件的名称        }        #error_page  404              /404.html; #配置404页面        # redirect server error pages to the static page /50x.html        #        error_page   500 502 503 504  /50x.html;        location = /50x.html {            root   html;        }        # proxy the PHP scripts to Apache listening on 127.0.0.1:80        #        #location ~ \.php$ {        #    proxy_pass   http://127.0.0.1;        #}        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000        #        #location ~ \.php$ {        #    root           html;        #    fastcgi_pass   127.0.0.1:9000;        #    fastcgi_index  index.php;        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;        #    include        fastcgi_params;        #}        # deny access to .htaccess files, if Apache's document root        # concurs with nginx's one        #        #location ~ /\.ht {        #    deny  all;        #}    }    # another virtual host using mix of IP-, name-, and port-based configuration    #    #server {    #    listen       8000;    #    listen       somename:8080;    #    server_name  somename  alias  another.alias;    #    location / {    #        root   html;    #        index  index.html index.htm;    #    }    #}    # HTTPS server    #    #server {    #    listen       443 ssl;    #    server_name  localhost;    #    ssl_certificate      cert.pem;    #    ssl_certificate_key  cert.key;    #    ssl_session_cache    shared:SSL:1m;    #    ssl_session_timeout  5m;    #    ssl_ciphers  HIGH:!aNULL:!MD5;    #    ssl_prefer_server_ciphers  on;    #    location / {    #        root   html;    #        index  index.html index.htm;    #    }    #}}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三章-静态网页部署"><a href="#第三章-静态网页部署" class="headerlink" title="第三章 静态网页部署"></a>第三章 静态网页部署</h4><p>直接改nginx.conf中的location,把静态资源上传上去就ok了</p><h4 id="第四章-负载均衡"><a href="#第四章-负载均衡" class="headerlink" title="第四章 负载均衡"></a>第四章 负载均衡</h4><h5 id="硬件负载"><a href="#硬件负载" class="headerlink" title="硬件负载"></a>硬件负载</h5><p>f5 Arrary等</p><p>性能好等优点</p><p>费用贵</p><h5 id="软件负载"><a href="#软件负载" class="headerlink" title="软件负载"></a>软件负载</h5><p>Nginx等</p><p>免费开源</p><h5 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./apache-tomcat-9.0.60-01/bin/startup.sh | tail -f ./apache-tomcat-9.0.60-01/logs/catalina.out &amp;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第五章-nginx常用负载均衡策略"><a href="#第五章-nginx常用负载均衡策略" class="headerlink" title="第五章 nginx常用负载均衡策略"></a>第五章 nginx常用负载均衡策略</h4><h5 id="轮询-默认"><a href="#轮询-默认" class="headerlink" title="轮询(默认)"></a>轮询(默认)</h5><p>轮</p><h5 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">upstream www.myweb.com{     server ***.***.**.***:8081 weight 3;server ***.***.**.***:8082 weight 4;          }    server {        listen       80;        server_name  localhost;        #charset koi8-r;        #access_log  logs/host.access.log  main;        location / {            root   html;            index  index.html index.htm;        }location /myweb {    proxy_pass http://www.myweb.com;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="ip-hash"><a href="#ip-hash" class="headerlink" title="ip_hash"></a>ip_hash</h5><p>通过ip的hash%tomcat数 相同 ,访问tomcat</p><p>一次连接后,永远不变</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">upstream www.myweb.com{ip_hash;     server ***.***.**.***:8081;server ***.***.**.***:8082;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="最少连接"><a href="#最少连接" class="headerlink" title="最少连接"></a>最少连接</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">upstream www.myweb.com{     least conn;     server ***.***.**.***:8081;server ***.***.**.***:8082;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h5><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">upstream www.myweb.com{     least conn;     server ***.***.**.***:8081;server ***.***.**.***:8082 backup;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第六章-静态代理"><a href="#第六章-静态代理" class="headerlink" title="第六章 静态代理"></a>第六章 静态代理</h4><p>用nginx 静态代理,效率高</p><h5 id="第一种-后缀名"><a href="#第一种-后缀名" class="headerlink" title="第一种 后缀名"></a>第一种 后缀名</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">location ~ .*\.(css|htm|html|js|jpg|png|map3)${root /opt/static;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="第二种-目录"><a href="#第二种-目录" class="headerlink" title="第二种 目录"></a>第二种 目录</h5><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">location ~ .*/(css|js|img|images|image){root /opt/static;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="第七章-动静分离"><a href="#第七章-动静分离" class="headerlink" title="第七章 动静分离"></a>第七章 动静分离</h4><p>nginx只用与负载均衡</p><p>然后其他nginx负载静态资源</p><p>tomcat负载动态资源</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">  #tomcat  upstream www.p2p.com{            ip_hash;            server xxx.xxx.xxx.xxx:8081;           server xxx.xxx.xxx.xxx:8082;   }#处理静态资源的nginx   upstream static.p2p.com{server xxx.xxx.xxx.xxx:81;server xxx.xxx.xxx.xxx:82;   }   server {       listen       80;       server_name  localhost;       #charset koi8-r;       #access_log  logs/host.access.log  main;       location / {           root   html;           index  index.html index.htm;       }#静态资源转发给tomcat       location /p2p {           proxy_pass http://www.p2p.com;       }#静态资源转发给nginx       location  ~ .*/(css|js|img|images){                proxy_pass http://static.p2p.com;       }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第八章-虚拟主机"><a href="#第八章-虚拟主机" class="headerlink" title="第八章 虚拟主机"></a>第八章 虚拟主机</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">upstream beijing.myweb.com {server 192.168.1.101:8081;}upstream nanjing.myweb.com {server 192.168.1.101:8082;}upstream tianjing.myweb.com {server 192.168.1.101:8083;}server{listen80;server_namebeijing.myweb.com;location / {proxy_pass http://beijing.myweb.com;}}server{listen80;server_nametianjing.myweb.com;location / {proxy_pass http://tianjing.myweb.com;}}server{listen80;server_namenanjing.myweb.com;location / {proxy_pass http://nanjing.myweb.com;}}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置本地dns映射</p><p>在c盘的windows文件夹中的system32中的drivers中的etc中的hosts文件</p><p>C:\Windows\System32\drivers\etc</p><p>添加本地ip DNS 映射</p>]]></content>
      
      
      <categories>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装mysql80</title>
      <link href="/choodsire.github.io/2022/03/29/linux-an-zhuang-mysql80/"/>
      <url>/choodsire.github.io/2022/03/29/linux-an-zhuang-mysql80/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql8-X的坑"><a href="#Mysql8-X的坑" class="headerlink" title="Mysql8.X的坑"></a>Mysql8.X的坑</h1><h4 id="1-下载MySQL80"><a href="#1-下载MySQL80" class="headerlink" title="1. 下载MySQL80"></a>1. 下载MySQL80</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget https://repo.mysql.com/mysql80-community-release-el7-4.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-安装MySQL80"><a href="#2-安装MySQL80" class="headerlink" title="2. 安装MySQL80"></a>2. 安装MySQL80</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rpm -ivh mysql80-community-release-el7-4.noarch.rpmyum install mysql-serverIs this ok [y/d/N]: y#如果报此错误warning: /var/cache/yum/x86_64/7/mysql80-community/packages/mysql-community-client-8.0.28-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Signature, key ID 3a79bd29: NOKEYRetrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysqlThe GPG keys listed for the "MySQL 8.0 Community Server" repository are already installed but they are not correct for this package.Check that the correct key URLs are configured for this repository. Failing package is: mysql-community-client-8.0.28-1.el7.x86_64 GPG Keys are configured as: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql#使用该命令解决sudo yum --enablerepo=mysql80-community install mysql -community-server --nogpgcheck<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-启动mysqld服务"><a href="#3-启动mysqld服务" class="headerlink" title="3. 启动mysqld服务"></a>3. 启动mysqld服务</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">systemctl start mysqld#查看是否启动成功systemctl status mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="4-登入MySQL"><a href="#4-登入MySQL" class="headerlink" title="4. 登入MySQL"></a>4. 登入MySQL</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#获取默认随机密码grep 'temporary password' /var/log/mysqld.log#登入mysql -uroot -p#更改MySQL本地密码#密码规则由大小写字母数字符号组成方可，并且密码的长度要大于8位。ALTER USER  'root'@'localhost' IDENTIFIED BY 'Qt@123456';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-修改密码"><a href="#5-修改密码" class="headerlink" title="5. 修改密码"></a>5. 修改密码</h4><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#查看密码策略show variables like 'validate_password%';#修改密码策略set global validate_password.policy=0;#密码验证策略低要求set global validate_password.mixed_case_count=0;#密码至少要包含的小写字母个数和大写字母个数set global validate_password.number_count=0; #密码至少要包含的数字个数set global validate_password.special_char_count=0; #密码至少要包含的特殊字符数set global validate_password.length=0; #修改密码ALTER user 'root'@'localhost' IDENTIFIED BY '密码'#修改hostupdate user set host = ‘%’ where user = ‘root’;#刷新flush privileges; <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="6-大功告成"><a href="#6-大功告成" class="headerlink" title="6. 大功告成"></a>6. 大功告成</h4><h4 id="7-远程登入"><a href="#7-远程登入" class="headerlink" title="7. 远程登入"></a>7. 远程登入</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#临时关闭防火墙systemctl stop firewalld#或者永久关闭防火墙systemctl disable firewalld#查看防火墙状态systemctl status firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在虚拟机中搭建服务器</title>
      <link href="/choodsire.github.io/2022/03/29/ru-he-zai-xu-ni-ji-zhong-da-jian-fu-wu-qi/"/>
      <url>/choodsire.github.io/2022/03/29/ru-he-zai-xu-ni-ji-zhong-da-jian-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="如何在虚拟机中搭建服务器"><a href="#如何在虚拟机中搭建服务器" class="headerlink" title="如何在虚拟机中搭建服务器"></a>如何在虚拟机中搭建服务器</h2><h4 id="1-首先找到编辑菜单中的虚拟环境编辑器"><a href="#1-首先找到编辑菜单中的虚拟环境编辑器" class="headerlink" title="1. 首先找到编辑菜单中的虚拟环境编辑器"></a>1. 首先找到编辑菜单中的虚拟环境编辑器</h4><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0r5x7dw3oj30e708o3zf.jpg"></p><h4 id="2-打开更多设置"><a href="#2-打开更多设置" class="headerlink" title="2. 打开更多设置"></a>2. 打开更多设置</h4><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0r5xda61qj30k10j4tb1.jpg"></p><h4 id="3-设置桥接模式-为你电脑的WIFI连接方式"><a href="#3-设置桥接模式-为你电脑的WIFI连接方式" class="headerlink" title="3. 设置桥接模式,为你电脑的WIFI连接方式"></a>3. 设置桥接模式,为你电脑的WIFI连接方式</h4><p><img src="https://tva4.sinaimg.cn/large/008laG7jly8h0r6byh21nj30jy0bjwfm.jpg"></p><p>我这用的是英特尔的所有我选择这个</p><p>如何查看连接方式:</p><ol><li><p>在你的电脑上,找到控制面板-&gt;网路和Internet-&gt;网络和共享中心-&gt;更改适配器设置</p></li><li><p>找到你的WLAN-&gt;属性</p><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0r6c0a3m6j30eb0k7jt5.jpg"></p></li><li><p>这个连接时使用就是了</p></li><li><p>看你有没有上面图上的VMware Bridge Protocol 服务</p><ul><li><p>如果没有点击安装</p><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0r6hkd2zaj30if0eigmw.jpg"></p><p>如果没有这个,就从磁盘安装</p></li></ul><h4 id="4-设置虚拟机网络适配器为桥接模式"><a href="#4-设置虚拟机网络适配器为桥接模式" class="headerlink" title="4.  设置虚拟机网络适配器为桥接模式"></a>4.  设置虚拟机网络适配器为桥接模式</h4><p><img src="https://tva3.sinaimg.cn/large/008laG7jly8h0r6hunnv1j30qc0cmtag.jpg"></p><p>​    这样就可以从主机访问到我们的虚拟机了(局域网通信)</p><ul><li>在主机中打开cmd窗口,ping 你虚拟机ip</li><li>虚拟机ip 在 虚拟机中的控制台窗口中敲:  ifconfig -a 就能拿到,是最上面的呢一个ip</li><li>如果可以ping到,就表示成功了</li><li>可以尝试在虚拟机中访问百度,如果能正常上网,就表示没问题了</li></ul></li></ol><h4 id="5-内网穿透"><a href="#5-内网穿透" class="headerlink" title="5.  内网穿透"></a>5.  内网穿透</h4><p>​    小米球: <a href="http://ngrok.ciqiuwl.cn/">http://ngrok.ciqiuwl.cn/</a></p><ol><li><p>进入控制台,注册账号</p></li><li><p>登入,然后在商品管理中购买一个免费的</p></li><li><p>然后进入系统管理-&gt;账户管理-&gt;我的隧道</p></li><li><p>编辑你的隧道映射</p></li><li><p>进入同级目录的—&gt;我的账户</p></li><li><p>找到小米球Token,记下来待会要用哦</p></li><li><p>进入主页–&gt;了解小米球—&gt;下载Linux版本的</p></li><li><p>下完后解压,修改里面的 xiaomiqiu.conf 文件</p></li><li><p>只需要改这个 auth_token: token</p><p>token就是上面要你记得Token</p></li><li><p>把带xiaomiqiu的文件都放到你的linux虚拟机中(任意目录)</p></li><li><p>启动</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./xiaomiqiu start-all<span class="token comment">#或者</span>./xiaomiqiu_start.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>如果报Token错误</p><p>那么就得实名认证</p><p>回到我们的小米球控制台中的 —&gt; 我的账户 –&gt; 进行实名认证,这个应该不用教了</p><p>不过要想实名得到—-&gt; 商品管理中的—-&gt;商品列表中的—–&gt;购买0.5元的实名认证服务</p></li><li><p>实名完后再次启动</p></li><li><p>启动成功后,会打印出访问地址,有http和tcp和https的</p></li><li><p>到此就结束了</p><p>如果还想建立网站,可以通过搭建tomcat,nginx服务器</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven</title>
      <link href="/choodsire.github.io/2022/03/28/maven/"/>
      <url>/choodsire.github.io/2022/03/28/maven/</url>
      
        <content type="html"><![CDATA[<h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><h6 id="Maven管理多模块应用"><a href="#Maven管理多模块应用" class="headerlink" title="Maven管理多模块应用"></a>Maven管理多模块应用</h6><p><img src="https://img-blog.csdnimg.cn/732317ed54ec4bef8bca47fdd54d6dcd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBARnJlZXBlb3BsZVM=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p>packaging标签,指定打包类型</p><p>没写packaging标签,默认打jar包</p><p>父工程(可以被继承):</p><ul><li>packaging 必须为pom</li><li>把src目录删除掉,父工程没有代码</li></ul><p>子工程必须是maven工程:</p><ul><li>parent: 父工程</li></ul><h6 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h6><p>子工程pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>001-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">&gt;</span></span>../001-maven-parent/pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>002-maven-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>artifactId:父工程id</p><p>groupId:父工程的</p><p>version:父工程的</p><p>relativePath:父工程的相对路径</p><p>父工程pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>001-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>../002-maven-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>../003-maven-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>junit-version</span><span class="token punctuation">&gt;</span></span>4.10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>junit-version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${junit-version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>必须指明是pom</p><p>modules下放子工程的绝对路径</p><p>依赖放在dependencyManagement标签下,统一管理依赖,管理版本号</p><p>版本号放在properties下的自定义标签中</p><p>web项目的pom.xml文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>001-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">&gt;</span></span>../001-maven-parent/pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>003-maven-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>web项目的packaging必须是war</p><p>依赖放在dependencies标签下,为声明式依赖</p><p>不需要指定版本号了</p><h6 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h6><p>子项目放在父项目的路径下</p><p>不仅可以继承依赖,还可以继承插件</p><p>父项目的pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>004-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>maven-java-001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">&gt;</span></span>maven-web-001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>junit-version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>junit-version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.version</span><span class="token punctuation">&gt;</span></span>8.0.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${junit-version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>${maven.compiler.source}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>${maven.compiler.target}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子项目web的pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>004-maven-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-web-001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>子项目java的pom.xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-java-001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-java-0101<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jedis</title>
      <link href="/choodsire.github.io/2022/03/28/jedis/"/>
      <url>/choodsire.github.io/2022/03/28/jedis/</url>
      
        <content type="html"><![CDATA[<h3 id="jedis"><a href="#jedis" class="headerlink" title="jedis"></a>jedis</h3><p>pox.xml中的坐标</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接构造函数就可以连上redis</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//连接redis</span>        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"host"</span><span class="token punctuation">,</span><span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>jedis<span class="token punctuation">.</span><span class="token function">ping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>v<span class="token operator">-&gt;</span><span class="token punctuation">{</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span>jedis<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>记住要关闭防火墙:</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">systemctl stop firewalld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>jedis中开启事务</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//连接redis</span>        <span class="token class-name">Jedis</span> jedis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"host"</span><span class="token punctuation">,</span><span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">Transaction</span> transaction <span class="token operator">=</span> jedis<span class="token punctuation">.</span><span class="token function">multi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//这后面和普通的redis命令一样</span>    <span class="token comment">//使用transaction.能点出命令</span>    <span class="token comment">//把命令压入事务栈中</span>    <span class="token comment">//使用exec()执行</span>    transaction<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//使用discard停止事务</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reids主从</title>
      <link href="/choodsire.github.io/2022/03/28/reids-zhu-cong/"/>
      <url>/choodsire.github.io/2022/03/28/reids-zhu-cong/</url>
      
        <content type="html"><![CDATA[<h3 id="redis主从"><a href="#redis主从" class="headerlink" title="redis主从"></a>redis主从</h3><p>slaveof host port</p><p>查看集群信息</p><p>info replication</p><p>全量复制:</p><p>主机中的数据会同步复制到从机</p><p>增量复制:</p><p>主机中增改数据会自动同步复制到从机</p><p>读写从读:</p><p>从机只能进行读操作</p><p>主机宕机:</p><p>从机原地待命,还可以读操作</p><p>主机恢复:</p><p>一切正常</p><p>从机宕机:</p><p>主机少一个从机,其他正常</p><p>从机恢复:</p><p>需要重新设置主从关系</p><p>从机上位:<br>主机宕机,从机上位</p><p>从机中选一个,断开主从关系</p><p>slave no one</p><p>其他从机设置该上位主机为主机</p><p>slave host port</p><p>哨兵模式:</p><p>配置文件:redis_sentinel.conf</p><p>sentinel monitor dc-redis host port 投票数</p><p>启动哨兵模式:</p><p>redis-sentinel 配置文件</p><p>主机宕机,从机自动上位</p><p>主机恢复,自动从属于新的主机</p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis配置</title>
      <link href="/choodsire.github.io/2022/03/28/redis-pei-zhi/"/>
      <url>/choodsire.github.io/2022/03/28/redis-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="redis的配置文件"><a href="#redis的配置文件" class="headerlink" title="redis的配置文件"></a>redis的配置文件</h3><p>常用配置:</p><ul><li> port: 端口号</li></ul><p>日志配置:</p><ul><li>logfile : 日志文件</li><li>loglevel : 日志等级, debug,只会输出error notice:普通输出 warning:输出警告</li><li>databases:默认生成的数据库实例数量,默认16</li></ul><p>安全配置:</p><ul><li>requirepass: 密码 ,必须在protected-mode = yes才启用</li></ul><p>持久化:</p><ul><li>RDB策略: 在指定时间内,改变了指定次数,会自动存储到硬盘中,每次redis启动时会读取硬盘中的数据</li><li>save <seconds> <changes></changes></seconds></li><li>dbfilename: 配置持久化的文件</li><li>dir: 持久化文件所在目录</li></ul><ul><li>AOF策略:采用操作日志记录每一次写操作,每次redis启动时,都会重新执行一次,效率低下,默认不开启</li><li>appendonly:配置是否开启AOF策略</li><li>appendfilename:配置操作日志文件</li></ul>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis事务</title>
      <link href="/choodsire.github.io/2022/03/28/redis-shi-wu/"/>
      <url>/choodsire.github.io/2022/03/28/redis-shi-wu/</url>
      
        <content type="html"><![CDATA[<h3 id="redis事务"><a href="#redis事务" class="headerlink" title="redis事务"></a>redis事务</h3><p>事务: 把一组数据库命令放在一起执行,保证操作原子性</p><p>redis事务: 只能保证部分原子性</p><p>multi: 用来标记一个事务的开始</p><p>exec: 用来执行事务队列中的所有命令</p><ul><li>如果在压入事务队列中报错,则执行后所有命令都不执行</li><li>如果在压入事务队列中没报错,则在执行时报错,则不能保证原子性</li></ul><p>discard:清除所有已经压入队列中的命令,并且结束整个事务</p><p>乐观锁</p><p>watch:监控某一个键,当事务执行过程中,此键代表的值发生变化,则放弃执行,否则正常执行</p><p>unwatch:放弃监控所有键    </p>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis的逆向工程</title>
      <link href="/choodsire.github.io/2022/03/28/mybatis-de-ni-xiang-gong-cheng/"/>
      <url>/choodsire.github.io/2022/03/28/mybatis-de-ni-xiang-gong-cheng/</url>
      
        <content type="html"><![CDATA[<ol><li>先加入插件配置</li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--mybatis插件--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--放在项目根目录下--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configurationFile</span><span class="token punctuation">&gt;</span></span>GeneratorMapper.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configurationFile</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>verbose</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>verbose</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overwrite</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overwrite</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>创建配置文件</p><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0pvuk45nuj314j02gt9d.jpg"></p></li></ol><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">generatorConfiguration</span>        <span class="token name">PUBLIC</span> <span class="token string">"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span>        <span class="token string">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--指定mysql数据库驱动--&gt;</span>    <span class="token comment">&lt;!--&lt;classPathEntry location="E://repository-p2p//mysql//mysql-connector-java//5.1.43//mysql-connector-java-5.1.43.jar"/&gt;--&gt;</span>    <span class="token comment">&lt;!--导入属性配置--&gt;</span>    <span class="token comment">&lt;!--&lt;properties resource="generator.properties"&gt;&lt;/properties&gt;--&gt;</span>    <span class="token comment">&lt;!--指定特定数据库的jdbc驱动jar包的位置--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>classPathEntry</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>C:/Users/XIEJINGCHENG/.m2/repository/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>default<span class="token punctuation">"</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MyBatis3<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- optional，旨在创建class时，对注释进行控制，false生成注释,true无注释 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>commentGenerator</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suppressDate<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>suppressAllComments<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>commentGenerator</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--jdbc的数据库连接 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span>                <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.mysql.cj.jdbc.Driver<span class="token punctuation">"</span></span>                <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jdbc:mysql://localhost:3306/springdb?useUnicode=true<span class="token entity named-entity" title="&amp;">&amp;amp;</span>characterEncoding=UTF-8<span class="token entity named-entity" title="&amp;">&amp;amp;</span>serverTimezone=GMT%2B8<span class="token punctuation">"</span></span>                <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span>                <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>123<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制--&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaTypeResolver</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>forceBigDecimals<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaTypeResolver</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类            targetPackage     指定生成的model生成所在的包名            targetProject     指定在该项目下所在的路径|指定生成到的工程名称        --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.model<span class="token punctuation">"</span></span>                            <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>C:\Text\java\SpringBoot-prj\014-springboot-transactional\src\main\java<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token comment">&lt;!-- 是否允许子包，即targetPackage.schemaName.tableName --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>            <span class="token comment">&lt;!-- 是否对model添加 构造函数 true添加，false不添加--&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>constructorBased<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>            <span class="token comment">&lt;!-- 是否对类CHAR类型的列的数据进行trim操作 --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trimStrings<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>            <span class="token comment">&lt;!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 --&gt;</span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>immutable<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaModelGenerator</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mapper<span class="token punctuation">"</span></span>                         <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>C:\Text\java\SpringBoot-prj\014-springboot-transactional\src\main\resources<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sqlMapGenerator</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口        --&gt;</span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.bjpowernode.dao<span class="token punctuation">"</span></span>                             <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>C:\Text\java\SpringBoot-prj\014-springboot-transactional\src\main\java<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>XMLMAPPER<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaClientGenerator</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>student<span class="token punctuation">"</span></span> <span class="token attr-name">domainObjectName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Student<span class="token punctuation">"</span></span>               <span class="token attr-name">enableCountByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableUpdateByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>               <span class="token attr-name">enableDeleteByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">enableSelectByExample</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>               <span class="token attr-name">selectByExampleQueryId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>启动生成命令</p><p><img src="https://tva1.sinaimg.cn/large/008laG7jly8h0pvvrk9dsj30fa06tgmc.jpg"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot笔记</title>
      <link href="/choodsire.github.io/2022/03/28/springboot-bi-ji/"/>
      <url>/choodsire.github.io/2022/03/28/springboot-bi-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h3><h4 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h4><ol><li><p>为什么要使用SpringBoot</p><p>因为Spring,SpringMVC需要使用的大量配置文件(XML)文件</p><p>还需要配置各种对象,把使用的对象放入到Spring容器中才能使用对象</p><p>需要了解其他框架配置规则</p></li><li><p>SpringBoot相当于不需要配置文件的Spring+SpringMVC.常用的框架和第三方库都已经配置好了,拿来就可以使用了</p></li><li><p>SpringBoot开发效率高,使用方便多了</p></li></ol><h4 id="1-1-JavaConfig"><a href="#1-1-JavaConfig" class="headerlink" title="1.1 JavaConfig"></a>1.1 JavaConfig</h4><p>JavaConfig: 使用java类作为XML配置文件的替代,是配置Spring容器的纯java的方式.在这个java类这可以创建java对象,把对象放入spring容器中(注入到容器)</p><p>使用两个注解:</p><ul><li>@Configuration: 放在一个类的上面,表示这个类是作为配置文件使用的.</li><li>@Bean: 声明对象,把对象注入到容器中</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @Configuration:放在一个类的上面,表示这个类是作为配置文件使用的. */</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringConfig</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 创建方法,方法返回值是对象. 在该方法上面加入@Bean     * 方法的返回值对象就注入到容器中.     * @Bean: 把对象注入到spring容器中,相当于bean标签了     * 位于方法上面     *     * 不指定对象的名称,默认是方法名是id     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span> <span class="token function">createStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Student</span> s1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s1<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s1<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> s1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 指定对象名称     * @Bean的name属性,指定对象的名称(id),value属性也可以     */</span>    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"lisiStudent"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Student</span> <span class="token function">makeStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Student</span> s2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s2<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        s2<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> s2<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 使用xml作为配置文件     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> config <span class="token operator">=</span> <span class="token string">"beans.xml"</span><span class="token punctuation">;</span>        <span class="token class-name">ApplicationContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> myStudent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span>ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"myStudent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myStudent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">/**     * 使用JavaConfig     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">ApplicationContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">SpringConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"createStudent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">ApplicationContext</span> ctx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">SpringConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"lisiStudent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-ImportResource"><a href="#1-2-ImportResource" class="headerlink" title="1.2 @ImportResource"></a>1.2 @ImportResource</h4><p>@ImportResource 作用是导入其他的xml配置文件,等于在xml</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resources</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>其他配置文件<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>@ImportResource 中的属性locations和value一样指定配置文件,</p><p>可以是个数组,放在JavaConfig类上面</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@ImportResource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">,</span><span class="token string">"classpath:beans.xml"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-3-PropertyResource"><a href="#1-3-PropertyResource" class="headerlink" title="1.3 @PropertyResource"></a>1.3 @PropertyResource</h4><p>@PropertyResource: 读取properties属性配置文件,使用属性配置文件可以实现外部化配置,在程序代码外提供数据</p><p>相当于xml中</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>property-placeholder</span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>classpath:jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>步骤:</p><ol><li>在resources目录下,创建properties文件,使用k=v的格式提供数据</li><li>在PropertyResource指定properties文件的位置</li><li>使用@Value(value=${key})</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@ImportResource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"classpath:applicationContext.xml"</span><span class="token punctuation">,</span><span class="token string">"classpath:beans.xml"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token annotation punctuation">@PropertySource</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"classpath:config.properties"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.bjpowernode.vo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringConfig</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第二章SpringBoot"><a href="#第二章SpringBoot" class="headerlink" title="第二章SpringBoot"></a>第二章SpringBoot</h3><p>SpringBoot是Spring 的一个成员,可以简化Spring和SpringMVC的使用,他的核心还是IOC容器</p><p>特点:</p><ul><li><p>创建spring应用</p></li><li><p>内嵌Tomcat,jetty,Undertow服务器(不需要依赖war文件)</p></li><li><p>提供了sarter起步依赖,简化应用的配置</p><p>比如使用MyBatis框架,需要在Spring项目中,配置MyBatis的对象    ,Dao的代理对象</p><p>在SpringBoot项目中,在pom.xml中加入一个mybatis-spring-boot-starter依赖就可以完成</p></li><li><p>尽可能自动的配置Spring和第三方库(把spring中的,第三方库中的对象都创建好,放到容器中,开发人员可以直接使用)</p></li><li><p>提供健康检测,统计,外部化配置</p></li><li><p>不用生成代码,不用使用xml配置</p></li></ul><h4 id="2-2-创建springboot项目"><a href="#2-2-创建springboot项目" class="headerlink" title="2.2 创建springboot项目"></a>2.2 创建springboot项目</h4><h5 id="2-2-1第一种方式-使用Spring提供的初始化器-就是向导创建SpringBoot应用"><a href="#2-2-1第一种方式-使用Spring提供的初始化器-就是向导创建SpringBoot应用" class="headerlink" title="2.2.1第一种方式,使用Spring提供的初始化器,就是向导创建SpringBoot应用"></a>2.2.1第一种方式,使用Spring提供的初始化器,就是向导创建SpringBoot应用</h5><p>使用idea的</p><p><img src="https://tva1.sinaimg.cn/large/008laG7jly8h0pvd6py3oj314h0na406.jpg"></p><p>创建SpringBoot项目</p><p>使用的地址:<a href="https://start.spring.io/">https://start.spring.io</a></p><p><img src="https://tva4.sinaimg.cn/large/008laG7jly8h0pvi8i2yvj30hr0ffmyh.jpg"></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.6.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.bjpowernode<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>002-springboot-first<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--web相关--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--测试相关--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>        <span class="token comment">&lt;!--maven工具--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-2-2-第二章方式使用国内地址"><a href="#2-2-2-第二章方式使用国内地址" class="headerlink" title="2.2.2 第二章方式使用国内地址:"></a>2.2.2 第二章方式使用国内地址:</h5><p><a href="https://start.springboot.io/">https://start.springboot.io</a></p><p><img src="https://tva1.sinaimg.cn/large/008laG7jly8h0pvjjg6bhj30cw055jrl.jpg"></p><h5 id="2-2-3-使用maven"><a href="#2-2-3-使用maven" class="headerlink" title="2.2.3 使用maven"></a>2.2.3 使用maven</h5><p>直接创建一个maven项目</p><p>在pom.xml中加入springboot的父项目</p><p>加入起步依赖就行了</p><p>resources文件夹中创建static文件夹,template文件夹,application.properties文件</p><h4 id="2-3-注解的使用"><a href="#2-3-注解的使用" class="headerlink" title="2.3 注解的使用"></a>2.3 注解的使用</h4><p>@SpringBootApplication</p><p>复合注解:由</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootConfiguration</span><span class="token annotation punctuation">@EnableAutoConfiguration</span><span class="token annotation punctuation">@ComponentScan</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>组成</p><ol><li><p>@SpringBootConfiguration</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SpringBootConfiguration</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@AliasFor</span><span class="token punctuation">(</span>        annotation <span class="token operator">=</span> <span class="token class-name">Configuration</span><span class="token punctuation">.</span><span class="token keyword">class</span>    <span class="token punctuation">)</span>    <span class="token keyword">boolean</span> <span class="token function">proxyBeanMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//说明:使用了@SpringBootConfiguration注解标注的类,可以作为配置文件使用的,可以使用Bean声明对象,注入到容器</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>@EnableAutoConfiguration</p><p>启动自动配置,把java对象配置好,注入到spring容器中.</p><p>例如可以把mybatis的对象创建好,放入到容器中.</p></li><li><p>@ComponentScan</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** @ComponentScan 扫描器,找到注解,根据注解功能创建对象,给属性赋值等等* 默认扫描的包: @ComponentScan所在的类所在的包和子包*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="2-4-SpringBoot的配置文件"><a href="#2-4-SpringBoot的配置文件" class="headerlink" title="2.4 SpringBoot的配置文件"></a>2.4 SpringBoot的配置文件</h4><p>配置文件名称: application</p><p>扩展名有: properties(k=v); yml(k:v)</p><p>使用application.properties,application.yml</p><p>例1:application.properties</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#设置端口号</span><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8082</span><span class="token comment">#设置访问应用上下文路径, contextpath</span><span class="token attr-name">server.servlet.context-path</span><span class="token punctuation">=</span><span class="token attr-value">/myboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>例2:application.yml</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8083</span>  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /myboot2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果有两种,默认使用的是properties</p><p>推荐使用yml文件</p><h4 id="2-5-多环境配置"><a href="#2-5-多环境配置" class="headerlink" title="2.5 多环境配置"></a>2.5 多环境配置</h4><p>有开发环境,测试环境,上下环境</p><p>每个环境有不同的配置信息,例如端口,上下文,数据库url,用户名,密码等</p><p>使用多环境配置文件,可以方便切换不同的配置</p><p>使用方式: 创建多个配置文件,名称规则: application-环境名称.properties(yml)</p><p>环境名称自定义</p><p>如application-dev.properties application-test.yml</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#激活使用配置文件</span><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">online</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://tva1.sinaimg.cn/large/008laG7jly8h0pvkdxa0lj30cd05bwek.jpg"></p><h4 id="2-6-在配置文件中-自定义属性"><a href="#2-6-在配置文件中-自定义属性" class="headerlink" title="2.6 在配置文件中,自定义属性"></a>2.6 在配置文件中,自定义属性</h4><p>使用@Value(${}) 拿到值</p><p>或使用自定义类</p><p>在类上面用@ConfigurationProperties(prefix = “”)的方式拿到前缀对应的key与</p><p>类中的属性名对应的值</p><p>并加上@Component注解创建对象</p><p>加上以下配置,给自定义属性添加自动添加说明</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-configuration-processor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-7-在Spring-Boot中使用Jsp"><a href="#2-7-在Spring-Boot中使用Jsp" class="headerlink" title="2.7 在Spring Boot中使用Jsp"></a>2.7 在Spring Boot中使用Jsp</h4><p>Spring Boot不推荐使用Jsp,默认不能使用Jsp,使用Thymeleaf等模板代替</p><p>使用jsp得配置:</p><ul><li><p>加入一个处理jsp的依赖,负责编译jsp文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat.embed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-embed-jasper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>如果需要使用servlet,jsp,jstl的功能</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet.jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建一个存放jsp的目录,一般叫做webapp</p><p>index.jsp</p><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0pvmpjbbfj30cu095t8x.jpg"></p></li><li><p>需要在pom.xml指定jsp文件编译后的存放目录</p><p>META-INF/resources</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--指定jsp编译后的存放目录--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/webapp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>META-INF/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建Controller,访问jsp</p></li><li><p>```java<br>@RequestMapping(“/myjsp”)<br>public String doJsp(Model model){</p><pre><code>/*request.setAttribute("data","SpringBoot使用Jsp");*/model.addAttribute("data","SpringBoot使用Jsp");return "index";</code></pre><p>}</p><pre class="line-numbers language-none"><code class="language-none">- 在application.properties文件中配置视图解析器- ```properties  #配置视图解析器  spring.mvc.view.prefix=/  spring.mvc.view.suffix=.jsp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="2-8-使用容器"><a href="#2-8-使用容器" class="headerlink" title="2.8 使用容器"></a>2.8 使用容器</h4><p>通过代码,从容器中获取对象</p><p>通过SpringApplication.run(Application.class,args) 返回值来获取容器对象</p><p>ConfigurableApplicationContext: 接口,继承了ApplicationContext 是容器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">ConfigurableApplicationContext</span> ctx <span class="token operator">=</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserService</span><span class="token punctuation">)</span> ctx<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">"userService"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userService<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-9-CommandLineRunner接口-ApplicationRunner接口"><a href="#2-9-CommandLineRunner接口-ApplicationRunner接口" class="headerlink" title="2.9 CommandLineRunner接口,ApplicationRunner接口"></a>2.9 CommandLineRunner接口,ApplicationRunner接口</h4><p>这两个接口都有一个run方法,执行时间在容器对象创建好后,自动执行run()方法</p><p>可以完成自定义在容器对象创建好的一些操作</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CommandLineRunner</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@FunctionalInterface</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ApplicationRunner</span> <span class="token punctuation">{</span>    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ApplicationArguments</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第三章-Web组件"><a href="#第三章-Web组件" class="headerlink" title="第三章 Web组件"></a>第三章 Web组件</h3><p>拦截器,servlet,filter</p><h4 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h4><p>在SpringMVC中的拦截器</p><p>实现自定义拦截器:</p><ol><li><p>创建类实现SpringMVC中的HandlerInterceptor接口</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>需在SpringMVC的配置文件中,声明拦截器</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>intercepot</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>exclude-mapping</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>拦截器类全限定名称<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>intercepot</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">mvc:</span>interceptors</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>在SpringBoot中使用拦截器</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 自定义拦截器 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>    <span class="token comment">/**     *     * @param request     * @param response     * @param handler 被拦截的控制器对象     * @return boolean     *  true:可以被处理     *  false: 被截断     * @throws Exception     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行LoginInterceptor中的preHandle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyAppConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 添加拦截器对象,注入到容器中     * @param registry     */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">HandlerInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LoginInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> path <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"/user/**"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> excludePath <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"/user/login"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addPathPatterns</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">excludePathPatterns</span><span class="token punctuation">(</span>excludePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h4><p>使用步骤:</p><ol><li><p>创建Servlet类. 创建类继承HttpServlet</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"执行的是Servlet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"执行的是Servlet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>注册Servlet,让框架能找到Servlet</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebApplicationConfig</span><span class="token punctuation">{</span>    <span class="token comment">//定义方法,注册servlet对象</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">ServletRegistrationBean</span> <span class="token function">servletRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment">//public ServletRegistrationBean(T servlet, String... urlMappings)</span>        <span class="token class-name">ServletRegistrationBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"/myServlet"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><p>Filter试试Servlet规范中的过滤器,可以处理请求,对请求的参数,属性进行调整.常常在过滤器中处理字符编码</p><p>在框架中使用过滤器:</p><ol><li><p>创建自定义过滤器类</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 自定义过滤器 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> servletRequest<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> servletResponse<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行了MyFilter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>注册Filter过滤器对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebApplicationConfig</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">filterRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">FilterRegistrationBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">"/user/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="字符集过滤器"><a href="#字符集过滤器" class="headerlink" title="字符集过滤器"></a>字符集过滤器</h4><p>CharacterEncodingFilter:解决post请求中乱码的问题</p><p>在SpringMVC框架中,在web.xml注册过滤器.配置他的属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Nullable</span><span class="token keyword">private</span> <span class="token class-name">String</span> encoding<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">boolean</span> forceRequestEncoding<span class="token punctuation">;</span><span class="token keyword">private</span> <span class="token keyword">boolean</span> forceResponseEncoding<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>encoding 默认是ISO-8859-1</p><h5 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h5><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">filterRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">FilterRegistrationBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">CharacterEncodingFilter</span> filter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CharacterEncodingFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    filter<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    filter<span class="token punctuation">.</span><span class="token function">setForceEncoding</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    bean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">;</span>    bean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">"/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> bean<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#SpringBoot中配置了CharacterEncodingFilter,默认为ISO-8859-1</span><span class="token attr-name">server.servlet.encoding.enabled</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h5><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">server.servlet.encoding.charset</span><span class="token punctuation">=</span><span class="token attr-value">utf-8</span><span class="token attr-name">server.servlet.encoding.force-request</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span class="token attr-name">server.servlet.encoding.force-response</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="第四章-ORM操作MySQL"><a href="#第四章-ORM操作MySQL" class="headerlink" title="第四章 ORM操作MySQL"></a>第四章 ORM操作MySQL</h3><p>使用MyBatis框架操作数据,在SpringBoot框架集成MyBatis</p><p>使用步骤:</p><ol><li><p>mybatis起步依赖:完成mybatis对象自动配置,对象放在容器中</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--mybatis起步依赖--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--msysql驱动--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>pom.xml 指定把src/main/java目录中的xml文件包含到classpath中</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建实体类Student</p></li><li><p>创建Dao接口StudentDao,创建一个查询学生的方法</p><p>@Mapper</p></li><li><p>创建Dao接口对应的Mapper文件,xml文件,写sql语句</p></li><li><p>创建Service层对象,创建StudentService接口和他的实现类.去调用dao对象的方法,完成数据库操作</p><p>@Service</p></li><li><p>创建Controller对象,访问Service</p></li><li><p>写application.properties文件</p><p>配置数据库的连接信息.</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#mysql新版驱动类</span><span class="token attr-name">spring.datasource.driver-class-name</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">spring.datasource.url</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://localhost:3306/springdb?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=GMT%2B8</span><span class="token attr-name">spring.datasource.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">spring.datasource.password</span><span class="token punctuation">=</span><span class="token attr-value">123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="第一种方式-Mapper"><a href="#第一种方式-Mapper" class="headerlink" title="第一种方式: @Mapper"></a>第一种方式: @Mapper</h4><p>@Mapper: 放在dao接口上面</p><h4 id="第二种方式-MapperScan"><a href="#第二种方式-MapperScan" class="headerlink" title="第二种方式: @MapperScan"></a>第二种方式: @MapperScan</h4><p>在Application上方加入@MapperScan(basepackages = {“”,””})</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.bjpowernode.dao"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="第三种-mapper文件与dao接口分离"><a href="#第三种-mapper文件与dao接口分离" class="headerlink" title="第三种: mapper文件与dao接口分离"></a>第三种: mapper文件与dao接口分离</h4><p><img src="https://tva2.sinaimg.cn/large/008laG7jly8h0pvnf0xukj30df03ojre.jpg"></p><p>放到mapper文件夹中</p><p>配置位置</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#指定mapper文件位置</span><span class="token attr-name">mybatis.mapper-locations</span><span class="token punctuation">=</span><span class="token attr-value">classpath:mapper/*.xml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置日志信息</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#配置mybatis日志</span><span class="token attr-name">mybatis.configuration.log-impl</span><span class="token punctuation">=</span><span class="token attr-value">org.apache.ibatis.logging.stdout.StdOutImpl</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="4-4-事务"><a href="#4-4-事务" class="headerlink" title="4.4 事务"></a>4.4 事务</h4><p>Spring框架中的事务:</p><ol><li><p>管理事务的对象: 事务管理器(接口,接口有很多实现类)</p><p>例如: 使用Jdbc或mybatis访问数据库,使用的事务管理器: DataSourceTransactionManager</p></li><li><p>声明式事务: 在xml配置文件或使用注解说明事务控制的内容</p><p>控制事务: 隔离级别,传播行为,超时时间</p></li><li><p>事务的处理方式</p><ol><li>Spring框架中的@Transactional</li><li>aspectj框架可以在xml配置文件中,声明事务控制的内容</li></ol></li></ol><p>SpringBoot中使用事务:上面两种方式都可以使用</p><ol><li>在业务方法的上面加入@Transational,加入注解后,方法就有事务功能了</li><li>明确在主启动类的上面加入@EnableTransactionManager 不加可以用</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @Transactional 启动事务 * 默认:使用库的隔离级别,REQUIRED传播行为,超时时间-1 * @param student * @return */</span><span class="token annotation punctuation">@Transactional</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">addStudent</span><span class="token punctuation">(</span><span class="token class-name">Student</span> student<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> rows <span class="token operator">=</span> studentMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//抛出一个异常,来回滚事务</span>    <span class="token comment">/*int m = 10 / 0;*/</span>    <span class="token keyword">return</span> rows<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@EnableTransactionManagement</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">"com.bjpowernode.dao"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="第五章-接口架构风格-RESTful"><a href="#第五章-接口架构风格-RESTful" class="headerlink" title="第五章 接口架构风格-RESTful"></a>第五章 接口架构风格-RESTful</h3><p>接口​(api):应用程序接口（<a href="https://baike.baidu.com/item/%E8%8B%B1%E8%AF%AD/109997">英语</a>：<strong>A</strong>pplication <strong>P</strong>rogramming <strong>I</strong>nterface，简称：<strong>API</strong>），又称为<strong>应用编程接口</strong>，就是<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6">软件</a>系统不同组成部分衔接的约定。由于近年来软件的规模日益庞大，常常需要把复杂的系统划分成小的组成部分，编程接口的设计十分重要。程序设计的实践中，编程接口的设计首先要使软件系统的职责得到合理划分。良好的<a href="https://baike.baidu.com/item/%E6%8E%A5%E5%8F%A3/2886384">接口</a>设计可以降低系统各部分的相互依赖，提高组成单元的<a href="https://baike.baidu.com/item/%E5%86%85%E8%81%9A%E6%80%A7/4973441">内聚性</a>，降低组成单元间的<a href="https://baike.baidu.com/item/%E8%80%A6%E5%90%88/2821124">耦合</a>程度，从而提高系统的维护性和扩展性。</p><p>接口: 可以指访问servlet,controller的url,调用其他程序的函数</p><p>RESTful架构风格</p><ol><li><p>REST:(Representational State Transfer 表现层状态转移)</p><p>是一种接口的架构风格和设计理念,不是标准</p><p>优点:更简洁,更有层次</p></li><li><p>REST中的要素:</p><p>用REST表示资源和对资源的操作. 在互联网中,表示一个资源或者一个操作</p><p>资源使用url表示的,在互联网,使用的图片,视频,文本,网页等都是资源</p><p>资源是用名词表示.</p></li></ol><p>对资源:</p><p>url使用名词表示</p><p>get:查询资源</p><p>​    url: <a href="http://localhost:8080/myboot/student/1001">http://localhost:8080/myboot/student/1001</a></p><p>post:创建资源</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://localhost:8080/myboot/student<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>put:更新资源</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://localhost:8080/myboot/student<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_method<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PUT<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>delete:删除资源</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://localhost:8080/myboot/student/1001<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要的分页,排序等参数,依然放在url后面,例如</p><p><a href="http://localhost:8080/myboot/students?page=1&amp;pageSize=20">http://localhost:8080/myboot/students?page=1&amp;pageSize=20</a></p><ol start="3"><li><p>一句话说明REST:</p><p>使用url表示资源,使用http动作操作资源</p></li><li><p>注解</p><ul><li>@PathVariable: 从url中获取数据</li><li>@GetMapping: 支持的get请求方式,等同于@RequestMapping(method=RequestMethod.GET)</li><li>@PostMapping:支持post请求,等同于@RequestMapping(method=RequestMethod.POST)</li><li>@PutMapping:支持put请求,等同于@RequestMapping(method=RequestMethod.PUT)</li><li>@DeleteMapping:支持delete请求方式,,等同于@RequestMapping(method=RequestMethod.DELETE)</li><li>@RestController: 符合注解,是@Controller和@ResponseBody组合,在类上面使用@RestController,表示当类的所有方法都加入了@ResponseBody</li></ul></li></ol><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token comment">#可以发送请求的过滤器打开</span><span class="token attr-name">spring.mvc.hiddenmethod.filter.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果是put,delete请求要配置以上信息</p><h4 id="5-2-在页面中或者ajax中-支持put-delete请求"><a href="#5-2-在页面中或者ajax中-支持put-delete请求" class="headerlink" title="5.2 在页面中或者ajax中,支持put,delete请求"></a>5.2 在页面中或者ajax中,支持put,delete请求</h4><p>在web.xml中配置过滤器: org.springframework.web.filter.HiddenHttpMethodFilter</p><p>SpringBoot中</p><p>在配置文件中配置</p><p>spring.mvc.hiddenmethod.filter.enabled=true</p><p>用于将请求中的post请求转换为put,delete</p><p>页面中使用隐藏域</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>student/test<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hidden<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_method<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>put<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>请求方式加上请求url必须保证唯一性</p><h3 id="第六章-Redis"><a href="#第六章-Redis" class="headerlink" title="第六章 Redis"></a>第六章 Redis</h3><p>redis: 一个NoSql数据库,常用作缓存使用(cache)</p><p>Redis的数据类型: string,hash,set,zset,list</p><p>Redis是一个中间件: 是一个独立的服务器</p><p>java中著名的客户端: Jedis,lettuce,Redisson</p><p>Spring,SpringBoot中有一个RedisTemplate(StringRedisTemplate),处理和redis交互</p><p>RedisTemplate使用的lettuce客户端库</p><p>redis的起步依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>程序中使用RedisTemplate类的方法来操作redis数据,底层是用的lettuce客户端方法</p><h4 id="6-2-对比StringRedisTemplate和RedisTemplate"><a href="#6-2-对比StringRedisTemplate和RedisTemplate" class="headerlink" title="6.2 对比StringRedisTemplate和RedisTemplate"></a>6.2 对比StringRedisTemplate和RedisTemplate</h4><p>StringRedisTemplate: 把k,v都当成string处理,使用的是String的序列化,可读性好</p><p>RedisTemplate: 把k,v经过了序列化存到redis,k,v是序列化的内容,不能直接识别</p><p>默认采用jdk序列化,可以修改为其他序列化</p><p>序列化:</p><p>​    把对象转化为可传输的字节序列的过程</p><p>反序列化:</p><p>​    把字节序列还原为对象的过程</p><p>kryo(效率高),jdk,json,xml,Hession,protofbuff</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 注入RedisTemplate类 * RedisTemplate&lt;String,String&gt; * RedisTemplate&lt;Object,Object&gt; */</span><span class="token annotation punctuation">@Resource</span><span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span><span class="token annotation punctuation">@Resource</span><span class="token keyword">private</span> <span class="token class-name">StringRedisTemplate</span> stringRedisTemplate<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">/</span>设置<span class="token class-name">RedisTemplate</span>序列化<span class="token comment">/** * 可以设置key的序列化,也可以设置value的序列化 */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/redis/set/{k}/{v}"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addString</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> k<span class="token punctuation">,</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">String</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"定义RedisTemplate的序列化"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>json序列化</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 使用json序列化,把java对象转为json存储 */</span><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/redis/addjson"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token class-name">Student</span> student <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    student<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//把值作为json序列化</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">,</span>student<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"json序列化"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/redis/getjson"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getjson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//把值作为json反序列化</span>    redisTemplate<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Jackson2JsonRedisSerializer</span><span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Object</span> obj <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"student"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token string">"json反序列化:"</span> <span class="token operator">+</span> obj<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.redis.host</span><span class="token punctuation">=</span><span class="token attr-value">这里写你的主机ip</span><span class="token attr-name">spring.redis.port</span><span class="token punctuation">=</span><span class="token attr-value">6379</span><span class="token comment">#spring.redis.password=</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="第七章-SpringBoot基础Dubbo"><a href="#第七章-SpringBoot基础Dubbo" class="headerlink" title="第七章 SpringBoot基础Dubbo"></a>第七章 SpringBoot基础Dubbo</h3><h4 id="7-1-SpringBoot中的文档"><a href="#7-1-SpringBoot中的文档" class="headerlink" title="7.1 SpringBoot中的文档"></a>7.1 SpringBoot中的文档</h4><p><a href="https://github.com/apache/dubbo-spring-boot-project">https://github.com/apache/dubbo-spring-boot-project</a></p><ol><li><p>创建maven项目,放公共接口</p></li><li><p>创建服务提供者,springboot项目</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--加入dubbo依赖--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.7.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo-dependencies-zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.7.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加入公共接口的gav坐标</p></li><li><p>```java<br>/**</p><ul><li><p>使用注解暴露服务</p></li><li><p>/<br>//@DubboService(interfaceClass = StudentService.class,version = “1.0”,timeout = 5000)<br>@DubboService(version = “1.0”)<br>public class StudentServiceImpl implements StudentService {<br>  @Override<br>  public Student queryStudent(Integer id) {</p><pre><code>  Student student = new Student();  if(1001 == id){      student.setId(1001);      student.setName("张三");      student.setAge(29);  }else{      student.setId(1002);      student.setName("李四");      student.setAge(20);  }  return student;</code></pre><p>  }<br>}</p><pre class="line-numbers language-none"><code class="language-none">```properties#配置服务名称spring.application.name=studentservice-provicer#配置扫描的包,扫描的@DubboServicedubbo.scan.base-packages=com.bjpowernode.service.Impl#配置dubbo协议#dubbo.protocol.name=dubbo#dubbo.protocol.port=20881#注册中心dubbo.registry.address=zookeeper://localhost:2181<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @EnableDubbo 启动Dubbo * 包含:@EnableDubboConfig 只用这个也可以 * @DubboComponentScan */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDubbo</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li><p>排除掉log4j重复</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>dubbo-dependencies-zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.7.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-reload4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>服务消费者</p></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DubboController</span> <span class="token punctuation">{</span>    <span class="token comment">/**     * 引用远程服务,把创建好的代理对象,注入给studentService     */</span>    <span class="token comment">/*@DubboReference(interfaceClass = StudentService.class,version = "1.0")*/</span>            <span class="token comment">//没有使用interfaceClass,默认就是引用类型的数据类型</span>    <span class="token annotation punctuation">@DubboReference</span><span class="token punctuation">(</span>version <span class="token operator">=</span> <span class="token string">"1.0"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token class-name">StudentService</span> studentService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/query"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">queryStudent</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">Student</span> student <span class="token operator">=</span> studentService<span class="token punctuation">.</span><span class="token function">queryStudent</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"调用远程接口获取对象: "</span> <span class="token operator">+</span> student<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">consumer-application</span><span class="token attr-name">dubbo.registry.address</span><span class="token punctuation">=</span><span class="token attr-value">zookeeper://localhost:2181</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>interfaceClass可以不写,默认就是引用类型的数据类型</p><h3 id="第八章-打包"><a href="#第八章-打包" class="headerlink" title="第八章 打包"></a>第八章 打包</h3><h4 id="8-1-打war包"><a href="#8-1-打war包" class="headerlink" title="8.1 打war包"></a>8.1 打war包</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 继承SpringBootServletInitializer这个类,才能使用独立的tomcat服务器 */</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token keyword">extends</span> <span class="token class-name">SpringBootServletInitializer</span><span class="token punctuation">{</span>   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">protected</span> <span class="token class-name">SpringApplicationBuilder</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">SpringApplicationBuilder</span> builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">sources</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--打包后的名字--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>myboot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/webapp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>META-INF/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>必须指定resources的resource标签,否则访问动态资源404</p><p>指定打包类型</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>war<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="8-2-打jar包"><a href="#8-2-打jar包" class="headerlink" title="8.2 打jar包"></a>8.2 打jar包</h4><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>myboot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/webapp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>targetPath</span><span class="token punctuation">&gt;</span></span>META-INF/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>targetPath</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>spring-boot-maven-plugin 必须是1.4.2.RELEASE,否则访问404</p><p>这个也是必须有的</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">&gt;</span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">&gt;</span></span>**/*.*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">&gt;</span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>否则可能会报404错误</p><h3 id="第九章-Thymeleaf模板技术"><a href="#第九章-Thymeleaf模板技术" class="headerlink" title="第九章 Thymeleaf模板技术"></a>第九章 Thymeleaf模板技术</h3><p>Thymeleaf: 是使用java开发的模板技术,在服务端运行.把处理后的数据发送给浏览器</p><p>模板是作视图层的.显示数据的.Thymeleaf是基于Html语言的,Thymeleaf语法是应用在html标签中.Springboot框架集成Thymeleaf,使用Thymeleaf代替jsp</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token attr-name">spring.thymeleaf.cache</span><span class="token punctuation">=</span><span class="token attr-value">false</span><span class="token attr-name">spring.thymeleaf.mode</span><span class="token punctuation">=</span><span class="token attr-value">HTML</span><span class="token attr-name">spring.thymeleaf.encoding</span><span class="token punctuation">=</span><span class="token attr-value">UTF-8</span><span class="token attr-name">spring.thymeleaf.prefix</span><span class="token punctuation">=</span><span class="token attr-value">classpath:templates/</span><span class="token attr-name">spring.thymeleaf.suffix</span><span class="token punctuation">=</span><span class="token attr-value">.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>spring.thymeleaf.prefix=classpath:templates/</p><p>指定了模板放在哪里</p><p>spring.thymeleaf.suffix=.html</p><p>指定了模板的后缀名</p><p>spring.thymeleaf.mode=HTML</p><p>指定了模板类型为HTML</p><p>spring.thymeleaf.cache=false</p><p>关闭缓存,便于调试</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>helloThymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${data}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>想要显示数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>xmlns:th=”<a href="http://www.thymeleaf.org&quot;/">http://www.thymeleaf.org"</a></p><p>引入约束,有提示,便于开发</p><p>th:text=”${data} : 替换text内容</p><p>Thymeleaf起步依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-1-表达式"><a href="#9-1-表达式" class="headerlink" title="9.1 表达式"></a>9.1 表达式</h4><ol><li><p>标准变量表达式 </p><p>${key} </p><p> 获取key中的值,key是request作用于中的key</p><p>在页面中使用th:text=”${key}”</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>标准变量表达式: ${key}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 400px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${site}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>获取SysUser对象的属性值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.id}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.sex}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.age}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>用get方法<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.getId()}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.getName()}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.getSex()}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser.getAge()}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>选择变量表达式(星号表达式)</p><p>*{key}</p><p>作用: 获取这个key对应的数据, *{key}需要和th:object 这个属性一起使用</p><p>目的是简单获取对象的属性值</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>选择变量表达式: *{key}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 400px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>通过*{}获取SysUser对象的属性值<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${myuser}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{id}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{sex}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{age}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{myuser.name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>链接表达式</p><p>@{url}</p><p>作用:表示链接</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>链接绝对路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{http://www.baidu.com}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>链接到百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>链接的是相对地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{/tpl/queryAccount}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>相对地址,没有参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>链接的相对地址,使用字符串连接参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{<span class="token punctuation">'</span>/tpl/queryAccount?id=<span class="token punctuation">'</span> + ${userId}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取model中参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>推荐使用传参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{/tpl/queryAccount/(id=${userId})}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>传参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>多个参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{/tpl/queryUser(name=<span class="token punctuation">'</span>张三<span class="token punctuation">'</span>,age=14)}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>传递多个参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>RESTFULL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{<span class="token punctuation">'</span>/tpl/queryUser/<span class="token punctuation">'</span>+ ${username} +<span class="token punctuation">'</span>/<span class="token punctuation">'</span>+${userId}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>使用RESTful风格<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="9-2-Thymeleaf属性"><a href="#9-2-Thymeleaf属性" class="headerlink" title="9.2 Thymeleaf属性"></a>9.2 Thymeleaf属性</h4><p>属性是放在html元素中的,就是html元素的属性,加上了th前缀.属性的作用不变,加上th,属性的值由模板引擎处理的,在属性可以使用变量表达式</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>模板属性<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name"><span class="token namespace">th:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{https://code.jquery.com/jquery-3.6.0.min.js}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>text/javascript<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>margin-left: 400px<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>属性使用,在html元素的属性上加入th<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">th:</span>action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{/loginServlet}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${methodAttr}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">th:</span>type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${paramname}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${uservalue}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><span class="token namespace">th:</span>type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>按钮<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>color:red<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>这是模板的例子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name"><span class="token namespace">th:</span>type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>text/javascript<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#btn'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'点击了按钮哈哈哈'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-3-each"><a href="#9-3-each" class="headerlink" title="9.3 each"></a>9.3 each</h4><p>each循环,可以循环List,Array,Map</p><p>语法:</p><p>在一个html标签中,使用th:each    </p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>循环成员,循环变量:${key}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${循环成员}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!--循环变量可以不定义,more是循环成员Stat--&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 400px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user,userIter:${myusers}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{id}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{sex}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{age}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1px<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5px<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0px<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span><span class="token punctuation">&gt;</span></span>学生信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>num<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>index<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>current<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user,userIter:${myusers}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${userIter.count}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>num<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${userIter.index}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${userIter.current}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>current<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${userIter.size}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>size<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{id}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{sex}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*{age}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>even:判断是否是偶数</p><p>odd:判断是否是奇数</p><p>first:判断是否是第一个</p><p>last:判断是否是最后一个</p><p>循环Array,和循环Map和上述一样</p><p>不过Map,多了key和value</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user:${userMap}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user.key}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>key<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user.value.id}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user.value.name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user.value.sex}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>sex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${user.value.age}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-4-条件判断if"><a href="#9-4-条件判断if" class="headerlink" title="9.4 条件判断if"></a>9.4 条件判断if</h4><p>语法: th:if=”boolean 条件”, 条件为true显示体内容,反正不显示</p><p>​    th:unless 是th:if的一个相反操作</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>if 使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${sex==<span class="token punctuation">'</span>m<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>性别是男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${isLogin}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>已经登录系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${age &gt; 20}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>年龄大于20<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--空字符是真--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>name是空字符串<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token comment">&lt;!--null是假--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${isOld}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>isOld是null<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>unless 使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${sex==<span class="token punctuation">'</span>f<span class="token punctuation">'</span>}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>性别是男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${isLogin}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>登入系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>unless</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${isOld}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>isOld是null<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-5-switch"><a href="#9-5-switch" class="headerlink" title="9.5 switch"></a>9.5 switch</h4><p>和java的switch一样</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>switch 使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${sex}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>f<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>未知<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-6-th-inline"><a href="#9-6-th-inline" class="headerlink" title="9.6 th:inline"></a>9.6 th:inline</h4><ol><li><p>内联text:在html标签外,获取表达式的值</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>显示的姓名是:[[${key}]]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>内联 text<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是[[${name}]],年龄是[[${age}]]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>我是[[${name}]],性别是[[${sex}]]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>还可以内联JavaScript</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>inline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>$<span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>$<span class="token punctuation">{</span>age<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'姓名是:'</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">' 性别是:'</span> <span class="token operator">+</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="9-7-字面量"><a href="#9-7-字面量" class="headerlink" title="9.7 字面量"></a>9.7 字面量</h4><ol><li><p>文本字面量</p><p>被单引号包围的字符串为文本字面量</p></li><li><p>数字字面量</p><p>直接写的数字</p></li><li><p>boolean字面量</p><p>模板中的布尔</p></li><li><p>null字面量</p><p>在模板中直接写的null</p></li></ol><h4 id="9-8-字符串连接"><a href="#9-8-字符串连接" class="headerlink" title="9.8 字符串连接"></a>9.8 字符串连接</h4><ol><li><p>使用 + 连接 ‘’字符串字面量和${}</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@{<span class="token punctuation">'</span>/tpl/queryAccount?id=<span class="token punctuation">'</span> + ${userId}}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>获取model中参数<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>使用 ||</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>|姓名${name}|<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>字符串连接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>|姓名:${name},年龄:${age},性别:${sex}|<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-9-运算符"><a href="#9-9-运算符" class="headerlink" title="9.9 运算符"></a>9.9 运算符</h4><ol><li>+ - * / %</li><li>gt lt ge le</li><li>eq ne</li><li>三元运算符</li></ol><h4 id="9-10-内置对象"><a href="#9-10-内置对象" class="headerlink" title="9.10 内置对象"></a>9.10 内置对象</h4><p>#request 表示 HttpServletRequest</p><p>#session 表示 HttpSession</p><p>session 表示 HttpSession Map对象,用于获取值</p><p>可以在模板中直接使用</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 500px</span><span class="token punctuation">"</span></span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>内置对象 #requset #session session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>获取作用域中的数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${#request.getAttribute(<span class="token punctuation">'</span>requestData<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${#session.getAttribute(<span class="token punctuation">'</span>loginname<span class="token punctuation">'</span>)}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>${session.sessionData}<span class="token punctuation">'</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>P</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>#ctx</p><p>#local</p><p>#response</p><p>application</p><p>等等</p><h4 id="9-11-内置工具类"><a href="#9-11-内置工具类" class="headerlink" title="9.11 内置工具类"></a>9.11 内置工具类</h4><p>#datas 日期类</p><p>#numbers 数字工具类</p><p>#strings 字符串工具类</p><p>#lists list工具类</p><h4 id="9-12-null值处理"><a href="#9-12-null值处理" class="headerlink" title="9.12 null值处理"></a>9.12 null值处理</h4><p>使用?</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>${zoo?.cat?.name}<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="9-13-模板"><a href="#9-13-模板" class="headerlink" title="9.13 模板"></a>9.13 模板</h4><p>模板是内容复用,定义一次,多次使用</p><p>模板的使用:</p><ol><li>定义模板</li><li>使用模板</li></ol><pre class="line-numbers language-html" data-language="html"><code class="language-html">th:fragment="模板自定义名称"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>引用模板:</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">1. ~{templatename :: selector}2. templatename :: selectortemplatename 所在文件名selector 模板自定义的名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>th:insert</p><p>th:include</p><p>复用整个文件</p><p>templatename :: html</p><p>或者</p><p>templatename</p><h3 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h3><h4 id="10-1-注解"><a href="#10-1-注解" class="headerlink" title="10.1 注解"></a>10.1 注解</h4><pre class="line-numbers language-html" data-language="html"><code class="language-html">Spring + SpringMVC + SpringBoot创建对象的:@Controller: 放在类上面,创建控制器对象,注入到容器中@RestController: 放在类上面,创建控制器对象,注入到容器中,并且类里面的方法自动加上@ResponseBody,这些类的方法返回值都是数据@Service: 放在业务层的实现类上面,创建service对象,注入到容器@Repository: 放在dao层的实现类上面,创建dao对象,注入到容器.没有用这个注解,是因为mybatis框架,dao对象是mybatis通过代理生成的,不需要使用@Repository@Component: 放在类上面,创建此类的对象,注入到容器中赋值的:@Value: 简单类型的赋值@Autowried: 引用类型赋值自动注入,支持byName,默认byType.放在属性值上面,也可以放在构造函数上面,推荐是放在构造方法上面.@Qualifer: 给引用类型赋值的,使用byName方式@Resource: 来自jdk中的定义, 实现引用类型的自动注入,支持byName,byType.默认是byName.如果byName失败,再使用byType注入.其他:@Configuration: 放在类上面,表示这个是个配置类,想当于xml配置文件@Bean: 放在方法上面,把方法的返回值对象,注入到容器中@ImportResource: 加载其他的xml配置文件,把文件中的对象注入到spring容器中@PropertySource: 读取其他的properties属性配置文件@ComponentScan: 扫描器,指定报名,扫描注解的@ResponseBody: 放在方法上面,表示方法的返回值是数据不是视图@RequestBody: 把请求体中的数据,读取出来,转为java对象使用@ControllerAdvice: 控制器增强,放在类上面,表示此类提供了方法,可以对controller增加功能@ExceptionHandler: 处理异常的,放在方法的上面@Transactional: 处理事务的,放在service实现类的public方法上面,表示此方法有事务SpringBoot中@SpringBootApplication: 放在启动类上面,包含了@SpringBootConfiguration@EnableAutoConfiguration,@ComponentScanMybatis:@Mapper: 放在dao接口的上面,让MyBatis找到接口,创建他的代理对象,注入到容器中@MapperScan: 放在启动类的上面,指定扫描的包,把这个包中的所有接口都创建代理对象,注入到容器中@Param: 放在dao接口的方法的形参前面,作为命名参数使用的@EnableTransactionManagement: 启动事务Dubbo:@DubboService: 在提供者端使用的,暴露服务的,放在接口的实现类上面@DubboReference: 在消费者端使用的,引用远程服务,放在属性的上面使用的@EnableDubbo: 放在主类的上面,表示当前引用启用Dubbo功能配置文件:@Value(${}): 拿到配置文件的中key的值 @ConfigurationProperties(prefix = ""): 拿到配置文件中,前缀匹配的key与该类中的属性匹配.放在类上面RESTful:@RestController: 放在类上面,创建控制器对象,注入到容器中,并且类里面的方法自动加上@ResponseBody,这些类的方法返回值都是数据@GetMapping: 处理get请求@PostMapping: 处理post请求@PutMapping: 处理put请求@DeleteMapping: 处理delete请求@PathVariable: 从url中拿数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/choodsire.github.io/2022/03/27/ru-men-mysql/"/>
      <url>/choodsire.github.io/2022/03/27/ru-men-mysql/</url>
      
        <content type="html"><![CDATA[<p>title: 入门mysql<br>date: 2022-03-12 18:06:34<br>author: 会飞的企鹅<br>tags: </p><ul><li> mysql</li></ul><p>  categories: mysql</p><h1 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h1><p>从今天开始，我们将进入系列课程的 第四模块 的学习，这个模块就是给大家讲解MySQL数据库。</p><p>以前，在开发程序时，我们会把很多的数据和信息存储到某个文件夹中的文件中，例如：user.txt 、db.xlsx 等。</p><p>现在，有那么一个叫：数据库管理系统（DBMS，Database Management System）的软件，可以帮助我们实现对文件夹中的文件进行操作，而我们只要学习DBMS能识别的指令， 就能控制它去帮助我们实现的文件和文件夹的处理。例如：</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210507211911641.png" alt="image-20210507211911641"></p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508090834860.png" alt="image-20210508090834860"></p><p>数据库管理系统（DBMS）专注于帮助开发者解决数据存储的问题，这样开发者就可以把主要精力放在实现业务功能上了。</p><p>业内有很多的的数据库管理系统产品，例如：</p><ul><li><strong>MySQL</strong>，原来是sun公司，后来被甲骨文收购。现在互联网企业几乎都在使用。【免费 + 收费】</li><li>Oracle，甲骨文。收费，一般国企、事业单位居多。【收费】</li><li>Microsoft SQL Server，微软。【收费】</li><li>DB2，IBM。【免费 + 收费】</li><li>SQLite，D. Richard Hipp个人开发。【免费】</li><li>Access， 微软。【收费】</li><li>PostgreSQL，加州大学伯克利分校。【免费】</li><li>等众多..</li></ul><p>由于各大公司都是使用MySQL，所以我们课程主要给大家讲解MySQL数据库。</p><p>在项目开发中想要基于MySQL来进行数据存储，大致应该怎么做呢？</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508102020237.png" alt="image-20210508102020237"></p><p>本系列的MySQL模块会分为5部分来讲解：</p><ul><li>MySQL入门，安装和快速应用Python实现数据库的操作。</li><li>必备SQL和授权，学习更多必备的指令让数据库实现更多业务场景。</li><li>SQL强化和实践，强化练习必备”指令“（项目开发写的最多）。</li><li>索引和函数以及存储过程，掌握常见性能提升手段以及那些应用不是很频繁却又需了解的知识点。</li><li>Python操作MySQL和应用，侧重点在于Python开发，让大家了解Python开发中必备的实战应用，例如：锁、事务、数据库连接池等。</li></ul><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210528190629407.png" alt="image-20210528190629407"></p><h1 id="MySQL入门"><a href="#MySQL入门" class="headerlink" title="MySQL入门"></a>MySQL入门</h1><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210528192555988.png" alt="image-20210528192555988"></p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508102020237.png" alt="image-20210508102020237"></p><p>目标：学习安装和快速应用Python实现数据库的操作。</p><p>课程概要：</p><ul><li>安装 &amp; 配置 &amp; 启动<ul><li>win</li></ul></li><li>数据库 管理（类比文件夹）</li><li>表 管理        （类比文件夹下的Excel文件）</li><li>数据行 管理（类比Excel文件中的数据行）</li><li>Python操作MySQL及相关安全的问题</li></ul><h2 id="1-安装-amp-配置-amp-启动"><a href="#1-安装-amp-配置-amp-启动" class="headerlink" title="1. 安装 &amp; 配置 &amp; 启动"></a>1. 安装 &amp; 配置 &amp; 启动</h2><p>MySQL现在的版本主要分为：</p><ul><li>5.x 版本，现在互联网企业中的主流版本，包括：头条、美图、百度、腾讯等互联网公司主流的版本。</li><li>8.x 版本，新增了一些了窗口函数、持久化配置、隐藏索引等其他功能。</li></ul><p>所以，我们课程会以常用大版本中最新的版本为例来讲解，即：5.7.31 （依然有很多企业在用5.6.x，但新项目基本上都是5.7.x了）。</p><h3 id="1-1-win系统"><a href="#1-1-win系统" class="headerlink" title="1.1 win系统"></a>1.1 win系统</h3><h4 id="第1步：下载安装"><a href="#第1步：下载安装" class="headerlink" title="第1步：下载安装"></a>第1步：下载安装</h4><p><a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508103751068.png" alt="image-20210508103751068"></p><h4 id="第2步：解压至任意文件夹"><a href="#第2步：解压至任意文件夹" class="headerlink" title="第2步：解压至任意文件夹"></a>第2步：解压至任意文件夹</h4><p>建议解压至软件安装目录，例如：</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508105417186.png" alt="image-20210508105417186"></p><h4 id="第3步：创建配置文件"><a href="#第3步：创建配置文件" class="headerlink" title="第3步：创建配置文件"></a>第3步：创建配置文件</h4><p>在MySQL的安装目录下创建 <code>my.ini</code> 的文件，作为MySQL的配置文件。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508120708175.png" alt="image-20210508120708175"></p><p>其实，MySQL的配置文件可以放在很多的目录，下图是配置文件的优先级：</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510150530193.png" alt="image-20210510150530193"></p><p>强烈，建议大家还是把配置文件放在MySQL安装目录下，这样以后电脑上想要安装多个版本的MySQL时，配置文件可以相互独立不影响。</p><p>注意：如果你电脑的上述其他目录存在MySQL配置文件，建议删除，否则可能会影响MySQL的启动。</p><h4 id="第4步：初始化"><a href="#第4步：初始化" class="headerlink" title="第4步：初始化"></a>第4步：初始化</h4><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt; "C:\Program Files\mysql-5.7.31-winx64\bin\mysqld.exe"  --initialize-insecure<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>初始化命令在执行时，会自动读取配置文件并执行初始化，此过程主要会做两件事：</p><ul><li>自动创建data目录，以后我们的数据都会存放在这个目录。</li><li>同时创建建必备一些的数据，例如默认账户 root （无密码），用于登录MySQL并通过指令操作MySQL。</li></ul><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510151829891.png" alt="image-20210510151829891"></p><p>在windowns安装过程中如果有报错 （ msvcr120.dll不存在 ），请下载并安装下面的两个补丁：</p><ul><li><p>vcredist：<a href="https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=40784">https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=40784</a>  （主要）</p><img src="D:\blog\hexo-shoka\myblog\source\_posts\入门mysql\image-20210508115414183.png" alt="image-20210508115414183" style="zoom:33%;"></li><li><p>dirctx：<a href="https://www.microsoft.com/zh-CN/download/details.aspx?id=35">https://www.microsoft.com/zh-CN/download/details.aspx?id=35</a></p><img src="D:\blog\hexo-shoka\myblog\source\_posts\入门mysql\image-20210508115521913.png" alt="image-20210508115521913" style="zoom: 33%;"></li></ul><h4 id="第5步：启动"><a href="#第5步：启动" class="headerlink" title="第5步：启动"></a>第5步：启动</h4><p>启动MySQL常见的有两种方式：</p><ul><li><p>临时启动</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token string">"C:\Program Files\mysql-5.7.31-winx64<span class="token entity" title="\b">\b</span>in\mysqld.exe"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510152448745.png" alt="image-20210510152448745"></p><p>注意：此时程序会挂起，内部就是可以接收客户端发来的MySQL指令，关闭窗口或Ctrl+c 就可以停止运行。</p><p>这种启动方式每次开机或想要开启都需要手动执行一遍命令比较麻烦。</p></li><li><p>制作windows服务，基于windows服务管理。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token string">"C:\Program Files\mysql-5.7.31-winx64<span class="token entity" title="\b">\b</span>in\mysqld.exe"</span> --install mysql57<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510152702489.png" alt="image-20210510152702489"></p><p>创建好服务之后，可以通过命令 启动和关闭服务，例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> net start mysql57<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> net stop mysql57<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>也可以在window的服务管理中点击按钮启动和关闭服务。例如：</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210529225011045.png" alt="image-20210529225011045"></p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210529225043126.png" alt="image-20210529225043126"></p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510152740268.png" alt="image-20210510152740268"></p><p>以后不再想要使用window服务了，也可以将制作的这个MySQL服务删除。</p><pre class="line-numbers language-none"><code class="language-none">&gt;&gt;&gt;"C:\Program Files\mysql-5.7.31-winx64\bin\mysqld.exe" --remove mysql57<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510152809233.png" alt="image-20210510152809233"></p></li></ul><h4 id="第6步：测试连接MySQL"><a href="#第6步：测试连接MySQL" class="headerlink" title="第6步：测试连接MySQL"></a>第6步：测试连接MySQL</h4><p>安装并启动MySQL之后，就可以连接MySQL来测试是否已正确安装并启动成功。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510153336093.png" alt="image-20210510153336093"></p><p>以后在开发时，肯定是要用Python代码来连接MySQL并且进行数据操作（后面讲）。</p><p>在安装MySQL时，其实也自动安装了一个工具（客户端），让我们快速实现连接MySQL并发送指令。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510154446628.png" alt="image-20210510154446628"></p><p>注意：如果把bin目录加入环境变量，每次在运行命令时，就不用再重新输入绝对路径了。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210529225251803.png" alt="image-20210529225251803"></p><p>上述过程如果操作完成之后，证明你的安装和启动过程就搞定了。</p><h2 id="2-数据库-管理"><a href="#2-数据库-管理" class="headerlink" title="2. 数据库 管理"></a>2. 数据库 管理</h2><p>安装上数据库之后，就需要开始学习指令了，通过指令让MySQL去做出一些文件操作。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210507211911641.png" alt="image-20210507211911641"></p><p>如果将数据库管理系统与之前的文件管理做类比的话：</p><table><thead><tr><th>数据库管理系统</th><th>文件管理</th></tr></thead><tbody><tr><td>数据库</td><td>文件夹</td></tr><tr><td>数据表</td><td>文件夹下的excel文件</td></tr></tbody></table><p>接下来，我们先学习 数据库（文件夹）相关操作的指令。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510153336093.png" alt="image-20210510153336093"></p><h3 id="2-1-内置客户端操作"><a href="#2-1-内置客户端操作" class="headerlink" title="2.1 内置客户端操作"></a>2.1 内置客户端操作</h3><p>当连接上MySQL之后，执行如下指令（一般称为SQL语句），就可以对MySQL的数据进行操作。</p><ul><li><p>查看当前所有的数据库：  <code>show databases;</code></p></li><li><p>创建数据库：<code>create database 数据库名 DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</code> </p><pre class="line-numbers language-none"><code class="language-none">create database day25db;create database day25db DEFAULT CHARSET utf8 COLLATE utf8_general_ci;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>删除数据库：<code>drop database 数据库名</code>;</p></li><li><p>进入数据（进入文件）：<code>use 数据库;</code></p></li></ul><p>示例：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 1.登录MySQL</span>wupeiqi@wupeiqideMBP ~ % /usr/local/mysql/bin/mysql -u root -pEnter password:Welcome to the MySQL monitor.  Commands end with <span class="token punctuation">;</span> or <span class="token punctuation">\</span>g.Your MySQL connection <span class="token function">id</span> is <span class="token number">5</span>Server version: <span class="token number">5.7</span>.31 MySQL Community Server <span class="token punctuation">(</span>GPL<span class="token punctuation">)</span>Copyright <span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token number">2000</span>, <span class="token number">2020</span>, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type <span class="token string">'help;'</span> or <span class="token string">'\h'</span> <span class="token keyword">for</span> help. Type <span class="token string">'\c'</span> to <span class="token function">clear</span> the current input statement.<span class="token comment"># 2.查看当前数据库</span>mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span>+--------------------+<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span class="token comment"># 3. 创建数据库:  create database 数据库名 default charset 编码 collate 排序规则;</span>mysql<span class="token operator">&gt;</span> create database db1 default charset utf8 collate utf8_general_ci<span class="token punctuation">;</span>Query OK, <span class="token number">1</span> row affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> db1                <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span>+--------------------+<span class="token number">5</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span><span class="token comment"># 4. 删除数据库</span>mysql<span class="token operator">&gt;</span> drop database db1<span class="token punctuation">;</span>Query OK, <span class="token number">0</span> rows affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span class="token comment"># 5. 查看当前数据库</span>mysql<span class="token operator">&gt;</span> show databases<span class="token punctuation">;</span>+--------------------+<span class="token operator">|</span> Database           <span class="token operator">|</span>+--------------------+<span class="token operator">|</span> information_schema <span class="token operator">|</span><span class="token operator">|</span> mysql              <span class="token operator">|</span><span class="token operator">|</span> performance_schema <span class="token operator">|</span><span class="token operator">|</span> sys                <span class="token operator">|</span>+--------------------+<span class="token number">4</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span class="token comment"># 6. 进入数据库</span>mysql<span class="token operator">&gt;</span> use mysql<span class="token punctuation">;</span>Reading table information <span class="token keyword">for</span> completion of table and <span class="token function">column</span> namesYou can turn off this feature to get a quicker startup with -ADatabase changed<span class="token comment"># 7. 进入mysql数据库（文件夹），查看此数据库下的所有表。</span>mysql<span class="token operator">&gt;</span> show tables<span class="token punctuation">;</span>+---------------------------+<span class="token operator">|</span> Tables_in_mysql           <span class="token operator">|</span>+---------------------------+<span class="token operator">|</span> columns_priv              <span class="token operator">|</span><span class="token operator">|</span> db                        <span class="token operator">|</span><span class="token operator">|</span> engine_cost               <span class="token operator">|</span><span class="token operator">|</span> event                     <span class="token operator">|</span><span class="token operator">|</span> func                      <span class="token operator">|</span><span class="token operator">|</span> general_log               <span class="token operator">|</span><span class="token operator">|</span> gtid_executed             <span class="token operator">|</span><span class="token operator">|</span> help_category             <span class="token operator">|</span><span class="token operator">|</span> help_keyword              <span class="token operator">|</span><span class="token operator">|</span> help_relation             <span class="token operator">|</span><span class="token operator">|</span> help_topic                <span class="token operator">|</span><span class="token operator">|</span> innodb_index_stats        <span class="token operator">|</span><span class="token operator">|</span> innodb_table_stats        <span class="token operator">|</span><span class="token operator">|</span> ndb_binlog_index          <span class="token operator">|</span><span class="token operator">|</span> plugin                    <span class="token operator">|</span><span class="token operator">|</span> proc                      <span class="token operator">|</span><span class="token operator">|</span> procs_priv                <span class="token operator">|</span><span class="token operator">|</span> proxies_priv              <span class="token operator">|</span><span class="token operator">|</span> server_cost               <span class="token operator">|</span><span class="token operator">|</span> servers                   <span class="token operator">|</span><span class="token operator">|</span> slave_master_info         <span class="token operator">|</span><span class="token operator">|</span> slave_relay_log_info      <span class="token operator">|</span><span class="token operator">|</span> slave_worker_info         <span class="token operator">|</span><span class="token operator">|</span> slow_log                  <span class="token operator">|</span><span class="token operator">|</span> tables_priv               <span class="token operator">|</span><span class="token operator">|</span> time_zone                 <span class="token operator">|</span><span class="token operator">|</span> time_zone_leap_second     <span class="token operator">|</span><span class="token operator">|</span> time_zone_name            <span class="token operator">|</span><span class="token operator">|</span> time_zone_transition      <span class="token operator">|</span><span class="token operator">|</span> time_zone_transition_type <span class="token operator">|</span><span class="token operator">|</span> user                      <span class="token operator">|</span>+---------------------------+<span class="token number">31</span> rows <span class="token keyword">in</span> <span class="token builtin class-name">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span class="token comment"># 8. 退出</span>mysql<span class="token operator">&gt;</span>exit<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-Python代码操作"><a href="#2-2-Python代码操作" class="headerlink" title="2.2 Python代码操作"></a>2.2 Python代码操作</h3><p>无论通过何种方式去连接MySQL，本质上发送的 <strong>指令</strong> 都是相同的，只是连接的方式和操作形式不同而已。</p><p>当连接上MySQL之后，执行如下指令，就可以对MySQL的数据进行操作。（同上述过程）</p><ul><li>查看当前所有的数据库  <code>show databases;</code></li><li>创建数据库：<code>create database 数据库名 default charset utf8 collate utf8_general_ci;</code> </li><li>删除数据库：<code>drop database 数据库名</code>;</li><li>进入数据（进入文件）：<code>use 数据库;</code></li></ul><p>想要使用Python操作MySQL需要安装第三方模块：</p><pre class="line-numbers language-none"><code class="language-none">pip3 install pymysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510153336093.png" alt="image-20210510153336093"></p><p>安装完成后，就可以编写代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment"># 连接MySQL（socket）</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 1. 查看数据库</span><span class="token comment"># 发送指令</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"show databases"</span><span class="token punctuation">)</span><span class="token comment"># 获取指令的结果</span>result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># (('information_schema',), ('mysql',), ('performance_schema',), ('sys',))</span><span class="token comment"># 2. 创建数据库（新增、删除、修改）</span><span class="token comment"># 发送指令</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"create database db3 default charset utf8 collate utf8_general_ci"</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 3. 查看数据库</span><span class="token comment"># 发送指令</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"show databases"</span><span class="token punctuation">)</span><span class="token comment"># 获取指令的结果</span>result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># (('information_schema',), ('db3',), ('mysql',), ('performance_schema',), ('sys',))</span><span class="token comment"># 4. 删除数据库</span><span class="token comment"># 发送指令</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"drop database db3"</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 3. 查看数据库</span><span class="token comment"># 发送指令</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"show databases"</span><span class="token punctuation">)</span><span class="token comment"># 获取指令的结果</span>result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># (('information_schema',), ('mysql',), ('performance_schema',), ('sys',))</span><span class="token comment"># 5. 进入数据库，查看表</span><span class="token comment"># 发送指令</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"use mysql"</span><span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"show tables"</span><span class="token punctuation">)</span>result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># (('columns_priv',), ('db',), ('engine_cost',), ('event',), ('func',), ('general_log',),....</span><span class="token comment"># 关闭连接</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-数据表-管理"><a href="#3-数据表-管理" class="headerlink" title="3. 数据表 管理"></a>3. 数据表 管理</h2><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210507211911641.png" alt="image-20210507211911641"></p><p>如果将数据库管理系统与之前的文件管理做类比的话：</p><table><thead><tr><th>数据库管理系统</th><th>文件管理</th></tr></thead><tbody><tr><td>数据库</td><td>文件夹</td></tr><tr><td>数据表</td><td>文件夹下的文件</td></tr></tbody></table><p>接下来，我们先学习 数据表（文件夹中的文件）相关操作的指令。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210510153336093.png" alt="image-20210510153336093"></p><p>其实在数据库中创建数据库 和 创建Excel非常类似，需要指定： <code>表名</code>、<code>列名称</code>、<code>类类型（整型、字符串或其他)</code>。</p><h3 id="3-1-内置客户端操作"><a href="#3-1-内置客户端操作" class="headerlink" title="3.1 内置客户端操作"></a>3.1 内置客户端操作</h3><p>数据表常见操作的指令：</p><ul><li><p>进入数据库 <code>use 数据库;</code>，查看当前所有表：<code>show tables;</code></p></li><li><p>创建表结构<br><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210511102323966.png" alt="image-20210511102323966"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span>    列名  类型<span class="token punctuation">,</span>    列名  类型<span class="token punctuation">,</span>    列名  类型<span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> tb1<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> tb2<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>   <span class="token comment">-- 不允许为空</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token boolean">null</span><span class="token punctuation">,</span>      <span class="token comment">-- 允许为空（默认）</span>    age <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> tb3<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>   <span class="token comment">-- 不允许为空</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token boolean">null</span><span class="token punctuation">,</span>      <span class="token comment">-- 允许为空（默认）</span>    age <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">3</span>            <span class="token comment">-- 插入数据时，如果不给age列设置值，默认值：3</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> tb4<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span> <span class="token comment">-- 主键（不允许为空、不能重复）</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>   <span class="token comment">-- 不允许为空</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token boolean">null</span><span class="token punctuation">,</span>      <span class="token comment">-- 允许为空（默认）</span>    age <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">3</span>            <span class="token comment">-- 插入数据时，如果不给age列设置值，默认值：3</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主键一般用于表示当前这条数据的ID编号（类似于人的身份证），需要我们自己来维护一个不重复的值，比较繁琐。所以，在数据库中一般会将主键和自增结合。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> tb5<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span><span class="token comment">-- 不允许为空 &amp; 主键 &amp; 自增</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>   <span class="token comment">-- 不允许为空</span>    email <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token boolean">null</span><span class="token punctuation">,</span>      <span class="token comment">-- 允许为空（默认）</span>    age <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">3</span>            <span class="token comment">-- 插入数据时，如果不给age列设置值，默认值：3</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：一个表中只能有一个自增列【自增列，一般都是主键】。</p></li><li><p>删除表 <code>drop table 表名;</code></p></li><li><p>清空表 <code>delete from 表名;</code> 或 <code>truncate table 表名;</code>（速度快、无法回滚撤销等）</p></li><li><p>修改表</p><ul><li><p>添加列 </p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 列名 类型<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 列名 类型 <span class="token keyword">DEFAULT</span> 默认值<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 列名 类型 <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> 默认值<span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> 列名 类型 <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除列</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> <span class="token keyword">column</span> 列名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改列 类型</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">modify</span> <span class="token keyword">column</span> 列名 类型<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>修改列 类型 + 名称</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 change 原列名 新列名 新类型<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span>  tb change id nid <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span>  tb change id id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">default</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span>  tb change id id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">;</span><span class="token keyword">alter</span> <span class="token keyword">table</span>  tb change id id <span class="token keyword">int</span><span class="token punctuation">;</span> <span class="token comment">-- 允许为空，删除默认值，删除自增。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修改列 默认值</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ALTER</span> 列名 <span class="token keyword">SET</span> <span class="token keyword">DEFAULT</span> <span class="token number">1000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除列 默认值</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ALTER</span> 列名 <span class="token keyword">DROP</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加主键</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">add</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>列名<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除主键</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">alter</span> <span class="token keyword">table</span> 表名 <span class="token keyword">drop</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p>常见列类型</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> 表<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>int[(m)][unsigned][zerofill]</code></p><pre class="line-numbers language-none"><code class="language-none">int表示有符号，取值范围：-2147483648 ～ 2147483647int unsigned表示无符号，取值范围：0 ～ 4294967295int(5)zerofill仅用于显示，当不满足5位时，按照左边补0，例如：00002；满足时，正常显示。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">&gt;</span> <span class="token keyword">create</span> <span class="token keyword">table</span> L1<span class="token punctuation">(</span>id <span class="token keyword">int</span><span class="token punctuation">,</span> uid <span class="token keyword">int</span> <span class="token keyword">unsigned</span><span class="token punctuation">,</span> zid <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> zerofill<span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L1<span class="token punctuation">(</span>id<span class="token punctuation">,</span>uid<span class="token punctuation">,</span>zid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L1<span class="token punctuation">(</span>id<span class="token punctuation">,</span>uid<span class="token punctuation">,</span>zid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">2147483641</span><span class="token punctuation">,</span><span class="token number">4294967294</span><span class="token punctuation">,</span><span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> L1<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">------------+------------+--------+</span><span class="token operator">|</span> id         <span class="token operator">|</span> uid        <span class="token operator">|</span> zid    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">------------+------------+--------+</span><span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span>          <span class="token number">2</span> <span class="token operator">|</span>  <span class="token number">00003</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">2147483641</span> <span class="token operator">|</span> <span class="token number">4294967294</span> <span class="token operator">|</span> <span class="token number">300000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">------------+------------+--------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L1<span class="token punctuation">(</span>id<span class="token punctuation">,</span>uid<span class="token punctuation">,</span>zid<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">214748364100</span><span class="token punctuation">,</span><span class="token number">4294967294</span><span class="token punctuation">,</span><span class="token number">300000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ERROR <span class="token number">1264</span> <span class="token punctuation">(</span><span class="token number">22003</span><span class="token punctuation">)</span>: <span class="token keyword">Out</span> <span class="token keyword">of</span> range <span class="token keyword">value</span> <span class="token keyword">for</span> <span class="token keyword">column</span> <span class="token string">'id'</span> at <span class="token keyword">row</span> <span class="token number">1</span>mysql<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>tinyint[(m)] [unsigned] [zerofill]</code></p><pre class="line-numbers language-none"><code class="language-none">有符号，取值范围：-128 ～ 127.无符号，取值范围：0 ～ 255<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>bigint[(m)][unsigned][zerofill]</code></p><pre class="line-numbers language-none"><code class="language-none">有符号，取值范围：-9223372036854775808 ～ 9223372036854775807无符号，取值范围：0  ～  18446744073709551615<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>decimal[(m[,d])] [unsigned] [zerofill]</code></p><pre class="line-numbers language-none"><code class="language-none">准确的小数值，m是数字总个数（负号不算），d是小数点后个数。 m最大值为65，d最大值为30。例如：create table L2(id int not null primary key auto_increment,salary decimal(8,2))default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">&gt;</span> <span class="token keyword">create</span> <span class="token keyword">table</span> L2<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>salary <span class="token keyword">decimal</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L2<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">1.28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L2<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5.289</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected<span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L2<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5.282</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected<span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L2<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">512132.28</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L2<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">512132.283</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">1</span> <span class="token keyword">row</span> affected<span class="token punctuation">,</span> <span class="token number">1</span> warning <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> L2<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">----+-----------+</span><span class="token operator">|</span> id <span class="token operator">|</span> salary    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+-----------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span>      <span class="token number">1.28</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span>      <span class="token number">5.29</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span>      <span class="token number">5.28</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> <span class="token number">512132.28</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">512132.28</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+-----------+</span><span class="token number">5</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L2<span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">5121321.283</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ERROR <span class="token number">1264</span> <span class="token punctuation">(</span><span class="token number">22003</span><span class="token punctuation">)</span>: <span class="token keyword">Out</span> <span class="token keyword">of</span> range <span class="token keyword">value</span> <span class="token keyword">for</span> <span class="token keyword">column</span> <span class="token string">'salary'</span> at <span class="token keyword">row</span> <span class="token number">1</span>mysql<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>FLOAT[(M,D)] [UNSIGNED] [ZEROFILL]</code></p><pre class="line-numbers language-none"><code class="language-none">单精度浮点数，非准确小数值，m是数字总个数，d是小数点后个数。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>DOUBLE[(M,D)] [UNSIGNED] [ZEROFILL]</code></p><pre class="line-numbers language-none"><code class="language-none">双精度浮点数（非准确小数值），m是数字总个数，d是小数点后个数。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>char(m)</code></p><pre class="line-numbers language-none"><code class="language-none">定长字符串，m代表字符串的长度，最多可容纳255个字符。定长的体现：即使内容长度小于m，也会占用m长度。例如：char(5)，数据是：yes，底层也会占用5个字符；如果超出m长度限制（默认MySQL是严格模式，所以会报错）。    如果在配置文件中加入如下配置，        sql-mode="NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"    保存并重启，此时MySQL则是非严格模式，此时超过长度则自动截断（不报错）。。注意：默认底层存储是固定的长度（不够则用空格补齐），但是查询数据时，会自动将空白去除。 如果想要保留空白，在sql-mode中加入 PAD_CHAR_TO_FULL_LENGTH 即可。查看模式sql-mode，执行命令：show variables  like 'sql_mode';一般适用于：固定长度的内容。create table L3(    id int not null primary key auto_increment,    name varchar(5),    depart char(3))default charset=utf8;insert into L3(name,depart) values("alexsb","sbalex");<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>varchar(m)</code></p><pre class="line-numbers language-none"><code class="language-none">变长字符串，m代表字符串的长度，最多可容纳65535个字节。变长的体现：内容小于m时，会按照真实数据长度存储；如果超出m长度限制（（默认MySQL是严格模式，所以会报错）。    如果在配置文件中加入如下配置，        sql-mode="NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"    保存并重启，此时MySQL则是非严格模式，此时超过长度则自动截断（不报错）。例如：create table L3(    id int not null primary key auto_increment,    name varchar(5),    depart char(3))default charset=utf8;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">&gt;</span> <span class="token keyword">create</span> <span class="token keyword">table</span> L3<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>depart <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span><span class="token comment">-- 插入多行</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L3<span class="token punctuation">(</span>name<span class="token punctuation">,</span>depart<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">"wu"</span><span class="token punctuation">,</span><span class="token string">"WU"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"wupei"</span><span class="token punctuation">,</span><span class="token string">"ALS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>Records: <span class="token number">2</span>  Duplicates: <span class="token number">0</span>  <span class="token keyword">Warnings</span>: <span class="token number">0</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> L3<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">----+-------+--------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name  <span class="token operator">|</span> depart <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+-------+--------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> wu    <span class="token operator">|</span> WU     <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> wupei <span class="token operator">|</span> ALS    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+-------+--------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span class="token comment">-- 非严格模式下，不会报错。</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L3<span class="token punctuation">(</span>name<span class="token punctuation">,</span>depart<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"ALS"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ERROR <span class="token number">1406</span> <span class="token punctuation">(</span><span class="token number">22001</span><span class="token punctuation">)</span>: <span class="token keyword">Data</span> too long <span class="token keyword">for</span> <span class="token keyword">column</span> <span class="token string">'name'</span> at <span class="token keyword">row</span> <span class="token number">1</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L3<span class="token punctuation">(</span>name<span class="token punctuation">,</span>depart<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">"wupei"</span><span class="token punctuation">,</span><span class="token string">"ALSB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ERROR <span class="token number">1406</span> <span class="token punctuation">(</span><span class="token number">22001</span><span class="token punctuation">)</span>: <span class="token keyword">Data</span> too long <span class="token keyword">for</span> <span class="token keyword">column</span> <span class="token string">'depart'</span> at <span class="token keyword">row</span> <span class="token number">1</span>mysql<span class="token operator">&gt;</span><span class="token comment">-- 如果 sql-mode 中加入了 PAD_CHAR_TO_FULL_LENGTH ，则查询时char时空白会保留。</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>length<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>depart<span class="token punctuation">,</span>length<span class="token punctuation">(</span>depart<span class="token punctuation">)</span> <span class="token keyword">from</span> L3<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">-------+--------------+--------+----------------+</span><span class="token operator">|</span> name  <span class="token operator">|</span> length<span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">|</span> depart <span class="token operator">|</span> length<span class="token punctuation">(</span>depart<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">-------+--------------+--------+----------------+</span><span class="token operator">|</span> wu    <span class="token operator">|</span>            <span class="token number">2</span> <span class="token operator">|</span> WU     <span class="token operator">|</span>              <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span> wupei <span class="token operator">|</span>            <span class="token number">5</span> <span class="token operator">|</span> ALS    <span class="token operator">|</span>              <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">-------+--------------+--------+----------------+</span><span class="token number">4</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>text</code></p><pre class="line-numbers language-none"><code class="language-none">text数据类型用于保存变长的大字符串，可以组多到65535 (2**16 − 1)个字符。一般情况下，长文本会用text类型。例如：文章、新闻等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> L4<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>    title <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span>content <span class="token keyword">text</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>mediumtext</code></p><pre class="line-numbers language-none"><code class="language-none">A TEXT column with a maximum length of 16,777,215 (2**24 − 1) characters.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>longtext</code></p><pre class="line-numbers language-none"><code class="language-none">A TEXT column with a maximum length of 4,294,967,295 or 4GB (2**32 − 1)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>datetime</code></p><pre class="line-numbers language-none"><code class="language-none">YYYY-MM-DD HH:MM:SS（1000-01-01 00:00:00/9999-12-31 23:59:59）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>timestamp</code></p><pre class="line-numbers language-none"><code class="language-none">YYYY-MM-DD HH:MM:SS（1970-01-01 00:00:00/2037年）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">对于TIMESTAMP，它把客户端插入的时间从当前时区转化为UTC（世界标准时间）进行存储，查询时，将其又转化为客户端当前时区进行返回。对于DATETIME，不做任何改变，原样输入和输出。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">mysql<span class="token operator">&gt;</span> <span class="token keyword">create</span> <span class="token keyword">table</span> L5<span class="token punctuation">(</span>    <span class="token operator">-</span><span class="token operator">&gt;</span> id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">&gt;</span> dt <span class="token keyword">datetime</span><span class="token punctuation">,</span>    <span class="token operator">-</span><span class="token operator">&gt;</span> tt <span class="token keyword">timestamp</span>    <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.03</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> L5<span class="token punctuation">(</span>dt<span class="token punctuation">,</span>tt<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">"2025-11-11 11:11:44"</span><span class="token punctuation">,</span> <span class="token string">"2025-11-11 11:11:44"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> L5<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">----+---------------------+---------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> dt                  <span class="token operator">|</span> tt                  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+---------------------+---------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2025</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token number">11</span>:<span class="token number">11</span>:<span class="token number">44</span> <span class="token operator">|</span> <span class="token number">2025</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token number">11</span>:<span class="token number">11</span>:<span class="token number">44</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+---------------------+---------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">'%time_zone%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">------------------+--------+</span><span class="token operator">|</span> Variable_name    <span class="token operator">|</span> <span class="token keyword">Value</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">------------------+--------+</span><span class="token operator">|</span> system_time_zone <span class="token operator">|</span> CST    <span class="token operator">|</span> <span class="token operator">|</span> time_zone        <span class="token operator">|</span> SYSTEM <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">------------------+--------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span class="token comment">-- “CST”指的是MySQL所在主机的系统时间，是中国标准时间的缩写，China Standard Time UT+8:00</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">set</span> time_zone<span class="token operator">=</span><span class="token string">'+0:00'</span><span class="token punctuation">;</span>Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">'%time_zone%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">------------------+--------+</span><span class="token operator">|</span> Variable_name    <span class="token operator">|</span> <span class="token keyword">Value</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">------------------+--------+</span><span class="token operator">|</span> system_time_zone <span class="token operator">|</span> CST    <span class="token operator">|</span><span class="token operator">|</span> time_zone        <span class="token operator">|</span> <span class="token operator">+</span><span class="token number">00</span>:<span class="token number">00</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">------------------+--------+</span><span class="token number">2</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> L5<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment">----+---------------------+---------------------+</span><span class="token operator">|</span> id <span class="token operator">|</span> dt                  <span class="token operator">|</span> tt                  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+---------------------+---------------------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2025</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token number">11</span>:<span class="token number">11</span>:<span class="token number">44</span> <span class="token operator">|</span> <span class="token number">2025</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">11</span> <span class="token number">03</span>:<span class="token number">11</span>:<span class="token number">44</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment">----+---------------------+---------------------+</span><span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>date</code></p><pre class="line-numbers language-none"><code class="language-none">YYYY-MM-DD（1000-01-01/9999-12-31）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>time</code></p><pre class="line-numbers language-none"><code class="language-none">HH:MM:SS（'-838:59:59'/'838:59:59'）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>MySQL还有很多其他的数据类型，例如：<em>set、enum、TinyBlob、Blob、MediumBlob、LongBlob 等</em>，详细见官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/data-types.html">https://dev.mysql.com/doc/refman/5.7/en/data-types.html</a></p></li></ul><p>上述就是关于数据表的一些基本操作。</p><h3 id="3-2-MySQL代码操作"><a href="#3-2-MySQL代码操作" class="headerlink" title="3.2 MySQL代码操作"></a>3.2 MySQL代码操作</h3><p>基于Python去连接MySQL之后，想要进行数据表的管理的话，发送的指令其实都是相同的，例如：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">import</span> pymysql<span class="token comment"># 连接MySQL</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span><span class="token keyword">connect</span><span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> <span class="token keyword">user</span><span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> <span class="token keyword">charset</span><span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">)</span><span class="token keyword">cursor</span> <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token keyword">cursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 1. 创建数据库</span><span class="token string">"""cursor.execute("</span><span class="token keyword">create</span> <span class="token keyword">database</span> db4 <span class="token keyword">default</span> <span class="token keyword">charset</span> utf8 <span class="token keyword">collate</span> utf8_general_ci<span class="token string">")conn.commit()"""</span><span class="token comment"># 2. 进入数据库、查看数据表</span><span class="token string">"""cursor.execute("</span><span class="token keyword">use</span> db4<span class="token string">")cursor.execute("</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token string">")result = cursor.fetchall()print(result)"""</span><span class="token comment"># 3. 进入数据库创建表</span><span class="token keyword">cursor</span><span class="token punctuation">.</span><span class="token keyword">execute</span><span class="token punctuation">(</span><span class="token string">"use db4"</span><span class="token punctuation">)</span><span class="token keyword">sql</span> <span class="token operator">=</span> <span class="token string">"""create table L4(    id int not null primary key auto_increment,    title varchar(128),    content text,    ctime datetime)default charset=utf8;"""</span><span class="token keyword">cursor</span><span class="token punctuation">.</span><span class="token keyword">execute</span><span class="token punctuation">(</span><span class="token keyword">sql</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span><span class="token keyword">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 4. 查看数据库中的表</span><span class="token string">"""cursor.execute("</span><span class="token keyword">show</span> <span class="token keyword">tables</span><span class="token string">")result = cursor.fetchall()print(result)"""</span><span class="token comment"># 5. 其他 drop table... 略过</span><span class="token comment"># 关闭连接</span><span class="token keyword">cursor</span><span class="token punctuation">.</span><span class="token keyword">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span><span class="token keyword">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-数据行"><a href="#4-数据行" class="headerlink" title="4.数据行"></a>4.数据行</h2><p>当数据库和数据表创建完成之后，就需要对数据表中的内容进行：增、删、改、查了。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210511102323966.png" alt="image-20210511102323966"></p><h3 id="4-1-内置客户端操作"><a href="#4-1-内置客户端操作" class="headerlink" title="4.1 内置客户端操作"></a>4.1 内置客户端操作</h3><p>数据行操作的相关SQL语句（指令）如下：</p><ul><li><p>新<strong>增</strong>数据</p><pre class="line-numbers language-none"><code class="language-none">insert into 表名 (列名,列名,列名) values(对应列的值,对应列的值,对应列的值);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> tb1<span class="token punctuation">(</span>name<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'武沛齐'</span><span class="token punctuation">,</span><span class="token string">'123123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> tb1<span class="token punctuation">(</span>name<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'武沛齐'</span><span class="token punctuation">,</span><span class="token string">'123123'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> tb1 <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'武沛齐'</span><span class="token punctuation">,</span><span class="token string">'123123'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- 如果表中只有2列</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>删</strong>除数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名<span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">delete</span> <span class="token keyword">from</span> tb1<span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">"wupeiqi"</span><span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">"wupeiqi"</span> <span class="token operator">and</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token punctuation">;</span><span class="token keyword">delete</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> id<span class="token operator">&gt;</span><span class="token number">9</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>修<strong>改</strong>数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 列名<span class="token operator">=</span>值<span class="token punctuation">;</span><span class="token keyword">update</span> 表名 <span class="token keyword">set</span> 列名<span class="token operator">=</span>值 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> tb1 <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">"wupeiqi"</span><span class="token punctuation">;</span><span class="token keyword">update</span> tb1 <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">"wupeiqi"</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">update</span> tb1 <span class="token keyword">set</span> age<span class="token operator">=</span>age<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">-- 整型</span><span class="token keyword">update</span> tb1 <span class="token keyword">set</span> age<span class="token operator">=</span>age<span class="token operator">+</span><span class="token number">1</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">update</span> L3 <span class="token keyword">set</span> name<span class="token operator">=</span>concat<span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">"db"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">update</span> L3 <span class="token keyword">set</span> name<span class="token operator">=</span>concat<span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">"123"</span><span class="token punctuation">)</span>  <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>  <span class="token comment">-- concat一个函数，可以拼接字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>查</strong>询数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 表名<span class="token punctuation">;</span><span class="token keyword">select</span> 列名<span class="token punctuation">,</span>列名<span class="token punctuation">,</span>列名 <span class="token keyword">from</span> 表名<span class="token punctuation">;</span><span class="token keyword">select</span> 列名<span class="token punctuation">,</span>列名 <span class="token keyword">as</span> 别名<span class="token punctuation">,</span>列名 <span class="token keyword">from</span> 表名<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 表名 <span class="token keyword">where</span> 条件<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb1<span class="token punctuation">;</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age <span class="token keyword">from</span> tb1<span class="token punctuation">;</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">as</span> N<span class="token punctuation">,</span>age<span class="token punctuation">,</span> <span class="token keyword">from</span> tb1<span class="token punctuation">;</span><span class="token keyword">select</span> id<span class="token punctuation">,</span>name <span class="token keyword">as</span> N<span class="token punctuation">,</span>age<span class="token punctuation">,</span> <span class="token number">111</span> <span class="token keyword">from</span> tb1<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> id <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> id <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tb1 <span class="token keyword">where</span> name<span class="token operator">=</span><span class="token string">"wupeiqi"</span> <span class="token operator">and</span> password<span class="token operator">=</span><span class="token string">"123"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="4-2-Python代码操作"><a href="#4-2-Python代码操作" class="headerlink" title="4.2 Python代码操作"></a>4.2 Python代码操作</h3><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210511102323966.png" alt="image-20210511102323966"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment"># 连接MySQL，自动执行 use userdb; -- 进入数据库</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">'userdb'</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 1.新增（需commit）</span><span class="token triple-quoted-string string">"""cursor.execute("insert into tb1(name,password) values('武沛齐','123123')")conn.commit()"""</span><span class="token comment"># 2.删除（需commit）</span><span class="token triple-quoted-string string">"""cursor.execute("delete from tb1 where id=1")conn.commit()"""</span><span class="token comment"># 3.修改（需commit)</span><span class="token triple-quoted-string string">"""cursor.execute("update tb1 set name='xx' where id=1")conn.commit()"""</span><span class="token comment"># 4.查询</span><span class="token triple-quoted-string string">"""cursor.execute("select * from tb where id&gt;10")data = cursor.fetchone() # cursor.fetchall()print(data)"""</span><span class="token comment"># 关闭连接</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实在真正做项目开发时，流程如下：</p><ul><li>第一步：根据项目的功能来设计相应的 数据库 &amp; 表结构（不会经常变动，在项目设计之初就确定好了）。</li><li>第二步：操作表结构中的数据，已达到实现业务逻辑的目的。</li></ul><p><strong>例如：实现一个 用户管理系统。</strong></p><p>先使用MySQL自带的客户端创建相关 数据库和表结构（相当于先创建好Excel结构）。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> usersdb <span class="token keyword">default</span> <span class="token keyword">charset</span> utf8 <span class="token keyword">collate</span> utf8_general_ci<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> users<span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span>password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>再在程序中执行编写相应的功能实现 注册、登录 等功能。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户注册"</span><span class="token punctuation">)</span>    user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span> <span class="token comment"># alex</span>    password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span> <span class="token comment"># sb</span>    <span class="token comment"># 连接指定数据</span>    conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">"usersdb"</span><span class="token punctuation">)</span>    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 执行SQL语句（有SQL注入风险，稍后讲解）</span>    <span class="token comment"># sql = 'insert into users(name,password)values("alex","sb")'</span>    sql <span class="token operator">=</span> <span class="token string">'insert into users(name,password) values("{}","{}")'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> password<span class="token punctuation">)</span>        cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 关闭数据库连接</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"注册成功，用户名：{},密码:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户登录"</span><span class="token punctuation">)</span>    user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>    password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span>    <span class="token comment"># 连接指定数据</span>    conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">"usersdb"</span><span class="token punctuation">)</span>    cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 执行SQL语句（有SQL注入风险，稍后讲解）</span>    <span class="token comment"># sql = select * from users where name='wupeiqi' and password='123'</span>    sql <span class="token operator">=</span> <span class="token string">"select * from users where name='{}' and password='{}'"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> password<span class="token punctuation">)</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>        result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 去向mysql获取结果</span>    <span class="token comment"># None</span>    <span class="token comment"># (1,wupeiqi,123)</span>            <span class="token comment"># 关闭数据库连接</span>    cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> result<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"1.注册；2.登录"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">:</span>        register<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">:</span>        login<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入错误"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>So，你会发现， 在项目开发时，数据库 &amp; 数据表 的操作其实就做那么一次，最最常写的还是 对数据行 的操作。</p><h2 id="5-关于SQL注入"><a href="#5-关于SQL注入" class="headerlink" title="5.关于SQL注入"></a>5.关于SQL注入</h2><p>假如，你开发了一个用户认证的系统，应该用户登录成功后才能正确的返回相应的用户结果。 </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment"># 输入用户名和密码</span>user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span> <span class="token comment"># ' or 1=1 -- </span>pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span> <span class="token comment"># 123</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">,</span>db<span class="token operator">=</span><span class="token string">'usersdb'</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 基于字符串格式化来 拼接SQL语句</span><span class="token comment"># sql = "select * from users where name='alex' and password='123'"</span><span class="token comment"># sql = "select * from users where name='' or 1=1 -- ' and password='123'"</span>sql <span class="token operator">=</span> <span class="token string">"select * from users where name='{}' and password='{}'"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> pwd<span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># None，不是None</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果用户在输入user时，输入了：   <code>' or 1=1 --  </code>    ，这样即使用户输入的密码不存在，也会可以通过验证。</p><p><strong>为什么呢？</strong></p><p>因为在SQL拼接时，拼接后的结果是：</p><pre class="line-numbers language-none"><code class="language-none">select * from users where name='' or 1=1 -- ' and password='123'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：在MySQL中 <code>--</code> 表示注释。</p><p><strong>那么，在Python开发中 如何来避免SQL注入呢？</strong></p><p>切记，SQL语句不要在使用python的字符串格式化，而是使用pymysql的execute方法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysql<span class="token comment"># 输入用户名和密码</span>user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span>conn <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">,</span> passwd<span class="token operator">=</span><span class="token string">'root123'</span><span class="token punctuation">,</span> charset<span class="token operator">=</span><span class="token string">"utf8"</span><span class="token punctuation">,</span> db<span class="token operator">=</span><span class="token string">'userdb'</span><span class="token punctuation">)</span>cursor <span class="token operator">=</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select * from users where name=%s and password=%s"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>user<span class="token punctuation">,</span> pwd<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 或</span><span class="token comment"># cursor.execute("select * from users where name=%(n1)s and password=%(n2)s", {"n1": user, 'n2': pwd})</span>result <span class="token operator">=</span> cursor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="主键："><a href="#主键：" class="headerlink" title="主键："></a>主键：</h2><p><strong>概念</strong><br>主关键字（主键，primary key）是被挑选出来，作表的行的惟一标识的候选关键字。一个表只有一个主关键字。主关键字又可以称为主键。主键可以由一个字段，也可以由多个字段组成，分别成为单字段主键或多字段主键。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="D:\blog\hexo-shoka\myblog\source_posts\入门mysql\image-20210508102020237.png" alt="image-20210508102020237"></p><p>除了 【第5步 用户授权】以外，现在使用的是默认root账户（拥有最大权限），上述所有的过程已讲解完毕。</p><p>本节内容大家需要掌握：</p><ul><li>安装和启动MySQL</li><li>SQL语句：<ul><li>数据库操作</li><li>表操作</li><li>数据行操作</li></ul></li><li>基于Python操作MySQL</li><li>注意SQL注入的问题</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zset的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/zset-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/zset-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="zset的基本命令"><a href="#zset的基本命令" class="headerlink" title="zset的基本命令"></a><font color="pink">zset的基本命令</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//将一个或者多个member及其score值加入有序集合zadd key score value [score value] //如果元素存在则覆盖分数//获取指定有序集合中指定下标区间中的值zrange key startIndex endIndex [withscores] //分数越高的排在越后面//获取指定有序集合中指定分数区间的元素zrangebyscore key min max [withscores] [limit startIndex endIndex]//删除指定有序集合中一个或者多个元素zrem key member [member...]//获取指定有序集合中所有元素的个数zcard key//获取指定有序集合中指定元素的排名zrank key member //从0开始排//获取指定有序集合中分数在指定区间内的元素个数zcount key min max//获取指定有序集合中指定元素的分数zscore key member//获取指定元素在指定有序集合中的排名(逆向倒数)zrevrank key member//注,有些和顺序有关的,加rev,就可以反转<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hash的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/hash-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/hash-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="hash的基本操作"><a href="#hash的基本操作" class="headerlink" title="hash的基本操作"></a><font color="pink">hash的基本操作</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//将一个或者多个field-value对设置到hash表中hset key field value [field value...]//批量一个或者多个field-value对设置到hash表中hmset key field value [field value...] //个人认为这两个命令没啥子区别//获取指定hash表中指定field值hget key field//批量获取指定hash表中的field值hmget key field [field...]//获取指定hash表中所有的field和valuehgetall key//从指定hash表中删除一个或者多个fieldhdel key field [field...]//获取指定hash表中所有field个数hlen key//判断指定hash表是否存在某一个fieldhexsits key field//获取指定hash表中所有的field列表hkeys key//获取指定hash表中所有的value列表hvals key//对指定hash表中指定field值进行整数加法运算hincrby key field int//对指定hash表中指定field值进行减法运算hdecrby key field int//对指定hash表中的field进行浮点数加法运算hincrbyfloat key field float//对指定hash表中的field进行浮点数减法运算hdecrbyfloat key field float//设置指定hash表中的field值,如果存在则放弃hsetnx key field value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>set的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/set-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/set-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="set的基本命令"><a href="#set的基本命令" class="headerlink" title="set的基本命令"></a><font color="pink">set的基本命令</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//添加一个或多个membersadd key member[member...]//获取指定集合中的所有元素smembers key//判断指定元素在指定集合中是否存在sismember key member//存在返回1,不存在返回0//获取指定集合的长度scard key//移除指定集合中一个或多个元素srem key member[member...]//不存在则忽略,返回成功移除的个数//随机获取指定集合中的一个或者多个元素srandmember key [count] // count &gt; 0,随机出的元素不重复,count &lt; 0,随机出的元素可以重复//从指定集合中随机移除一个或者多个元素spop key [count] //将指定集合中的元素移动到另一个集合中smove source dest membersmove set01 set02 a//求差集sdiff set01 set02 set03 //返回set01有,其他集合没有的值//求交集sinter set01 set02 set03 //返回都有的//求并集sunion set01 set02 set03 //所有集合中的所有元素<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>list的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/list-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/list-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="list的基本命令"><a href="#list的基本命令" class="headerlink" title="list的基本命令"></a><font color="pink">list的基本命令</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//将一个值或多个值依次插入到列表表头(类比数据结构的头插法)lpush key 1 2 3 //结果是 3 2 1//获取指定列表中指定下标区间的元素lrange key startIndex endIndexlrange key 0 -1 //获取全部//将一个值或多个值依次插入列表表尾(类比数据结构的尾插法)rpush key a b c //a b crpush key d e //a b c d e//从指定列表中删除并返回表头元素lpop key//从指定列表中删除并返回表尾元素rpop key//获取列表中指定下标的元素lindex key index//获取指定列表的长度llen key//根据count移除指定列表中和value值一样的数据lrem key count value //如果count &gt; 0 ,从左开始移除count个和value一样的数据,如果count &lt; 0,从右开始移除count个value一样的数据,如果count = 0,移除所有和value一样的数据//截取指定列表中指定下标区间的元素组成新的列表,并赋值给keyltrim key startIndex endIndex//将指定列表中指定下标的元素设置为指定值lset key index value//将value插入到指定列表中位于pivot元素之前/之后linsert key before/after pivot value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>string的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/string-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/string-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="string的基本命令"><a href="#string的基本命令" class="headerlink" title="string的基本命令"></a><font color="pink">string的基本命令</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//设置值set key value//获取值get key//修改值set key newvalue //key已存在时//追加字符串append key value //返回追加后字符串长度,如果key不存在创建一个key,值就为value//获取字符串数据的长度strlen key //如果key不存在,返回0//字符串加一操作incr key //返回加一之后的结果 increment,如果key值不是Integer,会报错,ERR value is not an integer or out of range//如果key 不存在,则创建一个key,并为1//字符串减一运算decr key //返回减一后的结果,如果key值不是Integer,ERR value is not an integer or out of range//如果key 不存在,则创建一个key,并为-1//将字符串数值进行加offset运算incrby key offset //返回加一之后的结果,如果key值不是Integer,会报错,ERR value is not an integer or out of range//如果key 不存在,则创建一个key,并为offset//将字符串数值进行减offset运算decrby key offset //返回加一之后的结果,如果key值不是Integer,会报错,ERR value is not an integer or out of range//如果key 不存在,则创建一个key,并为-offset//获取字符串中的子字符串getrange key startIndex endIndex //可以为负数,负数从右往左数getrange key 0 -1 //全部//修改指定区间的字符setrange key startIndex vaule //可以为负数,负数从右往左数,返回修改后的字符串长度//设置字符串数据的同时,设置其最大生命周期,秒setex key seconds value //设置字符串数据,如果存在key,则不做任何操作setnx key value//批量设置键值mset k1 v1 k2 v2 k3 v3 k4 v4//批量获取mget k1 k2 k3 k4//批量设置,当都不存在时msetnx k1 v1 k2 v2 k3 v3 k4 v4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>key的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/key-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/key-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="key的基本命令"><a href="#key的基本命令" class="headerlink" title="key的基本命令"></a><font color="pink">key的基本命令</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//删除keydel keydel key1 key2 key3 //返回删除的数量//检查key是否存在exists keyexists key1 key2 key3//返回存在的数量//设置过期时间,按秒记expire key seconds//查看剩余时间,按秒ttl key //存在没设置时间,-1. 存在设置了时间,返回值为剩余时间. 不存在,-2//移除过期时间persist key//将key移动到其他数据库实例move key db//重复名keyrename key newkey//重复名key,当newkey不存在时renamenx key newkey//查看key的数据类型type key //string hash list set zset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis基础的命令</title>
      <link href="/choodsire.github.io/2022/03/16/redis-ji-chu-de-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/redis-ji-chu-de-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="redis基础的命令"><a href="#redis基础的命令" class="headerlink" title="redis基础的命令"></a><font color="pink">redis基础的命令</font></h1><p>控制台中的命令:</p><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//启动redis服务redis-server //默认端口6379redis-server &amp;//后台启动,默认端口6379redis-server redis.conf &amp;//后台启动,使用指定配置文件//关闭redis服务redis-cli shutdown //关闭,say bye//使用客户端连接redisredis-cli //默认连接localhost,端口6379的服务redis-cli -h host -p port -a password //连接host主机,port端口,密码为password的服务redis-cli --raw //避免中文乱码//测试redis性能redis-benchmark <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>redis客户端使用的命令:</p><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//查看redis信息info //查看所有info parameter //查看固定的信息//关闭连接 quit or exitquitexit //查看是否连接正常ping //返回pong表示正常//redis 默认有16个数据库实例,0-15select index//切换数据库实例//查看当前实例的key数量dbsize//删除当前实例中的keyflushdb//删除所有实例中的keyflushall//查看当前数据库实例的keykeys pattern // ?匹配一个,*匹配多个keys * //匹配所有keys ?a* //匹配第二个为a的keys [a-z0-9A-Z] //匹配[]中字符中的一个//查看配置项config get parameter //支持通配符config get * //获取所有config get port //查看端口配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tags </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你真的了解机器学习吗？</title>
      <link href="/choodsire.github.io/2022/03/12/ni-zhen-de-liao-jie-ji-qi-xue-xi-ma/"/>
      <url>/choodsire.github.io/2022/03/12/ni-zhen-de-liao-jie-ji-qi-xue-xi-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><font color="#999AAA">第一章 机器学习概述第二章 数据预处理第三章 决策树<font color="#999AAA"><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><font color="#999AAA">随着人工智能的不断发展，机器学习这门技术也越来越重要，很多人都开启了学习机器学习，本文就介绍了机器学习的基础内容。</font><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><p><font color="#999AAA">提示：以下是本篇文章正文内容，下面案例可供参考</font></p><font color="#999AAA"><h2 id="机器学习是什么？"><a href="#机器学习是什么？" class="headerlink" title="机器学习是什么？"></a>机器学习是什么？</h2><p><font color="#999AAA">机器学习是一门能够让编程计算机从数据中学习的计算机科学。<br>一个计算机程序在完成任务T之后，获得经验E，其表现效果为P，如果任务T的性能表现，也就是用以衡量的P，随着E增加而增加，那么这样计算机程序就被称为机器学习系统。<br>自我完善，自我增进，自我适应。</font></p><font color="#999AAA"><h2 id="为什么需要机器学习"><a href="#为什么需要机器学习" class="headerlink" title="为什么需要机器学习"></a>为什么需要机器学习</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2><ul><li>自动化的升级和维护</li><li>解决那些算法过于复杂甚至跟本就没有已知算法的问题</li><li>在机器学习的过程中协助人类获得对事物的洞见</li></ul><h2 id="机器学习的问题"><a href="#机器学习的问题" class="headerlink" title="机器学习的问题"></a>机器学习的问题</h2><p><font color="#999AAA">1. 建模问题<br>   所谓机器学习，在形式上可这样理解：在数据对象中通过统计或推理的方法，寻找一个接受特定输入X，并给出预期输出Y的功能函数f，即Y=f(X)。<br>2. 评估问题<br>   针对已知的输入，函数给出的输出(预测值)与实际输出(目标值)之间存在一定的误差，因此需要构建一个评估体系，根据误差的大小判定函数的优劣。<br>3. 优化问题<br>   学习的核心在于改善性能，通过数据对算法的反复锤炼，不断提升函数预测的准确性，直至获得能够满足实际需求的最优解，这个过程就是机器学习。</font></p><font color="#999AAA"><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h2 id="机器学习的种类"><a href="#机器学习的种类" class="headerlink" title="机器学习的种类"></a>机器学习的种类</h2><p><strong>监督学习、无监督学习、半监督学习、强化学习</strong></p><ol><li>有监督学习：用已知输出评估模型的性能。</li><li>无监督学习：在没有已知输出的情况下，仅仅根据输入信息的相关性，进行类别的划分。</li><li>半监督学习：先通过无监督学习划分类别，再根据人工标记通过有监督学习预测输出。</li><li>强化学习：通过对不同决策结果的奖励和惩罚，使机器学习系统在经过足够长时间的训练以后，越来越倾向于给出接近期望结果的输出。</li></ol><p><strong>批量学习和增量学习</strong></p><ol><li>批量学习：将学习的过程和应用的过程截然分开，用全部的训练数据训练模型，然后再在应用场景中实现预测，当预测结果不够理想时，重新回到学习过程，如此循环。</li><li>增量学习：将学习的过程和应用的过程统一起来，在应用的同时以增量的方式，不断学习新的内容，边训练边预测。</li></ol><p><strong>基于实例的学习和基于模型的学习</strong></p><ol><li><p>根据以往的经验，寻找与待预测输入最接近的样本，以其输出作为预测结果。</p><table><thead><tr><th>年龄</th><th>学历</th><th>经验</th><th>性别</th><th>月薪</th></tr></thead><tbody><tr><td>25</td><td>硕士</td><td>2</td><td>女</td><td>10000</td></tr><tr><td>20</td><td>本科</td><td>3</td><td></td><td>8000</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>20</td><td>本科</td><td>3</td><td>男</td><td>？</td></tr></tbody></table></li><li><p>基于模型的学习：根据以往的经验，建立用于联系输出和输入的某种数学模型，将待预测输入代入该模型，预测其结果。<br>输入 -&gt; 输出<br>1           2<br>2           4<br>3           6   Y = 2 * X<br>…<br>9           ?    -&gt; 18</p></li></ol><h2 id="机器学习的一般过程"><a href="#机器学习的一般过程" class="headerlink" title="机器学习的一般过程"></a>机器学习的一般过程</h2><p><strong>数据处理</strong></p><ol><li>数据收集 （数据检索、数据挖掘、爬虫）</li><li>数据清洗</li></ol><p><strong>机器学习</strong></p><ol><li>选择模型 （算法）</li><li>训练模型 （算法）</li><li>评估模型 （工具、框架、算法知识）</li><li>测试模型</li></ol><p><strong>业务运维</strong></p><ol><li>应用模型</li><li>维护模型</li></ol><h2 id="机器学习的典型应用"><a href="#机器学习的典型应用" class="headerlink" title="机器学习的典型应用"></a>机器学习的典型应用</h2><p>股价预测、推荐引擎、自然语言识别、语音识别、图像识别、人脸识别</p><h2 id="机器学习的基本问题"><a href="#机器学习的基本问题" class="headerlink" title="机器学习的基本问题"></a>机器学习的基本问题</h2><p>1)回归问题：根据已知的输入和输出寻找某种性能最佳的模型，将未知输出的输入代入模型，得到连续的输出。</p><p>2)分类问题：根据已知的输入和输出寻找某种性能最佳的模型，将未知输出的输入代入模型，得到离散的输出。</p><p>3)聚类问题：根据已知输入的相似程度，将其划分为不同的群落。</p><p>4)降维问题：在性能损失尽可能小的前提下，降低数据的复杂度。<br>关注公众号《朱同学的深度学习》！不定期更新</p></font></font></font></font>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入门机器学习，都应该懂的数据预处理</title>
      <link href="/choodsire.github.io/2022/03/12/ru-men-ji-qi-xue-xi-du-ying-gai-dong-de-shu-ju-yu-chu-li/"/>
      <url>/choodsire.github.io/2022/03/12/ru-men-ji-qi-xue-xi-du-ying-gai-dong-de-shu-ju-yu-chu-li/</url>
      
        <content type="html"><![CDATA[<p>第一章 机器学习概述<br>第二章 数据预处理<br>第三章 决策树<br>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><p>数据预处理的过程： 输入数据 -&gt; 模型 -&gt; 输出数据</p><p>数据样本矩阵</p><table><thead><tr><th>年龄</th><th>学历</th><th>经验</th><th>性别</th><th>月薪</th></tr></thead><tbody><tr><td>25</td><td>网红</td><td>2</td><td>女</td><td>10000</td></tr><tr><td>20</td><td>包工头</td><td>3</td><td>男</td><td>8000</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>一行一样本，一列一特征。</p><p><strong>数据预处理相关库</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 解决机器学习问题的科学计算工具包</span><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="均值移除-标准化"><a href="#均值移除-标准化" class="headerlink" title="均值移除(标准化)"></a>均值移除(标准化)</h4><p>由于一个样本的不同特征值差异较大，不利于使用现有机器学习算法进行样本处理。<strong>均值移除</strong>可以让样本矩阵中的每一列的平均值为0，标准差为1。</p><p>如何使样本矩阵中的每一列的平均值为0呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">例如有一列特征值表示年龄： <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">23</span>mean <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">17</span> <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">+</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">=</span> <span class="token number">20</span>a' <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span>b' <span class="token operator">=</span>  <span class="token number">0</span>c' <span class="token operator">=</span>  <span class="token number">3</span>完成！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如何使样本矩阵中的每一列的标准差为1呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a' <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span>b' <span class="token operator">=</span>  <span class="token number">0</span>c' <span class="token operator">=</span>  <span class="token number">3</span>s<span class="token string">' = std(a'</span><span class="token punctuation">,</span> <span class="token string">b', c'</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>a<span class="token string">'/s'</span><span class="token punctuation">,</span>  <span class="token string">b'/s'</span><span class="token punctuation">,</span>  c<span class="token string">'/s'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>均值移除API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token comment"># scale函数用于对函数进行预处理，实现均值移除。</span><span class="token comment"># array为原数组，返回A为均值移除后的结果。</span>A <span class="token operator">=</span> sp<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">18.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">24.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>std_samples <span class="token operator">=</span> sp<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="范围缩放"><a href="#范围缩放" class="headerlink" title="范围缩放"></a>范围缩放</h4><p>将样本矩阵中的每一列的最小值和最大值设定为相同的区间，统一各列特征值的范围。一般情况下会把特征值缩放至[0, 1]区间。</p><p>如何使一组特征值的最小值为0呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">例如有一列特征值表示年龄： <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>每个元素减去特征值数组所有元素的最小值即可：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如何使一组特征值的最大值为1呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>把特征值数组的每个元素除以最大值即可：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>范围缩放API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建MinMax缩放器</span>mms <span class="token operator">=</span> sp<span class="token punctuation">.</span>MinMaxScaler<span class="token punctuation">(</span>feature_range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 调用mms对象的方法执行缩放操作, 返回缩放过后的结果</span>result <span class="token operator">=</span> mms<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>mms_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> col <span class="token keyword">in</span> mms_samples<span class="token punctuation">.</span>T<span class="token punctuation">:</span>    col_min <span class="token operator">=</span> col<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    col_max <span class="token operator">=</span> col<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>        <span class="token punctuation">[</span>col_min<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>col_max<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    col <span class="token operator">*=</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    col <span class="token operator">+=</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>mms_samples<span class="token punctuation">)</span><span class="token comment"># 根据给定范围创建一个范围缩放器</span>mms <span class="token operator">=</span> sp<span class="token punctuation">.</span>MinMaxScaler<span class="token punctuation">(</span>feature_range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 用范围缩放器实现特征值的范围缩放</span>mms_samples <span class="token operator">=</span> mms<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mms_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="归一化"><a href="#归一化" class="headerlink" title="归一化"></a>归一化</h4><p>有些情况每个样本的每个特征值具体的值并不重要，但是每个样本特征值的占比更加重要。</p><table><thead><tr><th></th><th>Python</th><th>Java</th><th>PHP</th></tr></thead><tbody><tr><td>2017</td><td>10</td><td>20</td><td>5</td></tr><tr><td>2018</td><td>8</td><td>5</td><td>0</td></tr></tbody></table><p>所以归一化即是用每个样本的每个特征值除以该样本各个特征值绝对值的总和。变换后的样本矩阵，每个样本的特征值绝对值之和为1。</p><p>归一化相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># array 原始样本矩阵</span><span class="token comment"># norm  范数</span><span class="token comment">#    l1 - l1范数，向量中个元素绝对值之和</span><span class="token comment">#    l2 - l2范数，向量中个元素平方之和</span><span class="token comment"># 返回归一化预处理后的样本矩阵</span>sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>array<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>nor_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> row <span class="token keyword">in</span> nor_samples<span class="token punctuation">:</span>    row <span class="token operator">/=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 归一化预处理</span>nor_samples <span class="token operator">=</span> sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>raw_samples<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二值化"><a href="#二值化" class="headerlink" title="二值化"></a>二值化</h4><p>有些业务并不需要分析矩阵的详细完整数据（比如图像边缘识别只需要分析出图像边缘即可），可以根据一个事先给定的阈值，用0和1表示特征值不高于或高于阈值。二值化后的数组中每个元素非0即1，达到简化数学模型的目的。</p><p>二值化相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 给出阈值, 获取二值化器</span><span class="token builtin">bin</span> <span class="token operator">=</span> sp<span class="token punctuation">.</span>Binarizer<span class="token punctuation">(</span>threshold<span class="token operator">=</span>阈值<span class="token punctuation">)</span><span class="token comment"># 调用transform方法对原始样本矩阵进行二值化预处理操作</span>result <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>bin_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>bin_samples<span class="token punctuation">[</span>bin_samples <span class="token operator">&lt;=</span> <span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>bin_samples<span class="token punctuation">[</span>bin_samples <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_samples<span class="token punctuation">)</span><span class="token comment"># 根据给定的阈值创建一个二值化器</span><span class="token builtin">bin</span> <span class="token operator">=</span> sp<span class="token punctuation">.</span>Binarizer<span class="token punctuation">(</span>threshold<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token comment"># 通过二值化器进行二值化预处理</span>bin_samples <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="独热编码"><a href="#独热编码" class="headerlink" title="独热编码"></a>独热编码</h4><p>为样本特征的每个值建立一个由一个1和若干个0组成的序列，用该序列对所有的特征值进行编码。</p><pre class="line-numbers language-none"><code class="language-none">两个数   三个数四个数132754186  739为每一个数字进行独热编码：1-10    3-1002-10007-01    5-010   4-0100        8-001   6-0010                9-0001编码完毕后得到最终经过独热编码后的样本矩阵：101001000010100100100010010011000001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>独热编码相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建一个独热编码器</span><span class="token comment"># sparse： 是否使用紧缩格式（稀疏矩阵）</span><span class="token comment"># dtyle：  数据类型</span>ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span>是否采用紧缩格式<span class="token punctuation">,</span> dtype<span class="token operator">=</span>数据类型<span class="token punctuation">)</span><span class="token comment"># 对原始样本矩阵进行处理，返回独热编码后的样本矩阵。</span>result <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span>是否采用紧缩格式<span class="token punctuation">,</span> dtype<span class="token operator">=</span>数据类型<span class="token punctuation">)</span><span class="token comment"># 对原始样本矩阵进行训练，得到编码字典</span>encode_dict <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span class="token comment"># 调用encode_dict字典的transform方法 对数据样本矩阵进行独热编码</span>result <span class="token operator">=</span> encode_dict<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 创建独热编码器</span>ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token comment"># 用独特编码器对原始样本矩阵做独热编码</span>ohe_dict <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe_dict<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ohe_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="标签编码"><a href="#标签编码" class="headerlink" title="标签编码"></a>标签编码</h4><p>根据字符串形式的特征值在特征序列中的位置，为其指定一个数字标签，用于提供给基于数值算法的学习模型。</p><p>标签编码相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 获取标签编码器</span>lbe <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 调用标签编码器的fit_transform方法训练并且为原始样本矩阵进行标签编码</span>result <span class="token operator">=</span> lbe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span class="token comment"># 根据标签编码的结果矩阵反查字典 得到原始数据矩阵</span>samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token string">'audi'</span><span class="token punctuation">,</span> <span class="token string">'ford'</span><span class="token punctuation">,</span> <span class="token string">'audi'</span><span class="token punctuation">,</span> <span class="token string">'toyota'</span><span class="token punctuation">,</span>    <span class="token string">'ford'</span><span class="token punctuation">,</span> <span class="token string">'bmw'</span><span class="token punctuation">,</span> <span class="token string">'toyota'</span><span class="token punctuation">,</span> <span class="token string">'ford'</span><span class="token punctuation">,</span>    <span class="token string">'audi'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>lbe <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>lbe_samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lbe_samples<span class="token punctuation">)</span>inv_samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>lbe_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>inv_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关注公众号，学习更多内容！<br><img src="D:\blog\hexo-shoka\myblog\source_posts\入门机器学习，都应该懂的数据预处理\image-20220312180513137.png" alt="image-20220312180513137"></p>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最简单的学习决策树的入门系列</title>
      <link href="/choodsire.github.io/2022/03/12/zui-jian-dan-de-xue-xi-jue-ce-shu-de-ru-men-xi-lie/"/>
      <url>/choodsire.github.io/2022/03/12/zui-jian-dan-de-xue-xi-jue-ce-shu-de-ru-men-xi-lie/</url>
      
        <content type="html"><![CDATA[<h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><p>第一章 机器学习概述<br>第二章 数据预处理<br>第三章 决策树</p><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><h4 id="基本算法原理"><a href="#基本算法原理" class="headerlink" title="基本算法原理"></a>基本算法原理</h4><p>核心思想：相似的输入必会产生相似的输出。例如预测某人薪资：</p><p>年龄：1-青年，2-中年，3-老年<br>学历：1-本科，2-硕士，3-博士<br>经历：1-出道，2-一般，3-老手，4-骨灰<br>性别：1-男性，2-女性</p><table><thead><tr><th>年龄</th><th>学历</th><th>经历</th><th>性别</th><th>==&gt;</th><th>薪资</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>==&gt;</td><td>6000（低）</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1</td><td>==&gt;</td><td>10000（中）</td></tr><tr><td>3</td><td>3</td><td>4</td><td>1</td><td>==&gt;</td><td>50000（高）</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>==&gt;</td><td>…</td></tr><tr><td>1</td><td>3</td><td>2</td><td>2</td><td>==&gt;</td><td>?</td></tr></tbody></table><p>为了提高搜索效率，使用树形数据结构处理样本数据：<br>$$<br>年龄=1\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>\quad\quad<br>年龄=2\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>\quad\quad<br>年龄=3\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>$$<br>首先从训练样本矩阵中选择第一个特征进行子表划分，使每个子表中该特征的值全部相同，然后再在每个子表中选择下一个特征按照同样的规则继续划分更小的子表，不断重复直到所有的特征全部使用完为止，此时便得到叶级子表，其中所有样本的特征值全部相同。对于待预测样本，根据其每一个特征的值，选择对应的子表，逐一匹配，直到找到与之完全匹配的叶级子表，用该子表中样本的输出，通过平均(回归)或者投票(分类)为待预测样本提供输出。</p><p>随着子表的划分，信息熵（信息的混乱程度）越来越小，信息越来越纯，数据越来越有序。</p><p>决策树回归器模型相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token comment"># 创建决策树回归器模型  决策树的最大深度为4</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment"># 训练模型  </span><span class="token comment"># train_x： 二维数组样本数据</span><span class="token comment"># train_y： 训练集中对应每行样本的结果</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：预测波士顿地区房屋价格。</p><ol><li>读取数据，打断原始数据集。 划分训练集和测试集。</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">as</span> sd<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token comment"># 加载波士顿地区房价数据集</span>boston <span class="token operator">=</span> sd<span class="token punctuation">.</span>load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">)</span><span class="token comment"># |CRIM|ZN|INDUS|CHAS|NOX|RM|AGE|DIS|RAD|TAX|PTRATIO|B|LSTAT|</span><span class="token comment"># 犯罪率|住宅用地比例|商业用地比例|是否靠河|空气质量|房间数|年限|距中心区距离|路网密度|房产税|师生比|黑人比例|低地位人口比例|</span><span class="token comment"># 打乱原始数据集的输入和输出</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>boston<span class="token punctuation">.</span>data<span class="token punctuation">,</span> boston<span class="token punctuation">.</span>target<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 划分训练集和测试集</span>train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \    y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>创建决策树回归器模型，使用训练集训练模型。使用测试集测试模型。</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token comment"># 创建决策树回归模型</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="工程优化"><a href="#工程优化" class="headerlink" title="工程优化"></a>工程优化</h4><p>不必用尽所有的特征，叶级子表中允许混杂不同的特征值，以此降低决策树的层数，在精度牺牲可接受的前提下，提高模型的性能。通常情况下，可以优先选择使<b style="color:red;">信息熵</b>减少量最大的特征作为划分子表的依据。</p><h4 id="集合算法"><a href="#集合算法" class="headerlink" title="集合算法"></a>集合算法</h4><p>根据多个不同模型给出的预测结果，利<strong>用平均(回归)或者投票(分类)的方法</strong>，得出最终预测结果。</p><p>基于决策树的集合算法，就是按照某种规则，构建多棵彼此不同的决策树模型，分别给出针对未知样本的预测结果，最后通过平均或投票得到相对综合的结论。</p><h5 id="正向激励"><a href="#正向激励" class="headerlink" title="正向激励"></a>正向激励</h5><p>首先为样本矩阵中的样本随机分配初始权重，由此构建一棵带有权重的决策树，在由该决策树提供预测输出时，通过加权平均或者加权投票的方式产生预测值。将训练样本代入模型，预测其输出，对那些预测值与实际值不同的样本，提高其权重，由此形成第二棵决策树。重复以上过程，构建出不同权重的若干棵决策树。</p><p>正向激励相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment"># model: 决策树模型（一颗）</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment"># 自适应增强决策树回归模型</span><span class="token comment"># n_estimators：构建400棵不同权重的决策树，训练模型</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>model<span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：基于正向激励训练预测波士顿地区房屋价格的模型。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建基于决策树的正向激励回归器模型</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特征重要性</strong></p><p><strong>作为决策树模型训练过程的副产品</strong>，根据每个特征划分子表前后的信息熵减少量就标志了该特征的重要程度，此即为该特征重要性指标。训练得到的模型对象提供了属性：feature_importances_来存储每个特征的重要性。</p><p>获取样本矩阵特征重要性属性：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>fi <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：获取普通决策树与正向激励决策树训练的两个模型的特征重要性值，按照从大到小顺序输出绘图。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpmodel <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 决策树回归器给出的特征重要性</span>fi_dt <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>    st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 基于决策树的正向激励回归器给出的特征重要性</span>fi_ab <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Feature Importance'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Decision Tree'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_dt<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_dt<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> feature_names<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'AdaBoost Decision Tree'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_ab<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_ab<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightcoral'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'indianred'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> feature_names<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自助聚合"><a href="#自助聚合" class="headerlink" title="自助聚合"></a>自助聚合</h5><p>每次从总样本矩阵中以<strong>有放回抽样的方式随机抽取部分样本</strong>构建决策树，这样形成多棵包含不同训练样本的决策树，以削弱某些强势样本对模型预测结果的影响，提高模型的泛化特性。</p><h5 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h5><p>在自助聚合的基础上，每次构建决策树模型时，不仅<strong>随机选择部分样本</strong>，而且还随机选择部分特征，这样的集合算法，不仅规避了强势样本对预测结果的影响，而且也<strong>削弱了强势特征的影响</strong>，使模型的预测能力更加泛化。</p><p>随机森林相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment"># 随机森林回归模型（属于集合算法的一种）</span><span class="token comment"># max_depth：决策树最大深度10</span><span class="token comment"># n_estimators：构建1000棵决策树，训练模型</span><span class="token comment"># min_samples_split: 子表中最小样本数 若小于这个数字，则不再继续向下拆分</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：分析共享单车的需求，从而判断如何进行共享单车的投放。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpdata <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../data/bike_day.csv'</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>day_headers <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span> max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 基于“天”数据集的特征重要性</span>fi_dy <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../data/bike_hour.csv'</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>hour_headers <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \    y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>    min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 基于“小时”数据集的特征重要性</span>fi_hr <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>画图显示两组样本数据的特征重要性：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Bike'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Day'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_dy<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_dy<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> day_headers<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Hour'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_hr<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_hr<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightcoral'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'indianred'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> hour_headers<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关注公众号《朱同学的深度学习》获取更多内容</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\最简单的学习决策树的入门系列\image-20220312180522489.png" alt="image-20220312180522489"></p>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经过半年的摸爬滚打，入门机器学习如此简单!</title>
      <link href="/choodsire.github.io/2022/03/12/jing-guo-ban-nian-de-mo-pa-gun-da-ru-men-ji-qi-xue-xi-ru-ci-jian-dan/"/>
      <url>/choodsire.github.io/2022/03/12/jing-guo-ban-nian-de-mo-pa-gun-da-ru-men-ji-qi-xue-xi-ru-ci-jian-dan/</url>
      
        <content type="html"><![CDATA[<h1 id="经过半年的摸爬滚打，入门机器学习如此简单？"><a href="#经过半年的摸爬滚打，入门机器学习如此简单？" class="headerlink" title="经过半年的摸爬滚打，入门机器学习如此简单？"></a>经过半年的摸爬滚打，入门机器学习如此简单？</h1><p><img src="https://img-blog.csdnimg.cn/914dfafa0a0143439f5238c57648a137.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lya6aOe55qE5LyB6bmF44CL44CK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="思维导图"></p><h2 id="知道自己为什么学习机器学习"><a href="#知道自己为什么学习机器学习" class="headerlink" title="知道自己为什么学习机器学习"></a>知道自己为什么学习机器学习</h2><p>1.可能通过机器学习更好的深入深度学习。那么机器学习就点到为止。两周时间了解机器学习的理论与代码的实现。一周的时间去做机器学习的项目</p><p>2.自己感兴趣，未来的就业方向。这时候就需要深耕在这个领域里</p><p>3.只是为了参加竞赛取得好成绩。</p><p>三者都是相辅相成的，都有联系<br><img src="https://img-blog.csdnimg.cn/ba6db2a8507844088a2c2201d190df8d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lya6aOe55qE5LyB6bmF44CL44CK,size_13,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习"></a>什么是机器学习</h2><p>首先机器学习是一门能够让编程计算机从数据中学习的计算机科学</p><p>其次一个计算机程序在完成任务T之后，获得经验E，其表现效果为P，如果任务T的性能表现，也就是用以衡量的P，随着E增加而增加，那么这样计算机程序就被称为机器学习系统。</p><p>最后自我完善，自我增进，自我适应</p><h2 id="如何入门机器学习"><a href="#如何入门机器学习" class="headerlink" title="如何入门机器学习"></a>如何入门机器学习</h2><p>1.通过自己的需求，从网上找到适合自己的学习路线</p><p>如果只是想要进阶深度学习我推荐DASOU这是他的B站入门推荐<br>（<a href="https://www.bilibili.com/video/BV1yg411K72z?from=search&amp;seid=9242587204616347593&amp;spm_id_from=333.337.0.0%EF%BC%89">https://www.bilibili.com/video/BV1yg411K72z?from=search&amp;seid=9242587204616347593&amp;spm_id_from=333.337.0.0）</a></p><p>2.前期如果是从0开始不要在python编程语言上浪费太长的时间有其他语言的基础，3天菜鸟教程搞定，没有编程语言基础3周的时间看python从入门到实践</p><p>3.有问题时可以向学长学姐请教，最好有在一起学习的志同道合的伙伴。方便交流学习</p><p>4.不能停留在机器学习的理论框架上，一定要落实到代码上</p><p>在探索机器学习的学习过程中，有许多的误区。希望我的分享可以让大家可以少走弯路。之后我还会分享机器学习的知识，希望大家可以持续关注我。</p><p><img src="https://img-blog.csdnimg.cn/d6f5661959b84c169403ae2d435c5484.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lya6aOe55qE5LyB6bmF44CL44CK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="点关注不迷路"></p><p>关注公众号《朱同学的深度学习》学习更多内容。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\经过半年的摸爬滚打，入门机器学习如此简单\image-20220312180445850.png" alt="image-20220312180445850"></p>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql的学习笔记</title>
      <link href="/choodsire.github.io/2022/03/12/mysql-de-xue-xi-bi-ji/"/>
      <url>/choodsire.github.io/2022/03/12/mysql-de-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="DB-DBMS-SQL关系"><a href="#DB-DBMS-SQL关系" class="headerlink" title="DB DBMS SQL关系"></a>DB DBMS SQL关系</h1><p>DB:是数据库在硬盘中的文件</p><p>DBMS:是管理数据库的系统,数据库管理系统</p><p>SQL:是结构查询语言,是高级语言,在DBMS中先编译运行.</p><p>DBMS(执行) -&gt; SQL(操控) -&gt; DB(文件)</p><h1 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h1><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205194529927.png" alt="image-20220205194529927"></p><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><h2 id="登入mysql"><a href="#登入mysql" class="headerlink" title="登入mysql:"></a>登入mysql:</h2><p>​    mysql -u root -p</p><h2 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库:"></a>查看数据库:</h2><p>​    show databases;(不是sql语句,是mysql独有的)</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库:"></a>创建数据库:</h2><p>​    create database bjpowernode;(不是sql语句,是mysql独有的)</p><h2 id="使用bjpowernode数据库"><a href="#使用bjpowernode数据库" class="headerlink" title="使用bjpowernode数据库:"></a>使用bjpowernode数据库:</h2><p>​    use bjpowernode;(不是sql语句,是mysql独有的)</p><h2 id="查看当前数据中的表"><a href="#查看当前数据中的表" class="headerlink" title="查看当前数据中的表:"></a>查看当前数据中的表:</h2><p>​    show tables;(不是sql语句,是mysql独有的)</p><h2 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h2><p>​    source 路径\文件名.sql</p><p>后缀名为.sql的文件称为sql脚本.</p><p>直接使用source命令可以执行sql脚本</p><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库:"></a>删除数据库:</h2><p>​    drop database jpowernode;</p><h2 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构:"></a>查看表结构:</h2><p>​    desc dept;(部门表)</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201017469.png" alt="image-20220205201017469"></p><p>​    desc emp;(员工表)</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201038884.png" alt="image-20220205201038884"></p><p>​    desc salgrade;(工资等级表)</p><p>​    <img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201147925.png" alt="image-20220205201147925"></p><h2 id="查看表中数据"><a href="#查看表中数据" class="headerlink" title="查看表中数据:"></a>查看表中数据:</h2><p>​    select * from dept;</p><p>​    <img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201550191.png" alt="image-20220205201550191"></p><p> select * fromt emp;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201615741.png" alt="image-20220205201615741"></p><p> select * from salgrade;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201637707.png" alt="image-20220205201637707"></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="查询当前使用的数据库"><a href="#查询当前使用的数据库" class="headerlink" title="查询当前使用的数据库:"></a>查询当前使用的数据库:</h2><p>​    select database();</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201813112.png" alt="image-20220205201813112"></p><h2 id="查看当前数据库版本"><a href="#查看当前数据库版本" class="headerlink" title="查看当前数据库版本:"></a>查看当前数据库版本:</h2><p>​    select version();</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201818017.png" alt="image-20220205201818017"></p><h2 id="结束一条语句"><a href="#结束一条语句" class="headerlink" title="结束一条语句"></a>结束一条语句</h2><p>\c  </p><h2 id="退出mysql"><a href="#退出mysql" class="headerlink" title="退出mysql"></a>退出mysql</h2><p>exit</p><h1 id="查看语句"><a href="#查看语句" class="headerlink" title="查看语句"></a>查看语句</h1><h2 id="查看现有的数据库"><a href="#查看现有的数据库" class="headerlink" title="查看现有的数据库"></a>查看现有的数据库</h2><p>​    show databases;</p><h2 id="查看当前使用的库"><a href="#查看当前使用的库" class="headerlink" title="查看当前使用的库"></a>查看当前使用的库</h2><p>​    select database();</p><h2 id="查看当前库中的表"><a href="#查看当前库中的表" class="headerlink" title="查看当前库中的表"></a>查看当前库中的表</h2><p>​    show tables;</p><h2 id="查看其他库中的表"><a href="#查看其他库中的表" class="headerlink" title="查看其他库中的表"></a>查看其他库中的表</h2><p>​    show tables from 其他表名;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205202828271.png" alt="image-20220205202828271"></p><h2 id="查看表的结构"><a href="#查看表的结构" class="headerlink" title="查看表的结构"></a>查看表的结构</h2><p>​    desc emp;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205202857115.png" alt="image-20220205202857115"></p><h2 id="查看表的创建语句"><a href="#查看表的创建语句" class="headerlink" title="查看表的创建语句"></a>查看表的创建语句</h2><p>​    show create table emp;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203026383.png" alt="image-20220205203026383"></p><h1 id="查询语句-DQL"><a href="#查询语句-DQL" class="headerlink" title="查询语句(DQL)"></a>查询语句(DQL)</h1><h2 id="简单的查询语句"><a href="#简单的查询语句" class="headerlink" title="简单的查询语句"></a>简单的查询语句</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>select 字段名1,字段名2,字段名3,… from 表名;</p><p>sql语句不区分大小写;</p><p>sql语句以”;”结尾;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203429103.png" alt="image-20220205203429103"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203519851.png" alt="image-20220205203519851"></p><h3 id="字段可以参与数学计算"><a href="#字段可以参与数学计算" class="headerlink" title="字段可以参与数学计算;"></a>字段可以参与数学计算;</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203630396.png" alt="image-20220205203630396"></p><h3 id="给查询结果的列重复名"><a href="#给查询结果的列重复名" class="headerlink" title="给查询结果的列重复名"></a>给查询结果的列重复名</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203743216.png" alt="image-20220205203743216"></p><p>中文要加 ‘ ‘,</p><p>mysql建议字符串用单引号,不适用双引号;</p><h3 id="查询所有字段"><a href="#查询所有字段" class="headerlink" title="查询所有字段"></a>查询所有字段</h3><p>select * from emp;//实际开发中不使用*,效率低下</p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><h4 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h4><p>​    select 字段,字段…. from 表名 where 条件;</p><p>执行顺序:先from,然后where,最后select</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205204426151.png" alt="image-20220205204426151"></p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p>= 等于</p><p>&lt;&gt; 或!= 不等于</p><p>&lt; 小于</p><p>&lt;= 小于等于</p><p>&gt; 大于</p><p>&gt;= 大于等于</p><p>between … and … ,&gt;= and &lt;= 连个值之间</p><p>is null 为null</p><p>is not null 不为null</p><p>and 并且</p><p>or 或者</p><p>in 包含</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205210112929.png" alt="image-20220205210112929"></p><p>not in 不包含</p><p>not 取非</p><p>like 模糊查询,支持%或下划线匹配</p><p>​    %任意多的字符,_一个字符</p><p>between 字符 and 字符,左闭右开</p><p>()有最高优先级</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>语法</p><p>select 字段,字段… from 表名 order by 字段 排序规则;</p><p>默认是升序;</p><p>asc 升序</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211034870.png" alt="image-20220205211034870"></p><p>desc 降序</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211059265.png" alt="image-20220205211059265"></p><p>多个排序规则</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211327307.png" alt="image-20220205211327307"></p><p>按照列排序(不健壮)</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211432373.png" alt="image-20220205211432373"></p><p>顺序</p><p>order by是最后执行的</p><p>先from,后where,然后select,最后order by</p><h2 id="分组函数-多行处理函数"><a href="#分组函数-多行处理函数" class="headerlink" title="分组函数(多行处理函数)"></a>分组函数(多行处理函数)</h2><h3 id="count-计数"><a href="#count-计数" class="headerlink" title="count 计数"></a>count 计数</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211929872.png" alt="image-20220205211929872"></p><h3 id="sum-求和"><a href="#sum-求和" class="headerlink" title="sum 求和"></a>sum 求和</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211912105.png" alt="image-20220205211912105"></p><h3 id="avg-平均值"><a href="#avg-平均值" class="headerlink" title="avg 平均值"></a>avg 平均值</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211856984.png" alt="image-20220205211856984"></p><h3 id="max-最大值"><a href="#max-最大值" class="headerlink" title="max 最大值"></a>max 最大值</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211829647.png" alt="image-20220205211829647"></p><h3 id="min-最小值"><a href="#min-最小值" class="headerlink" title="min 最小值"></a>min 最小值</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211842997.png" alt="image-20220205211842997"></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>输入多行,输出一行结果</p><p>自动忽略NULL</p><p>分组函数不能使用在where子句中</p><h2 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h2><h3 id="ifnull-空处理函数"><a href="#ifnull-空处理函数" class="headerlink" title="ifnull() 空处理函数"></a>ifnull() 空处理函数</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205212548892.png" alt="image-20220205212548892"></p><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>输入一行,输出一行</p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><h3 id="group-by-按照某个字段或者某些字段进行分组"><a href="#group-by-按照某个字段或者某些字段进行分组" class="headerlink" title="group by: 按照某个字段或者某些字段进行分组"></a>group by: 按照某个字段或者某些字段进行分组</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205215535934.png"></p><h3 id="having-having是对分组之后的数据进行再次过滤-效率低下"><a href="#having-having是对分组之后的数据进行再次过滤-效率低下" class="headerlink" title="having: having是对分组之后的数据进行再次过滤,效率低下"></a>having: having是对分组之后的数据进行再次过滤,效率低下</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205215804800.png" alt="image-20220205215804800"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205215944591.png" alt="image-20220205215944591"></p><h2 id="查询结构去重"><a href="#查询结构去重" class="headerlink" title="查询结构去重"></a>查询结构去重</h2><p>distinct</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205220830498.png" alt="image-20220205220830498"></p><p>distinct 只能出现在所有字段的最前面</p><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><p>select 5</p><p>​    …</p><p>from 1</p><p>​    …</p><p>where 2</p><p>​    …</p><p>group by 3</p><p>​    …</p><p>having 4</p><p>​    …</p><p>order by 6</p><p>​    …</p><p>;</p><h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><p>​    使用inner join … on … where</p><p>​    inner可以省略</p><h5 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h5><p>​        表一和表二有相等的值</p><h5 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h5><p>​        表一和表二非相等的值</p><h5 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h5><p>​        表一和表一有相等的值</p><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><p>​    使用outer join … on … where</p><p>​    outer可以省略</p><h5 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h5><p>​        left outer join … on … where</p><p>​        左边为主表,右边为副表,副表中找不到对应值,填NULL</p><h5 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h5><p>​        right outer join … on … where</p><p>​        左边为副表,右边为主表,副表中找不到对应值,填NULL</p><h5 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h5><p>​        使用union 连接select 子语句</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206145040026.png" alt="image-20220206145040026"></p><h2 id="select子语句"><a href="#select子语句" class="headerlink" title="select子语句"></a>select子语句</h2><p>​    select</p><p>​        …(select …)</p><p>​    from</p><p>​        …(select …)</p><p>​    where </p><p>​        …(select …)</p><h2 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206152816984.png" alt="image-20220206152816984"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206152835675.png" alt="image-20220206152835675"></p><p>limit是sql语句最后执行的一个环节</p><p>select 5</p><p>​    …</p><p>from 1</p><p> …</p><p>where 2</p><p> …</p><p>group by 3</p><p>​    …</p><p>having 4</p><p>​    …</p><p>order by 6</p><p>​    …</p><p>limit 7</p><p>​    …;</p><h1 id="定义表数据结构语句-DDL"><a href="#定义表数据结构语句-DDL" class="headerlink" title="(定义表数据结构语句)DDL"></a>(定义表数据结构语句)DDL</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206153643617.png" alt="image-20220206153643617"></p><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>保证表中的数据的合法性,有效性,完整性.</p><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><p>not null :约束的字段不能为null</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206165825901.png" alt="image-20220206165825901"></p><h3 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h3><p> unique :约束的字段不能重复</p><p>列级约束</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206165724330.png" alt="image-20220206165724330"></p><p>批量添加unique,这表示(这两个一起不能重复)</p><p>表级约束</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206170017913.png" alt="image-20220206170017913"></p><p>NULL可以重复</p><h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><p>primary key(pk): 约束的字段不能为null,也不能重复</p><h4 id="单一主键"><a href="#单一主键" class="headerlink" title="单一主键"></a>单一主键</h4><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206170550419.png" alt="image-20220206170550419"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206170622598.png" alt="image-20220206170622598"></p><h4 id="复合主键"><a href="#复合主键" class="headerlink" title="复合主键"></a>复合主键</h4><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207151235732.png" alt="image-20220207151235732"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207151253856.png" alt="image-20220207151253856"></p><p>​    复合主键不建议使用,违背了三范式.</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207151822609.png" alt="image-20220207151822609"></p><h3 id="mysql提供的主键值自增"><a href="#mysql提供的主键值自增" class="headerlink" title="mysql提供的主键值自增"></a>mysql提供的主键值自增</h3><p>auto_increment</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207153251978.png" alt="image-20220207153251978"></p><h3 id="外键约束-froeign-key-fk-…"><a href="#外键约束-froeign-key-fk-…" class="headerlink" title="外键约束 froeign key(fk):…"></a>外键约束 froeign key(fk):…</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207165549047.png" alt="image-20220207165549047"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170545755.png" alt="image-20220207170545755"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170555786.png" alt="image-20220207170555786"></p><p>​    <img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170602739.png" alt="image-20220207170602739"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170614934.png" alt="image-20220207170614934"> </p><p>父表中没有的数据,子表不可以绑定外键</p><p>外键值可以为NULL</p><p>被引用的字段不一定是主键,但至少具有unique约束</p><h3 id="检查约束-check-注意-mysql不支持"><a href="#检查约束-check-注意-mysql不支持" class="headerlink" title="检查约束 check  注意:     mysql不支持"></a>检查约束 check  注意:     mysql不支持</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">DROP TABLE IF EXISTS t_student;DROP TABLE IF EXISTS t_class;CREATE TABLE t_class(cno INT,cname VARCHAR(255),UNIQUE(cno));CREATE TABLE t_student(sno INT,sname VARCHAR(255),classno INT,FOREIGN KEY(classno) REFERENCES t_class(cno));INSERT INTO t_class VALUES(NULL,'xxxxx');INSERT INTO t_class VALUES(102,'yyyyy');INSERT INTO t_student VALUES(1,'a',NULL);INSERT INTO t_student VALUES(2,'b',NULL);INSERT INTO t_student VALUES(3,'c',102);INSERT INTO t_student VALUES(4,'d',102);SELECT * FROM t_class;SELECT * FROM t_student;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207173422067.png" alt="image-20220207173422067"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207173429767.png" alt="image-20220207173429767"></p><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><p>crerate table 表名(</p><p>​    字段1 数据类型,</p><p>​    字段2 数据类型 default 值,</p><p>​    字段3 数据类型</p><p>);</p><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><p>drop table if exists 表名;</p><h2 id="拷贝表"><a href="#拷贝表" class="headerlink" title="拷贝表"></a>拷贝表</h2><p>create table 表名 as select 语句;</p><p>把查询结果创建成一个新表<img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206160456714.png" alt="image-20220206160456714"></p><h1 id="修改表数据语句-DML"><a href="#修改表数据语句-DML" class="headerlink" title="修改表数据语句(DML)"></a>修改表数据语句(DML)</h1><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><p>insert into 表名(字段1,字段2…) values(字段1,字段2…);</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206154619766.png" alt="image-20220206154619766"></p><p>字段顺序只要一一对应就行,无特殊顺序要求</p><p>为填入的字段,赋值为初始值</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206155940628.png" alt="image-20220206155940628"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206155953120.png" alt="image-20220206155953120"></p><p>insert可以插入多行数据</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206160102256.png" alt="image-20220206160102256"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206160125926.png" alt="image-20220206160125926"></p><h2 id="插入表"><a href="#插入表" class="headerlink" title="插入表"></a>插入表</h2><p>insert into 表名 select语句;</p><p>将select 的结果插入到表中</p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p>update 表名 set 字段名1=值1,字段名2=值2… where 条件;</p><p>没有条件整张表更新<img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206161305681.png" alt="image-20220206161305681"></p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>delete from 表名 where 条件;</p><p>没有条件所有删除</p><p>truncate table 表名;</p><p>表被截断,永久删除,不可回滚</p><h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207180749779.png" alt="image-20220207180749779"></p><p>show engines \g 查看当前mysql支持的存储引擎</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207181132085.png" alt="image-20220207181132085"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207181419957.png" alt="image-20220207181419957"></p><h2 id="常见的存储引擎"><a href="#常见的存储引擎" class="headerlink" title="常见的存储引擎"></a>常见的存储引擎</h2><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p>不支持事务,是mysql最常用的存储引擎,不是默认的.</p><p>使用三个文件表示每个表</p><p>​    格式文件:存储表结构的定义(mytable.frm)</p><p>​    数据文件:存储表行的内容(mytable.MYD)</p><p>​    索引文件:存储表上索引(mytable.MYI)</p><p>灵活的AUTO_INCREMENT字段处理</p><p>优点:</p><p>可被转换为压缩,只读表来节省空间.并且可以转换为只读表,提高检索效率.</p><p>缺点:</p><p>不支持事务.</p><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>是mysql的缺省引擎</p><p>特征</p><p>​    每个InnoDB表在数据库目录中以.frm格式文件表示</p><p>​    InnoDB表空间tablespace被用于存储表的内容(不可压缩,不可转换为只读,不节省空间)</p><p>​    提供一组用来记录事务性活动的日志文件</p><p>​    用COMMIT(提交),SAVEPOINT及ROLLBACK(回滚)支持事务处理</p><p>​    提供全ACID兼容</p><p>​    在mysql服务器崩溃后提供自动恢复</p><p>​    多版本(MVCC)和行级锁定</p><p>​    支持外键及引用的完整性,包括级联删除和更新</p><p>优点:</p><p>​        支持事务,行级锁,外键等.</p><p>​        这种存储引擎数据的安全得到保障.</p><h3 id="MEMORY"><a href="#MEMORY" class="headerlink" title="MEMORY"></a>MEMORY</h3><p>特征</p><p>​    在数据库目录内,每个表均以.frm格式 的文件表示</p><p>​    表数据及索引被存储在内存中</p><p>​    表级锁机制</p><p>​    不能包含TEXT或BLOB字段</p><p>以前叫做HEPA引擎</p><h1 id="事务-Transaction"><a href="#事务-Transaction" class="headerlink" title="事务(Transaction)"></a>事务(Transaction)</h1><p>一个事务是一个完整的业务逻辑单元,不可再分.</p><p>要不同时成功,那么同时失败</p><p>那么就得使用数据库的事务机制</p><p>和事务相关的语句只有:DML语句.(insert delete update)</p><p>事务的存在就是为了保证数据的完整性,安全性</p><p>事务通常需要多条DML语句共同联合完成.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>开始事务机制:</p><p>执行一条DML语句,将其执行记录到操作历史中.</p><p>执行一条DML语句,将其执行记录到操作历史中</p><p>…</p><p>提交事务或者回滚事务(结束事务机制)</p><p>提交事务:</p><p>​    删除操作历史,将更改保存在硬盘中.成功操作</p><p>回滚事务:</p><p>​    删除操作历史,并不保存.失败操作</p><p>SAVEPOINT(保存点):回滚可以回滚到此    </p><h2 id="事务的四大特性"><a href="#事务的四大特性" class="headerlink" title="事务的四大特性"></a>事务的四大特性</h2><h3 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h3><p>事务是最小的工作单元,不可再分.</p><h3 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h3><p>事务必须保证多条DML语句同时成功或同时失败</p><h3 id="隔离性"><a href="#隔离性" class="headerlink" title="隔离性"></a>隔离性</h3><p>事务A与事务B之间具有隔离</p><h3 id="持久性"><a href="#持久性" class="headerlink" title="持久性"></a>持久性</h3><p>持久性说的是最终数据必须持久化到硬盘文件中,事务才算成功的结束.</p><h2 id="隔离性-1"><a href="#隔离性-1" class="headerlink" title="隔离性"></a>隔离性</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207214158842.png" alt="image-20220207214158842"></p><p>mysql中的事务是自动提交的.</p><p>使用start transaction开启事务,就不是自动提交了.</p><p>设置隔离级别</p><p>set global transaction isolation level read uncommitted;</p><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>索引就相当于于一本书的目录,通过目录可以快速找到对于的资源.</p><p>在数据库方面,查询一张表的时候有两种检索方式:</p><p>​    第一种方式:全表扫描;</p><p>​    第二种:根据索引检索(效率很高)</p><p>索引虽然可以提高检索效率,但是不能随意的添加索引,因为索引也是数据库当中的对象,也需要不断的维护.有维护成本的.</p><p>什么时候考虑给字段添加索引?</p><p>​    数据量庞大.(根据用户的需求,根据线上的环境)</p><p>​    该字段很少的DML操作.(因为字段进行修改操作,索引也需要维护)</p><p>​    该字段经常出现在where字句中.(经常根据哪个字段查询)</p><p>主键和具有unique约束的字段自动添加检索.</p><p>查看sql语句的执行计划:<br>explain sql语句;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207223249721.png" alt="image-20220207223249721"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207223537321.png" alt="image-20220207223537321"></p><h2 id="创建索引对象"><a href="#创建索引对象" class="headerlink" title="创建索引对象"></a>创建索引对象</h2><p>create index 索引名称 on 表名(字段);</p><h2 id="删除索引对象"><a href="#删除索引对象" class="headerlink" title="删除索引对象"></a>删除索引对象</h2><p>drop index 索引名称 on 表名;</p><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>索引底层采用的数据结构是:B+Tree</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207230139049.png" alt="image-20220207230139049"></p><h2 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207230519093.png" alt="image-20220207230519093"></p><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207232415881.png" alt="image-20220207232415881"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207233712557.png" alt="image-20220207233712557"></p><h1 id="DBA命令"><a href="#DBA命令" class="headerlink" title="DBA命令"></a>DBA命令</h1><p>将数据库当中的数据导出</p><p>mysqldump 数据库名称&gt;路径 -u root -p</p><p>导入数据</p><p>create database 数据库名称;</p><p>use 数据库名;</p><p>source 路径;</p><h1 id="设计三范式"><a href="#设计三范式" class="headerlink" title="设计三范式"></a>设计三范式</h1><p>第一范式:</p><p>要有主键,字段具有原子性,不可再分</p><p>第二范式:</p><p>不能有部分依赖</p><p>多对多?</p><p>学生和老师</p><p>三张表,关系表,两个外键</p><p>第三范式:</p><p>不能有传递依赖</p><p>单对多?</p><p>学生和班级</p><p>两张表,学生一个外键.</p><p>父表和子表</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220208001110160.png" alt="image-20220208001110160"></p><h1 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h1><h2 id="行级锁-乐观锁"><a href="#行级锁-乐观锁" class="headerlink" title="行级锁(乐观锁)"></a>行级锁(乐观锁)</h2><p>select 语句 for update;</p><p>在一个事务没结束时必须排队,不允许其他修改</p><h2 id="表级锁-悲观锁"><a href="#表级锁-悲观锁" class="headerlink" title="表级锁(悲观锁)"></a>表级锁(悲观锁)</h2><p>允许并发操作</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity常用快捷键</title>
      <link href="/choodsire.github.io/2022/03/12/unity-chang-yong-kuai-jie-jian/"/>
      <url>/choodsire.github.io/2022/03/12/unity-chang-yong-kuai-jie-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity的常用快捷键"><a href="#Unity的常用快捷键" class="headerlink" title="Unity的常用快捷键"></a><font color="pink">Unity的常用快捷键</font></h1><p>F2: 重命名</p><p>q: 小手手,可以拖动场景</p><p>w: 移动工具,可以移动物体</p><p>e: 旋转工具,可以旋转物体</p><p>r: 缩放工具,可以缩放物体</p><p>t:二维缩放工具</p><p>y:全能工具,可以移动缩放旋转物体</p><p>shift + f: 可以将视图定位到物体,一定要选中物体再使用,不然没反应</p><p>ctrl + shift + f:可以将物体移动到当前视图位置.<font color="red">注:旋转与视图一致,常用与调整摄像机位置.</font></p><p>x: 在全局坐标系和局部坐标系间相互切换</p><p>z: 在出厂中心点(原始中心点)和计算中心点间相互切换.<font color="red">计算中心点是Unity计算出的中心点,在物体正中心,原始中心点是模型中心点</font></p><p>v: 按住v键,可以选择顶点,顶点吸附</p><p>ctrl:按住ctrl键,移动或旋转缩放物体,是按照一定的大小变换的.可以在edit中的Grid and snap菜单中修改单位</p><p>ctrl:按住ctrl,可以加选物体</p><p>shift:按住物体可以选择多个物体</p><p>ctrl + d: 快速复制物体</p><p>ctrl + c: 复制</p><p>ctrl + v: 粘贴</p><p>ctrl + a:全选</p><hr><p>shift + enter: 窗口最大化</p><p>ctrl + shift + b: 打包设置</p><p>ctrl + b: 打包并运行</p><p>ctrl + n:新建场景</p><p>ctrl + s: 保存</p><p>ctrl + r: 刷新</p><p>ctrl + z: 撤销</p><p>ctrl + y:重做</p><p>ctrl + p: 运行</p><p>ctrl + shift + p:暂停</p><p>ctrl + alt + p: 停止</p><p>按住鼠标右键进入漫游模式,wasd移动,按住shift加速.</p><p>其实方向键可以直接移动.</p><p>delete: 删除物体</p><p>shift + delete:强制删除(此时没有提示是否要删除)</p><p>ctrl + shift + c:打开控制台</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo建站心得</title>
      <link href="/choodsire.github.io/2022/03/11/hexo-jian-zhan-xin-de/"/>
      <url>/choodsire.github.io/2022/03/11/hexo-jian-zhan-xin-de/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次建站心得"><a href="#第一次建站心得" class="headerlink" title="第一次建站心得"></a>第一次建站心得</h1><p>总之太难了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
