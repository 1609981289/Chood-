<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>key的基本命令</title>
      <link href="/choodsire.github.io/2022/03/16/key-de-ji-ben-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/key-de-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="key的基本命令"><a href="#key的基本命令" class="headerlink" title="key的基本命令"></a><font color="pink">key的基本命令</font></h1><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//删除keydel key//检查key是否存在exists key//设置过期时间,按秒记expire key seconds//查看剩余时间,按秒ttl key //存在没设置时间,-1. 存在设置了时间,返回值为剩余时间. 不存在,-2//移除过期时间persist key//将key移动到其他数据库实例move key db//重复名keyrename key newkey//重复名key,当newkey不存在时renamenx key newkey//查看key的数据类型type key //string hash list set zset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis基础的命令</title>
      <link href="/choodsire.github.io/2022/03/16/redis-ji-chu-de-ming-ling/"/>
      <url>/choodsire.github.io/2022/03/16/redis-ji-chu-de-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="redis基础的命令"><a href="#redis基础的命令" class="headerlink" title="redis基础的命令"></a><font color="pink">redis基础的命令</font></h1><p>控制台中的命令:</p><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//启动redis服务redis-server //默认端口6379redis-server &amp;//后台启动,默认端口6379redis-server redis.conf &amp;//后台启动,使用指定配置文件//关闭redis服务redis-cli shutdown //关闭,say bye//使用客户端连接redisredis-cli //默认连接localhost,端口6379的服务redis-cli -h host -p port -a password //连接host主机,port端口,密码为password的服务redis-cli --raw //避免中文乱码//测试redis性能redis-benchmark <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>redis客户端使用的命令:</p><pre class="line-numbers language-redis" data-language="redis"><code class="language-redis">//查看redis信息info //查看所有info parameter //查看固定的信息//关闭连接 quit or exitquitexit //查看是否连接正常ping //返回pong表示正常//redis 默认有16个数据库实例,0-15select index//切换数据库实例//查看当前实例的key数量dbsize//删除当前实例中的keyflushdb//删除所有实例中的keyflushall//查看当前数据库实例的keykeys pattern // ?匹配一个,*匹配多个keys * //匹配所有keys ?a* //匹配第二个为a的//查看配置项config get parameter //支持通配符config get * //获取所有config get port //查看端口配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tags </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你真的了解机器学习吗？</title>
      <link href="/choodsire.github.io/2022/03/12/ni-zhen-de-liao-jie-ji-qi-xue-xi-ma/"/>
      <url>/choodsire.github.io/2022/03/12/ni-zhen-de-liao-jie-ji-qi-xue-xi-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><font color="#999AAA">第一章 机器学习概述第二章 数据预处理第三章 决策树<font color="#999AAA"><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p></font><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><font color="#999AAA">随着人工智能的不断发展，机器学习这门技术也越来越重要，很多人都开启了学习机器学习，本文就介绍了机器学习的基础内容。</font><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><p><font color="#999AAA">提示：以下是本篇文章正文内容，下面案例可供参考</font></p><font color="#999AAA"><h2 id="机器学习是什么？"><a href="#机器学习是什么？" class="headerlink" title="机器学习是什么？"></a>机器学习是什么？</h2><p><font color="#999AAA">机器学习是一门能够让编程计算机从数据中学习的计算机科学。<br>一个计算机程序在完成任务T之后，获得经验E，其表现效果为P，如果任务T的性能表现，也就是用以衡量的P，随着E增加而增加，那么这样计算机程序就被称为机器学习系统。<br>自我完善，自我增进，自我适应。</font></p><font color="#999AAA"><h2 id="为什么需要机器学习"><a href="#为什么需要机器学习" class="headerlink" title="为什么需要机器学习"></a>为什么需要机器学习</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2><ul><li>自动化的升级和维护</li><li>解决那些算法过于复杂甚至跟本就没有已知算法的问题</li><li>在机器学习的过程中协助人类获得对事物的洞见</li></ul><h2 id="机器学习的问题"><a href="#机器学习的问题" class="headerlink" title="机器学习的问题"></a>机器学习的问题</h2><p><font color="#999AAA">1. 建模问题<br>   所谓机器学习，在形式上可这样理解：在数据对象中通过统计或推理的方法，寻找一个接受特定输入X，并给出预期输出Y的功能函数f，即Y=f(X)。<br>2. 评估问题<br>   针对已知的输入，函数给出的输出(预测值)与实际输出(目标值)之间存在一定的误差，因此需要构建一个评估体系，根据误差的大小判定函数的优劣。<br>3. 优化问题<br>   学习的核心在于改善性能，通过数据对算法的反复锤炼，不断提升函数预测的准确性，直至获得能够满足实际需求的最优解，这个过程就是机器学习。</font></p><font color="#999AAA"><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h2 id="机器学习的种类"><a href="#机器学习的种类" class="headerlink" title="机器学习的种类"></a>机器学习的种类</h2><p><strong>监督学习、无监督学习、半监督学习、强化学习</strong></p><ol><li>有监督学习：用已知输出评估模型的性能。</li><li>无监督学习：在没有已知输出的情况下，仅仅根据输入信息的相关性，进行类别的划分。</li><li>半监督学习：先通过无监督学习划分类别，再根据人工标记通过有监督学习预测输出。</li><li>强化学习：通过对不同决策结果的奖励和惩罚，使机器学习系统在经过足够长时间的训练以后，越来越倾向于给出接近期望结果的输出。</li></ol><p><strong>批量学习和增量学习</strong></p><ol><li>批量学习：将学习的过程和应用的过程截然分开，用全部的训练数据训练模型，然后再在应用场景中实现预测，当预测结果不够理想时，重新回到学习过程，如此循环。</li><li>增量学习：将学习的过程和应用的过程统一起来，在应用的同时以增量的方式，不断学习新的内容，边训练边预测。</li></ol><p><strong>基于实例的学习和基于模型的学习</strong></p><ol><li><p>根据以往的经验，寻找与待预测输入最接近的样本，以其输出作为预测结果。</p><table><thead><tr><th>年龄</th><th>学历</th><th>经验</th><th>性别</th><th>月薪</th></tr></thead><tbody><tr><td>25</td><td>硕士</td><td>2</td><td>女</td><td>10000</td></tr><tr><td>20</td><td>本科</td><td>3</td><td></td><td>8000</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>20</td><td>本科</td><td>3</td><td>男</td><td>？</td></tr></tbody></table></li><li><p>基于模型的学习：根据以往的经验，建立用于联系输出和输入的某种数学模型，将待预测输入代入该模型，预测其结果。<br>输入 -&gt; 输出<br>1           2<br>2           4<br>3           6   Y = 2 * X<br>…<br>9           ?    -&gt; 18</p></li></ol><h2 id="机器学习的一般过程"><a href="#机器学习的一般过程" class="headerlink" title="机器学习的一般过程"></a>机器学习的一般过程</h2><p><strong>数据处理</strong></p><ol><li>数据收集 （数据检索、数据挖掘、爬虫）</li><li>数据清洗</li></ol><p><strong>机器学习</strong></p><ol><li>选择模型 （算法）</li><li>训练模型 （算法）</li><li>评估模型 （工具、框架、算法知识）</li><li>测试模型</li></ol><p><strong>业务运维</strong></p><ol><li>应用模型</li><li>维护模型</li></ol><h2 id="机器学习的典型应用"><a href="#机器学习的典型应用" class="headerlink" title="机器学习的典型应用"></a>机器学习的典型应用</h2><p>股价预测、推荐引擎、自然语言识别、语音识别、图像识别、人脸识别</p><h2 id="机器学习的基本问题"><a href="#机器学习的基本问题" class="headerlink" title="机器学习的基本问题"></a>机器学习的基本问题</h2><p>1)回归问题：根据已知的输入和输出寻找某种性能最佳的模型，将未知输出的输入代入模型，得到连续的输出。</p><p>2)分类问题：根据已知的输入和输出寻找某种性能最佳的模型，将未知输出的输入代入模型，得到离散的输出。</p><p>3)聚类问题：根据已知输入的相似程度，将其划分为不同的群落。</p><p>4)降维问题：在性能损失尽可能小的前提下，降低数据的复杂度。<br>关注公众号《朱同学的深度学习》！不定期更新</p></font></font></font></font>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>入门机器学习，都应该懂的数据预处理</title>
      <link href="/choodsire.github.io/2022/03/12/ru-men-ji-qi-xue-xi-du-ying-gai-dong-de-shu-ju-yu-chu-li/"/>
      <url>/choodsire.github.io/2022/03/12/ru-men-ji-qi-xue-xi-du-ying-gai-dong-de-shu-ju-yu-chu-li/</url>
      
        <content type="html"><![CDATA[<p>第一章 机器学习概述<br>第二章 数据预处理<br>第三章 决策树<br>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><p>数据预处理的过程： 输入数据 -&gt; 模型 -&gt; 输出数据</p><p>数据样本矩阵</p><table><thead><tr><th>年龄</th><th>学历</th><th>经验</th><th>性别</th><th>月薪</th></tr></thead><tbody><tr><td>25</td><td>网红</td><td>2</td><td>女</td><td>10000</td></tr><tr><td>20</td><td>包工头</td><td>3</td><td>男</td><td>8000</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table><p>一行一样本，一列一特征。</p><p><strong>数据预处理相关库</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 解决机器学习问题的科学计算工具包</span><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="均值移除-标准化"><a href="#均值移除-标准化" class="headerlink" title="均值移除(标准化)"></a>均值移除(标准化)</h4><p>由于一个样本的不同特征值差异较大，不利于使用现有机器学习算法进行样本处理。<strong>均值移除</strong>可以让样本矩阵中的每一列的平均值为0，标准差为1。</p><p>如何使样本矩阵中的每一列的平均值为0呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">例如有一列特征值表示年龄： <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">23</span>mean <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">17</span> <span class="token operator">+</span> <span class="token number">20</span> <span class="token operator">+</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">=</span> <span class="token number">20</span>a' <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span>b' <span class="token operator">=</span>  <span class="token number">0</span>c' <span class="token operator">=</span>  <span class="token number">3</span>完成！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如何使样本矩阵中的每一列的标准差为1呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a' <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span>b' <span class="token operator">=</span>  <span class="token number">0</span>c' <span class="token operator">=</span>  <span class="token number">3</span>s<span class="token string">' = std(a'</span><span class="token punctuation">,</span> <span class="token string">b', c'</span><span class="token punctuation">)</span> <span class="token punctuation">[</span>a<span class="token string">'/s'</span><span class="token punctuation">,</span>  <span class="token string">b'/s'</span><span class="token punctuation">,</span>  c<span class="token string">'/s'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>均值移除API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> sp<span class="token comment"># scale函数用于对函数进行预处理，实现均值移除。</span><span class="token comment"># array为原数组，返回A为均值移除后的结果。</span>A <span class="token operator">=</span> sp<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>array<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">18.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">24.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">6000</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>std_samples <span class="token operator">=</span> sp<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>std_samples<span class="token punctuation">.</span>std<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="范围缩放"><a href="#范围缩放" class="headerlink" title="范围缩放"></a>范围缩放</h4><p>将样本矩阵中的每一列的最小值和最大值设定为相同的区间，统一各列特征值的范围。一般情况下会把特征值缩放至[0, 1]区间。</p><p>如何使一组特征值的最小值为0呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">例如有一列特征值表示年龄： <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">]</span>每个元素减去特征值数组所有元素的最小值即可：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如何使一组特征值的最大值为1呢？</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>把特征值数组的每个元素除以最大值即可：<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>范围缩放API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建MinMax缩放器</span>mms <span class="token operator">=</span> sp<span class="token punctuation">.</span>MinMaxScaler<span class="token punctuation">(</span>feature_range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 调用mms对象的方法执行缩放操作, 返回缩放过后的结果</span>result <span class="token operator">=</span> mms<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>mms_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> col <span class="token keyword">in</span> mms_samples<span class="token punctuation">.</span>T<span class="token punctuation">:</span>    col_min <span class="token operator">=</span> col<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    col_max <span class="token operator">=</span> col<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>        <span class="token punctuation">[</span>col_min<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span>col_max<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    x <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>solve<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>    col <span class="token operator">*=</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    col <span class="token operator">+=</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>mms_samples<span class="token punctuation">)</span><span class="token comment"># 根据给定范围创建一个范围缩放器</span>mms <span class="token operator">=</span> sp<span class="token punctuation">.</span>MinMaxScaler<span class="token punctuation">(</span>feature_range<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 用范围缩放器实现特征值的范围缩放</span>mms_samples <span class="token operator">=</span> mms<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>mms_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="归一化"><a href="#归一化" class="headerlink" title="归一化"></a>归一化</h4><p>有些情况每个样本的每个特征值具体的值并不重要，但是每个样本特征值的占比更加重要。</p><table><thead><tr><th></th><th>Python</th><th>Java</th><th>PHP</th></tr></thead><tbody><tr><td>2017</td><td>10</td><td>20</td><td>5</td></tr><tr><td>2018</td><td>8</td><td>5</td><td>0</td></tr></tbody></table><p>所以归一化即是用每个样本的每个特征值除以该样本各个特征值绝对值的总和。变换后的样本矩阵，每个样本的特征值绝对值之和为1。</p><p>归一化相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># array 原始样本矩阵</span><span class="token comment"># norm  范数</span><span class="token comment">#    l1 - l1范数，向量中个元素绝对值之和</span><span class="token comment">#    l2 - l2范数，向量中个元素平方之和</span><span class="token comment"># 返回归一化预处理后的样本矩阵</span>sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>array<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>nor_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> row <span class="token keyword">in</span> nor_samples<span class="token punctuation">:</span>    row <span class="token operator">/=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 归一化预处理</span>nor_samples <span class="token operator">=</span> sp<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>raw_samples<span class="token punctuation">,</span> norm<span class="token operator">=</span><span class="token string">'l1'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">abs</span><span class="token punctuation">(</span>nor_samples<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="二值化"><a href="#二值化" class="headerlink" title="二值化"></a>二值化</h4><p>有些业务并不需要分析矩阵的详细完整数据（比如图像边缘识别只需要分析出图像边缘即可），可以根据一个事先给定的阈值，用0和1表示特征值不高于或高于阈值。二值化后的数组中每个元素非0即1，达到简化数学模型的目的。</p><p>二值化相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 给出阈值, 获取二值化器</span><span class="token builtin">bin</span> <span class="token operator">=</span> sp<span class="token punctuation">.</span>Binarizer<span class="token punctuation">(</span>threshold<span class="token operator">=</span>阈值<span class="token punctuation">)</span><span class="token comment"># 调用transform方法对原始样本矩阵进行二值化预处理操作</span>result <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>bin_samples <span class="token operator">=</span> raw_samples<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>bin_samples<span class="token punctuation">[</span>bin_samples <span class="token operator">&lt;=</span> <span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>bin_samples<span class="token punctuation">[</span>bin_samples <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_samples<span class="token punctuation">)</span><span class="token comment"># 根据给定的阈值创建一个二值化器</span><span class="token builtin">bin</span> <span class="token operator">=</span> sp<span class="token punctuation">.</span>Binarizer<span class="token punctuation">(</span>threshold<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token comment"># 通过二值化器进行二值化预处理</span>bin_samples <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="独热编码"><a href="#独热编码" class="headerlink" title="独热编码"></a>独热编码</h4><p>为样本特征的每个值建立一个由一个1和若干个0组成的序列，用该序列对所有的特征值进行编码。</p><pre class="line-numbers language-none"><code class="language-none">两个数   三个数四个数132754186  739为每一个数字进行独热编码：1-10    3-1002-10007-01    5-010   4-0100        8-001   6-0010                9-0001编码完毕后得到最终经过独热编码后的样本矩阵：101001000010100100100010010011000001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>独热编码相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建一个独热编码器</span><span class="token comment"># sparse： 是否使用紧缩格式（稀疏矩阵）</span><span class="token comment"># dtyle：  数据类型</span>ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span>是否采用紧缩格式<span class="token punctuation">,</span> dtype<span class="token operator">=</span>数据类型<span class="token punctuation">)</span><span class="token comment"># 对原始样本矩阵进行处理，返回独热编码后的样本矩阵。</span>result <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span>是否采用紧缩格式<span class="token punctuation">,</span> dtype<span class="token operator">=</span>数据类型<span class="token punctuation">)</span><span class="token comment"># 对原始样本矩阵进行训练，得到编码字典</span>encode_dict <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span class="token comment"># 调用encode_dict字典的transform方法 对数据样本矩阵进行独热编码</span>result <span class="token operator">=</span> encode_dict<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">[</span><span class="token number">17.</span><span class="token punctuation">,</span> <span class="token number">100.</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">20.</span><span class="token punctuation">,</span> <span class="token number">80.</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">23.</span><span class="token punctuation">,</span> <span class="token number">75.</span><span class="token punctuation">,</span> <span class="token number">5500</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 创建独热编码器</span>ohe <span class="token operator">=</span> sp<span class="token punctuation">.</span>OneHotEncoder<span class="token punctuation">(</span>sparse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token comment"># 用独特编码器对原始样本矩阵做独热编码</span>ohe_dict <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe_dict<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>ohe_samples <span class="token operator">=</span> ohe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>ohe_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="标签编码"><a href="#标签编码" class="headerlink" title="标签编码"></a>标签编码</h4><p>根据字符串形式的特征值在特征序列中的位置，为其指定一个数字标签，用于提供给基于数值算法的学习模型。</p><p>标签编码相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 获取标签编码器</span>lbe <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 调用标签编码器的fit_transform方法训练并且为原始样本矩阵进行标签编码</span>result <span class="token operator">=</span> lbe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>原始样本矩阵<span class="token punctuation">)</span><span class="token comment"># 根据标签编码的结果矩阵反查字典 得到原始数据矩阵</span>samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">as</span> spraw_samples <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token string">'audi'</span><span class="token punctuation">,</span> <span class="token string">'ford'</span><span class="token punctuation">,</span> <span class="token string">'audi'</span><span class="token punctuation">,</span> <span class="token string">'toyota'</span><span class="token punctuation">,</span>    <span class="token string">'ford'</span><span class="token punctuation">,</span> <span class="token string">'bmw'</span><span class="token punctuation">,</span> <span class="token string">'toyota'</span><span class="token punctuation">,</span> <span class="token string">'ford'</span><span class="token punctuation">,</span>    <span class="token string">'audi'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span>lbe <span class="token operator">=</span> sp<span class="token punctuation">.</span>LabelEncoder<span class="token punctuation">(</span><span class="token punctuation">)</span>lbe_samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>raw_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lbe_samples<span class="token punctuation">)</span>inv_samples <span class="token operator">=</span> lbe<span class="token punctuation">.</span>inverse_transform<span class="token punctuation">(</span>lbe_samples<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>inv_samples<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关注公众号，学习更多内容！<br><img src="D:\blog\hexo-shoka\myblog\source_posts\入门机器学习，都应该懂的数据预处理\image-20220312180513137.png" alt="image-20220312180513137"></p>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最简单的学习决策树的入门系列</title>
      <link href="/choodsire.github.io/2022/03/12/zui-jian-dan-de-xue-xi-jue-ce-shu-de-ru-men-xi-lie/"/>
      <url>/choodsire.github.io/2022/03/12/zui-jian-dan-de-xue-xi-jue-ce-shu-de-ru-men-xi-lie/</url>
      
        <content type="html"><![CDATA[<h1 id="系列文章目录"><a href="#系列文章目录" class="headerlink" title="系列文章目录"></a>系列文章目录</h1><p>第一章 机器学习概述<br>第二章 数据预处理<br>第三章 决策树</p><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><hr style=" border:solid; width:100px; height:1px;" color="#000000" size="1&quot;"><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><h4 id="基本算法原理"><a href="#基本算法原理" class="headerlink" title="基本算法原理"></a>基本算法原理</h4><p>核心思想：相似的输入必会产生相似的输出。例如预测某人薪资：</p><p>年龄：1-青年，2-中年，3-老年<br>学历：1-本科，2-硕士，3-博士<br>经历：1-出道，2-一般，3-老手，4-骨灰<br>性别：1-男性，2-女性</p><table><thead><tr><th>年龄</th><th>学历</th><th>经历</th><th>性别</th><th>==&gt;</th><th>薪资</th></tr></thead><tbody><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>==&gt;</td><td>6000（低）</td></tr><tr><td>2</td><td>1</td><td>3</td><td>1</td><td>==&gt;</td><td>10000（中）</td></tr><tr><td>3</td><td>3</td><td>4</td><td>1</td><td>==&gt;</td><td>50000（高）</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>==&gt;</td><td>…</td></tr><tr><td>1</td><td>3</td><td>2</td><td>2</td><td>==&gt;</td><td>?</td></tr></tbody></table><p>为了提高搜索效率，使用树形数据结构处理样本数据：<br>$$<br>年龄=1\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>\quad\quad<br>年龄=2\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>\quad\quad<br>年龄=3\left{<br>\begin{aligned}<br>学历1 \<br>学历2 \<br>学历3 \<br>\end{aligned}<br>\right.<br>$$<br>首先从训练样本矩阵中选择第一个特征进行子表划分，使每个子表中该特征的值全部相同，然后再在每个子表中选择下一个特征按照同样的规则继续划分更小的子表，不断重复直到所有的特征全部使用完为止，此时便得到叶级子表，其中所有样本的特征值全部相同。对于待预测样本，根据其每一个特征的值，选择对应的子表，逐一匹配，直到找到与之完全匹配的叶级子表，用该子表中样本的输出，通过平均(回归)或者投票(分类)为待预测样本提供输出。</p><p>随着子表的划分，信息熵（信息的混乱程度）越来越小，信息越来越纯，数据越来越有序。</p><p>决策树回归器模型相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token comment"># 创建决策树回归器模型  决策树的最大深度为4</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment"># 训练模型  </span><span class="token comment"># train_x： 二维数组样本数据</span><span class="token comment"># train_y： 训练集中对应每行样本的结果</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：预测波士顿地区房屋价格。</p><ol><li>读取数据，打断原始数据集。 划分训练集和测试集。</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">as</span> sd<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token comment"># 加载波士顿地区房价数据集</span>boston <span class="token operator">=</span> sd<span class="token punctuation">.</span>load_boston<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>boston<span class="token punctuation">.</span>feature_names<span class="token punctuation">)</span><span class="token comment"># |CRIM|ZN|INDUS|CHAS|NOX|RM|AGE|DIS|RAD|TAX|PTRATIO|B|LSTAT|</span><span class="token comment"># 犯罪率|住宅用地比例|商业用地比例|是否靠河|空气质量|房间数|年限|距中心区距离|路网密度|房产税|师生比|黑人比例|低地位人口比例|</span><span class="token comment"># 打乱原始数据集的输入和输出</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>boston<span class="token punctuation">.</span>data<span class="token punctuation">,</span> boston<span class="token punctuation">.</span>target<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 划分训练集和测试集</span>train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \    y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>创建决策树回归器模型，使用训练集训练模型。使用测试集测试模型。</li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token comment"># 创建决策树回归模型</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="工程优化"><a href="#工程优化" class="headerlink" title="工程优化"></a>工程优化</h4><p>不必用尽所有的特征，叶级子表中允许混杂不同的特征值，以此降低决策树的层数，在精度牺牲可接受的前提下，提高模型的性能。通常情况下，可以优先选择使<b style="color:red;">信息熵</b>减少量最大的特征作为划分子表的依据。</p><h4 id="集合算法"><a href="#集合算法" class="headerlink" title="集合算法"></a>集合算法</h4><p>根据多个不同模型给出的预测结果，利<strong>用平均(回归)或者投票(分类)的方法</strong>，得出最终预测结果。</p><p>基于决策树的集合算法，就是按照某种规则，构建多棵彼此不同的决策树模型，分别给出针对未知样本的预测结果，最后通过平均或投票得到相对综合的结论。</p><h5 id="正向激励"><a href="#正向激励" class="headerlink" title="正向激励"></a>正向激励</h5><p>首先为样本矩阵中的样本随机分配初始权重，由此构建一棵带有权重的决策树，在由该决策树提供预测输出时，通过加权平均或者加权投票的方式产生预测值。将训练样本代入模型，预测其输出，对那些预测值与实际值不同的样本，提高其权重，由此形成第二棵决策树。重复以上过程，构建出不同权重的若干棵决策树。</p><p>正向激励相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>tree <span class="token keyword">as</span> st<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment"># model: 决策树模型（一颗）</span>model <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment"># 自适应增强决策树回归模型</span><span class="token comment"># n_estimators：构建400棵不同权重的决策树，训练模型</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>model<span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：基于正向激励训练预测波士顿地区房屋价格的模型。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建基于决策树的正向激励回归器模型</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 训练模型</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 测试模型</span>pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>特征重要性</strong></p><p><strong>作为决策树模型训练过程的副产品</strong>，根据每个特征划分子表前后的信息熵减少量就标志了该特征的重要程度，此即为该特征重要性指标。训练得到的模型对象提供了属性：feature_importances_来存储每个特征的重要性。</p><p>获取样本矩阵特征重要性属性：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span>fi <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>案例：获取普通决策树与正向激励决策树训练的两个模型的特征重要性值，按照从大到小顺序输出绘图。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpmodel <span class="token operator">=</span> st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 决策树回归器给出的特征重要性</span>fi_dt <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_model <span class="token operator">=</span> se<span class="token punctuation">.</span>AdaBoostRegressor<span class="token punctuation">(</span>    st<span class="token punctuation">.</span>DecisionTreeRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">400</span><span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 基于决策树的正向激励回归器给出的特征重要性</span>fi_ab <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Feature Importance'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Decision Tree'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_dt<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_dt<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> feature_names<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'AdaBoost Decision Tree'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_ab<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_ab<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightcoral'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'indianred'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> feature_names<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="自助聚合"><a href="#自助聚合" class="headerlink" title="自助聚合"></a>自助聚合</h5><p>每次从总样本矩阵中以<strong>有放回抽样的方式随机抽取部分样本</strong>构建决策树，这样形成多棵包含不同训练样本的决策树，以削弱某些强势样本对模型预测结果的影响，提高模型的泛化特性。</p><h5 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h5><p>在自助聚合的基础上，每次构建决策树模型时，不仅<strong>随机选择部分样本</strong>，而且还随机选择部分特征，这样的集合算法，不仅规避了强势样本对预测结果的影响，而且也<strong>削弱了强势特征的影响</strong>，使模型的预测能力更加泛化。</p><p>随机森林相关API：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token comment"># 随机森林回归模型（属于集合算法的一种）</span><span class="token comment"># max_depth：决策树最大深度10</span><span class="token comment"># n_estimators：构建1000棵决策树，训练模型</span><span class="token comment"># min_samples_split: 子表中最小样本数 若小于这个数字，则不再继续向下拆分</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>案例：分析共享单车的需求，从而判断如何进行共享单车的投放。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>utils <span class="token keyword">as</span> su<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>ensemble <span class="token keyword">as</span> se<span class="token keyword">import</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">as</span> sm<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> mpdata <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../data/bike_day.csv'</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>day_headers <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>shape<span class="token punctuation">,</span> y<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span> max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span> min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 基于“天”数据集的特征重要性</span>fi_dy <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span>data <span class="token operator">=</span> np<span class="token punctuation">.</span>loadtxt<span class="token punctuation">(</span><span class="token string">'../data/bike_hour.csv'</span><span class="token punctuation">,</span> unpack<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">'U20'</span><span class="token punctuation">,</span> delimiter<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>hour_headers <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>y <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">)</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> su<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> random_state<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span>train_size <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span>train_x<span class="token punctuation">,</span> test_x<span class="token punctuation">,</span> train_y<span class="token punctuation">,</span> test_y <span class="token operator">=</span> \    x<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \    y<span class="token punctuation">[</span><span class="token punctuation">:</span>train_size<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>train_size<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token comment"># 随机森林回归器</span>model <span class="token operator">=</span> se<span class="token punctuation">.</span>RandomForestRegressor<span class="token punctuation">(</span>    max_depth<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> n_estimators<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">,</span>    min_samples_split<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_x<span class="token punctuation">,</span> train_y<span class="token punctuation">)</span><span class="token comment"># 基于“小时”数据集的特征重要性</span>fi_hr <span class="token operator">=</span> model<span class="token punctuation">.</span>feature_importances_pred_test_y <span class="token operator">=</span> model<span class="token punctuation">.</span>predict<span class="token punctuation">(</span>test_x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sm<span class="token punctuation">.</span>r2_score<span class="token punctuation">(</span>test_y<span class="token punctuation">,</span> pred_test_y<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>画图显示两组样本数据的特征重要性：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">mp<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token string">'Bike'</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightgray'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Day'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_dy<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_dy<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'deepskyblue'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'steelblue'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> day_headers<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Hour'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Importance'</span><span class="token punctuation">,</span> fontsize<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tick_params<span class="token punctuation">(</span>labelsize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>grid<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token string">'y'</span><span class="token punctuation">,</span> linestyle<span class="token operator">=</span><span class="token string">':'</span><span class="token punctuation">)</span>sorted_indices <span class="token operator">=</span> fi_hr<span class="token punctuation">.</span>argsort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>pos <span class="token operator">=</span> np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>sorted_indices<span class="token punctuation">.</span>size<span class="token punctuation">)</span>mp<span class="token punctuation">.</span>bar<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> fi_hr<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'lightcoral'</span><span class="token punctuation">,</span> edgecolor<span class="token operator">=</span><span class="token string">'indianred'</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>pos<span class="token punctuation">,</span> hour_headers<span class="token punctuation">[</span>sorted_indices<span class="token punctuation">]</span><span class="token punctuation">,</span> rotation<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>tight_layout<span class="token punctuation">(</span><span class="token punctuation">)</span>mp<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关注公众号《朱同学的深度学习》获取更多内容</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\最简单的学习决策树的入门系列\image-20220312180522489.png" alt="image-20220312180522489"></p>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经过半年的摸爬滚打，入门机器学习如此简单!</title>
      <link href="/choodsire.github.io/2022/03/12/jing-guo-ban-nian-de-mo-pa-gun-da-ru-men-ji-qi-xue-xi-ru-ci-jian-dan/"/>
      <url>/choodsire.github.io/2022/03/12/jing-guo-ban-nian-de-mo-pa-gun-da-ru-men-ji-qi-xue-xi-ru-ci-jian-dan/</url>
      
        <content type="html"><![CDATA[<h1 id="经过半年的摸爬滚打，入门机器学习如此简单？"><a href="#经过半年的摸爬滚打，入门机器学习如此简单？" class="headerlink" title="经过半年的摸爬滚打，入门机器学习如此简单？"></a>经过半年的摸爬滚打，入门机器学习如此简单？</h1><p><img src="https://img-blog.csdnimg.cn/914dfafa0a0143439f5238c57648a137.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lya6aOe55qE5LyB6bmF44CL44CK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="思维导图"></p><h2 id="知道自己为什么学习机器学习"><a href="#知道自己为什么学习机器学习" class="headerlink" title="知道自己为什么学习机器学习"></a>知道自己为什么学习机器学习</h2><p>1.可能通过机器学习更好的深入深度学习。那么机器学习就点到为止。两周时间了解机器学习的理论与代码的实现。一周的时间去做机器学习的项目</p><p>2.自己感兴趣，未来的就业方向。这时候就需要深耕在这个领域里</p><p>3.只是为了参加竞赛取得好成绩。</p><p>三者都是相辅相成的，都有联系<br><img src="https://img-blog.csdnimg.cn/ba6db2a8507844088a2c2201d190df8d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lya6aOe55qE5LyB6bmF44CL44CK,size_13,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h2 id="什么是机器学习"><a href="#什么是机器学习" class="headerlink" title="什么是机器学习"></a>什么是机器学习</h2><p>首先机器学习是一门能够让编程计算机从数据中学习的计算机科学</p><p>其次一个计算机程序在完成任务T之后，获得经验E，其表现效果为P，如果任务T的性能表现，也就是用以衡量的P，随着E增加而增加，那么这样计算机程序就被称为机器学习系统。</p><p>最后自我完善，自我增进，自我适应</p><h2 id="如何入门机器学习"><a href="#如何入门机器学习" class="headerlink" title="如何入门机器学习"></a>如何入门机器学习</h2><p>1.通过自己的需求，从网上找到适合自己的学习路线</p><p>如果只是想要进阶深度学习我推荐DASOU这是他的B站入门推荐<br>（<a href="https://www.bilibili.com/video/BV1yg411K72z?from=search&amp;seid=9242587204616347593&amp;spm_id_from=333.337.0.0%EF%BC%89">https://www.bilibili.com/video/BV1yg411K72z?from=search&amp;seid=9242587204616347593&amp;spm_id_from=333.337.0.0）</a></p><p>2.前期如果是从0开始不要在python编程语言上浪费太长的时间有其他语言的基础，3天菜鸟教程搞定，没有编程语言基础3周的时间看python从入门到实践</p><p>3.有问题时可以向学长学姐请教，最好有在一起学习的志同道合的伙伴。方便交流学习</p><p>4.不能停留在机器学习的理论框架上，一定要落实到代码上</p><p>在探索机器学习的学习过程中，有许多的误区。希望我的分享可以让大家可以少走弯路。之后我还会分享机器学习的知识，希望大家可以持续关注我。</p><p><img src="https://img-blog.csdnimg.cn/d6f5661959b84c169403ae2d435c5484.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5Lya6aOe55qE5LyB6bmF44CL44CK,size_20,color_FFFFFF,t_70,g_se,x_16" alt="点关注不迷路"></p><p>关注公众号《朱同学的深度学习》学习更多内容。</p><p><img src="D:\blog\hexo-shoka\myblog\source_posts\经过半年的摸爬滚打，入门机器学习如此简单\image-20220312180445850.png" alt="image-20220312180445850"></p>]]></content>
      
      
      <categories>
          
          <category> machine learning (机器学习) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> machine learning(机器学习) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql的学习笔记</title>
      <link href="/choodsire.github.io/2022/03/12/mysql-de-xue-xi-bi-ji/"/>
      <url>/choodsire.github.io/2022/03/12/mysql-de-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="DB-DBMS-SQL关系"><a href="#DB-DBMS-SQL关系" class="headerlink" title="DB DBMS SQL关系"></a>DB DBMS SQL关系</h1><p>DB:是数据库在硬盘中的文件</p><p>DBMS:是管理数据库的系统,数据库管理系统</p><p>SQL:是结构查询语言,是高级语言,在DBMS中先编译运行.</p><p>DBMS(执行) -&gt; SQL(操控) -&gt; DB(文件)</p><h1 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h1><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205194529927.png" alt="image-20220205194529927"></p><h1 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h1><h2 id="登入mysql"><a href="#登入mysql" class="headerlink" title="登入mysql:"></a>登入mysql:</h2><p>​    mysql -u root -p</p><h2 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库:"></a>查看数据库:</h2><p>​    show databases;(不是sql语句,是mysql独有的)</p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库:"></a>创建数据库:</h2><p>​    create database bjpowernode;(不是sql语句,是mysql独有的)</p><h2 id="使用bjpowernode数据库"><a href="#使用bjpowernode数据库" class="headerlink" title="使用bjpowernode数据库:"></a>使用bjpowernode数据库:</h2><p>​    use bjpowernode;(不是sql语句,是mysql独有的)</p><h2 id="查看当前数据中的表"><a href="#查看当前数据中的表" class="headerlink" title="查看当前数据中的表:"></a>查看当前数据中的表:</h2><p>​    show tables;(不是sql语句,是mysql独有的)</p><h2 id="初始化数据"><a href="#初始化数据" class="headerlink" title="初始化数据"></a>初始化数据</h2><p>​    source 路径\文件名.sql</p><p>后缀名为.sql的文件称为sql脚本.</p><p>直接使用source命令可以执行sql脚本</p><h2 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库:"></a>删除数据库:</h2><p>​    drop database jpowernode;</p><h2 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构:"></a>查看表结构:</h2><p>​    desc dept;(部门表)</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201017469.png" alt="image-20220205201017469"></p><p>​    desc emp;(员工表)</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201038884.png" alt="image-20220205201038884"></p><p>​    desc salgrade;(工资等级表)</p><p>​    <img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201147925.png" alt="image-20220205201147925"></p><h2 id="查看表中数据"><a href="#查看表中数据" class="headerlink" title="查看表中数据:"></a>查看表中数据:</h2><p>​    select * from dept;</p><p>​    <img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201550191.png" alt="image-20220205201550191"></p><p> select * fromt emp;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201615741.png" alt="image-20220205201615741"></p><p> select * from salgrade;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201637707.png" alt="image-20220205201637707"></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="查询当前使用的数据库"><a href="#查询当前使用的数据库" class="headerlink" title="查询当前使用的数据库:"></a>查询当前使用的数据库:</h2><p>​    select database();</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201813112.png" alt="image-20220205201813112"></p><h2 id="查看当前数据库版本"><a href="#查看当前数据库版本" class="headerlink" title="查看当前数据库版本:"></a>查看当前数据库版本:</h2><p>​    select version();</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205201818017.png" alt="image-20220205201818017"></p><h2 id="结束一条语句"><a href="#结束一条语句" class="headerlink" title="结束一条语句"></a>结束一条语句</h2><p>\c  </p><h2 id="退出mysql"><a href="#退出mysql" class="headerlink" title="退出mysql"></a>退出mysql</h2><p>exit</p><h1 id="查看语句"><a href="#查看语句" class="headerlink" title="查看语句"></a>查看语句</h1><h2 id="查看现有的数据库"><a href="#查看现有的数据库" class="headerlink" title="查看现有的数据库"></a>查看现有的数据库</h2><p>​    show databases;</p><h2 id="查看当前使用的库"><a href="#查看当前使用的库" class="headerlink" title="查看当前使用的库"></a>查看当前使用的库</h2><p>​    select database();</p><h2 id="查看当前库中的表"><a href="#查看当前库中的表" class="headerlink" title="查看当前库中的表"></a>查看当前库中的表</h2><p>​    show tables;</p><h2 id="查看其他库中的表"><a href="#查看其他库中的表" class="headerlink" title="查看其他库中的表"></a>查看其他库中的表</h2><p>​    show tables from 其他表名;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205202828271.png" alt="image-20220205202828271"></p><h2 id="查看表的结构"><a href="#查看表的结构" class="headerlink" title="查看表的结构"></a>查看表的结构</h2><p>​    desc emp;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205202857115.png" alt="image-20220205202857115"></p><h2 id="查看表的创建语句"><a href="#查看表的创建语句" class="headerlink" title="查看表的创建语句"></a>查看表的创建语句</h2><p>​    show create table emp;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203026383.png" alt="image-20220205203026383"></p><h1 id="查询语句-DQL"><a href="#查询语句-DQL" class="headerlink" title="查询语句(DQL)"></a>查询语句(DQL)</h1><h2 id="简单的查询语句"><a href="#简单的查询语句" class="headerlink" title="简单的查询语句"></a>简单的查询语句</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>select 字段名1,字段名2,字段名3,… from 表名;</p><p>sql语句不区分大小写;</p><p>sql语句以”;”结尾;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203429103.png" alt="image-20220205203429103"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203519851.png" alt="image-20220205203519851"></p><h3 id="字段可以参与数学计算"><a href="#字段可以参与数学计算" class="headerlink" title="字段可以参与数学计算;"></a>字段可以参与数学计算;</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203630396.png" alt="image-20220205203630396"></p><h3 id="给查询结果的列重复名"><a href="#给查询结果的列重复名" class="headerlink" title="给查询结果的列重复名"></a>给查询结果的列重复名</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205203743216.png" alt="image-20220205203743216"></p><p>中文要加 ‘ ‘,</p><p>mysql建议字符串用单引号,不适用双引号;</p><h3 id="查询所有字段"><a href="#查询所有字段" class="headerlink" title="查询所有字段"></a>查询所有字段</h3><p>select * from emp;//实际开发中不使用*,效率低下</p><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><h4 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h4><p>​    select 字段,字段…. from 表名 where 条件;</p><p>执行顺序:先from,然后where,最后select</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205204426151.png" alt="image-20220205204426151"></p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p>= 等于</p><p>&lt;&gt; 或!= 不等于</p><p>&lt; 小于</p><p>&lt;= 小于等于</p><p>&gt; 大于</p><p>&gt;= 大于等于</p><p>between … and … ,&gt;= and &lt;= 连个值之间</p><p>is null 为null</p><p>is not null 不为null</p><p>and 并且</p><p>or 或者</p><p>in 包含</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205210112929.png" alt="image-20220205210112929"></p><p>not in 不包含</p><p>not 取非</p><p>like 模糊查询,支持%或下划线匹配</p><p>​    %任意多的字符,_一个字符</p><p>between 字符 and 字符,左闭右开</p><p>()有最高优先级</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>语法</p><p>select 字段,字段… from 表名 order by 字段 排序规则;</p><p>默认是升序;</p><p>asc 升序</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211034870.png" alt="image-20220205211034870"></p><p>desc 降序</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211059265.png" alt="image-20220205211059265"></p><p>多个排序规则</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211327307.png" alt="image-20220205211327307"></p><p>按照列排序(不健壮)</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211432373.png" alt="image-20220205211432373"></p><p>顺序</p><p>order by是最后执行的</p><p>先from,后where,然后select,最后order by</p><h2 id="分组函数-多行处理函数"><a href="#分组函数-多行处理函数" class="headerlink" title="分组函数(多行处理函数)"></a>分组函数(多行处理函数)</h2><h3 id="count-计数"><a href="#count-计数" class="headerlink" title="count 计数"></a>count 计数</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211929872.png" alt="image-20220205211929872"></p><h3 id="sum-求和"><a href="#sum-求和" class="headerlink" title="sum 求和"></a>sum 求和</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211912105.png" alt="image-20220205211912105"></p><h3 id="avg-平均值"><a href="#avg-平均值" class="headerlink" title="avg 平均值"></a>avg 平均值</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211856984.png" alt="image-20220205211856984"></p><h3 id="max-最大值"><a href="#max-最大值" class="headerlink" title="max 最大值"></a>max 最大值</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211829647.png" alt="image-20220205211829647"></p><h3 id="min-最小值"><a href="#min-最小值" class="headerlink" title="min 最小值"></a>min 最小值</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205211842997.png" alt="image-20220205211842997"></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>输入多行,输出一行结果</p><p>自动忽略NULL</p><p>分组函数不能使用在where子句中</p><h2 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h2><h3 id="ifnull-空处理函数"><a href="#ifnull-空处理函数" class="headerlink" title="ifnull() 空处理函数"></a>ifnull() 空处理函数</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205212548892.png" alt="image-20220205212548892"></p><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>输入一行,输出一行</p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><h3 id="group-by-按照某个字段或者某些字段进行分组"><a href="#group-by-按照某个字段或者某些字段进行分组" class="headerlink" title="group by: 按照某个字段或者某些字段进行分组"></a>group by: 按照某个字段或者某些字段进行分组</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205215535934.png"></p><h3 id="having-having是对分组之后的数据进行再次过滤-效率低下"><a href="#having-having是对分组之后的数据进行再次过滤-效率低下" class="headerlink" title="having: having是对分组之后的数据进行再次过滤,效率低下"></a>having: having是对分组之后的数据进行再次过滤,效率低下</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205215804800.png" alt="image-20220205215804800"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205215944591.png" alt="image-20220205215944591"></p><h2 id="查询结构去重"><a href="#查询结构去重" class="headerlink" title="查询结构去重"></a>查询结构去重</h2><p>distinct</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220205220830498.png" alt="image-20220205220830498"></p><p>distinct 只能出现在所有字段的最前面</p><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><p>select 5</p><p>​    …</p><p>from 1</p><p>​    …</p><p>where 2</p><p>​    …</p><p>group by 3</p><p>​    …</p><p>having 4</p><p>​    …</p><p>order by 6</p><p>​    …</p><p>;</p><h2 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><p>​    使用inner join … on … where</p><p>​    inner可以省略</p><h5 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h5><p>​        表一和表二有相等的值</p><h5 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h5><p>​        表一和表二非相等的值</p><h5 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h5><p>​        表一和表一有相等的值</p><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><p>​    使用outer join … on … where</p><p>​    outer可以省略</p><h5 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h5><p>​        left outer join … on … where</p><p>​        左边为主表,右边为副表,副表中找不到对应值,填NULL</p><h5 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h5><p>​        right outer join … on … where</p><p>​        左边为副表,右边为主表,副表中找不到对应值,填NULL</p><h5 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h5><p>​        使用union 连接select 子语句</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206145040026.png" alt="image-20220206145040026"></p><h2 id="select子语句"><a href="#select子语句" class="headerlink" title="select子语句"></a>select子语句</h2><p>​    select</p><p>​        …(select …)</p><p>​    from</p><p>​        …(select …)</p><p>​    where </p><p>​        …(select …)</p><h2 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206152816984.png" alt="image-20220206152816984"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206152835675.png" alt="image-20220206152835675"></p><p>limit是sql语句最后执行的一个环节</p><p>select 5</p><p>​    …</p><p>from 1</p><p> …</p><p>where 2</p><p> …</p><p>group by 3</p><p>​    …</p><p>having 4</p><p>​    …</p><p>order by 6</p><p>​    …</p><p>limit 7</p><p>​    …;</p><h1 id="定义表数据结构语句-DDL"><a href="#定义表数据结构语句-DDL" class="headerlink" title="(定义表数据结构语句)DDL"></a>(定义表数据结构语句)DDL</h1><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206153643617.png" alt="image-20220206153643617"></p><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>保证表中的数据的合法性,有效性,完整性.</p><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><p>not null :约束的字段不能为null</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206165825901.png" alt="image-20220206165825901"></p><h3 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h3><p> unique :约束的字段不能重复</p><p>列级约束</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206165724330.png" alt="image-20220206165724330"></p><p>批量添加unique,这表示(这两个一起不能重复)</p><p>表级约束</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206170017913.png" alt="image-20220206170017913"></p><p>NULL可以重复</p><h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><p>primary key(pk): 约束的字段不能为null,也不能重复</p><h4 id="单一主键"><a href="#单一主键" class="headerlink" title="单一主键"></a>单一主键</h4><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206170550419.png" alt="image-20220206170550419"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206170622598.png" alt="image-20220206170622598"></p><h4 id="复合主键"><a href="#复合主键" class="headerlink" title="复合主键"></a>复合主键</h4><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207151235732.png" alt="image-20220207151235732"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207151253856.png" alt="image-20220207151253856"></p><p>​    复合主键不建议使用,违背了三范式.</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207151822609.png" alt="image-20220207151822609"></p><h3 id="mysql提供的主键值自增"><a href="#mysql提供的主键值自增" class="headerlink" title="mysql提供的主键值自增"></a>mysql提供的主键值自增</h3><p>auto_increment</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207153251978.png" alt="image-20220207153251978"></p><h3 id="外键约束-froeign-key-fk-…"><a href="#外键约束-froeign-key-fk-…" class="headerlink" title="外键约束 froeign key(fk):…"></a>外键约束 froeign key(fk):…</h3><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207165549047.png" alt="image-20220207165549047"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170545755.png" alt="image-20220207170545755"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170555786.png" alt="image-20220207170555786"></p><p>​    <img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170602739.png" alt="image-20220207170602739"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207170614934.png" alt="image-20220207170614934"> </p><p>父表中没有的数据,子表不可以绑定外键</p><p>外键值可以为NULL</p><p>被引用的字段不一定是主键,但至少具有unique约束</p><h3 id="检查约束-check-注意-mysql不支持"><a href="#检查约束-check-注意-mysql不支持" class="headerlink" title="检查约束 check  注意:     mysql不支持"></a>检查约束 check  注意:     mysql不支持</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">DROP TABLE IF EXISTS t_student;DROP TABLE IF EXISTS t_class;CREATE TABLE t_class(cno INT,cname VARCHAR(255),UNIQUE(cno));CREATE TABLE t_student(sno INT,sname VARCHAR(255),classno INT,FOREIGN KEY(classno) REFERENCES t_class(cno));INSERT INTO t_class VALUES(NULL,'xxxxx');INSERT INTO t_class VALUES(102,'yyyyy');INSERT INTO t_student VALUES(1,'a',NULL);INSERT INTO t_student VALUES(2,'b',NULL);INSERT INTO t_student VALUES(3,'c',102);INSERT INTO t_student VALUES(4,'d',102);SELECT * FROM t_class;SELECT * FROM t_student;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207173422067.png" alt="image-20220207173422067"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207173429767.png" alt="image-20220207173429767"></p><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><p>crerate table 表名(</p><p>​    字段1 数据类型,</p><p>​    字段2 数据类型 default 值,</p><p>​    字段3 数据类型</p><p>);</p><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><p>drop table if exists 表名;</p><h2 id="拷贝表"><a href="#拷贝表" class="headerlink" title="拷贝表"></a>拷贝表</h2><p>create table 表名 as select 语句;</p><p>把查询结果创建成一个新表<img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206160456714.png" alt="image-20220206160456714"></p><h1 id="修改表数据语句-DML"><a href="#修改表数据语句-DML" class="headerlink" title="修改表数据语句(DML)"></a>修改表数据语句(DML)</h1><h2 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h2><p>insert into 表名(字段1,字段2…) values(字段1,字段2…);</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206154619766.png" alt="image-20220206154619766"></p><p>字段顺序只要一一对应就行,无特殊顺序要求</p><p>为填入的字段,赋值为初始值</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206155940628.png" alt="image-20220206155940628"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206155953120.png" alt="image-20220206155953120"></p><p>insert可以插入多行数据</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206160102256.png" alt="image-20220206160102256"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206160125926.png" alt="image-20220206160125926"></p><h2 id="插入表"><a href="#插入表" class="headerlink" title="插入表"></a>插入表</h2><p>insert into 表名 select语句;</p><p>将select 的结果插入到表中</p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p>update 表名 set 字段名1=值1,字段名2=值2… where 条件;</p><p>没有条件整张表更新<img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220206161305681.png" alt="image-20220206161305681"></p><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>delete from 表名 where 条件;</p><p>没有条件所有删除</p><p>truncate table 表名;</p><p>表被截断,永久删除,不可回滚</p><h1 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h1><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207180749779.png" alt="image-20220207180749779"></p><p>show engines \g 查看当前mysql支持的存储引擎</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207181132085.png" alt="image-20220207181132085"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207181419957.png" alt="image-20220207181419957"></p><h2 id="常见的存储引擎"><a href="#常见的存储引擎" class="headerlink" title="常见的存储引擎"></a>常见的存储引擎</h2><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p>不支持事务,是mysql最常用的存储引擎,不是默认的.</p><p>使用三个文件表示每个表</p><p>​    格式文件:存储表结构的定义(mytable.frm)</p><p>​    数据文件:存储表行的内容(mytable.MYD)</p><p>​    索引文件:存储表上索引(mytable.MYI)</p><p>灵活的AUTO_INCREMENT字段处理</p><p>优点:</p><p>可被转换为压缩,只读表来节省空间.并且可以转换为只读表,提高检索效率.</p><p>缺点:</p><p>不支持事务.</p><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>是mysql的缺省引擎</p><p>特征</p><p>​    每个InnoDB表在数据库目录中以.frm格式文件表示</p><p>​    InnoDB表空间tablespace被用于存储表的内容(不可压缩,不可转换为只读,不节省空间)</p><p>​    提供一组用来记录事务性活动的日志文件</p><p>​    用COMMIT(提交),SAVEPOINT及ROLLBACK(回滚)支持事务处理</p><p>​    提供全ACID兼容</p><p>​    在mysql服务器崩溃后提供自动恢复</p><p>​    多版本(MVCC)和行级锁定</p><p>​    支持外键及引用的完整性,包括级联删除和更新</p><p>优点:</p><p>​        支持事务,行级锁,外键等.</p><p>​        这种存储引擎数据的安全得到保障.</p><h3 id="MEMORY"><a href="#MEMORY" class="headerlink" title="MEMORY"></a>MEMORY</h3><p>特征</p><p>​    在数据库目录内,每个表均以.frm格式 的文件表示</p><p>​    表数据及索引被存储在内存中</p><p>​    表级锁机制</p><p>​    不能包含TEXT或BLOB字段</p><p>以前叫做HEPA引擎</p><h1 id="事务-Transaction"><a href="#事务-Transaction" class="headerlink" title="事务(Transaction)"></a>事务(Transaction)</h1><p>一个事务是一个完整的业务逻辑单元,不可再分.</p><p>要不同时成功,那么同时失败</p><p>那么就得使用数据库的事务机制</p><p>和事务相关的语句只有:DML语句.(insert delete update)</p><p>事务的存在就是为了保证数据的完整性,安全性</p><p>事务通常需要多条DML语句共同联合完成.</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>开始事务机制:</p><p>执行一条DML语句,将其执行记录到操作历史中.</p><p>执行一条DML语句,将其执行记录到操作历史中</p><p>…</p><p>提交事务或者回滚事务(结束事务机制)</p><p>提交事务:</p><p>​    删除操作历史,将更改保存在硬盘中.成功操作</p><p>回滚事务:</p><p>​    删除操作历史,并不保存.失败操作</p><p>SAVEPOINT(保存点):回滚可以回滚到此    </p><h2 id="事务的四大特性"><a href="#事务的四大特性" class="headerlink" title="事务的四大特性"></a>事务的四大特性</h2><h3 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h3><p>事务是最小的工作单元,不可再分.</p><h3 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h3><p>事务必须保证多条DML语句同时成功或同时失败</p><h3 id="隔离性"><a href="#隔离性" class="headerlink" title="隔离性"></a>隔离性</h3><p>事务A与事务B之间具有隔离</p><h3 id="持久性"><a href="#持久性" class="headerlink" title="持久性"></a>持久性</h3><p>持久性说的是最终数据必须持久化到硬盘文件中,事务才算成功的结束.</p><h2 id="隔离性-1"><a href="#隔离性-1" class="headerlink" title="隔离性"></a>隔离性</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207214158842.png" alt="image-20220207214158842"></p><p>mysql中的事务是自动提交的.</p><p>使用start transaction开启事务,就不是自动提交了.</p><p>设置隔离级别</p><p>set global transaction isolation level read uncommitted;</p><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>索引就相当于于一本书的目录,通过目录可以快速找到对于的资源.</p><p>在数据库方面,查询一张表的时候有两种检索方式:</p><p>​    第一种方式:全表扫描;</p><p>​    第二种:根据索引检索(效率很高)</p><p>索引虽然可以提高检索效率,但是不能随意的添加索引,因为索引也是数据库当中的对象,也需要不断的维护.有维护成本的.</p><p>什么时候考虑给字段添加索引?</p><p>​    数据量庞大.(根据用户的需求,根据线上的环境)</p><p>​    该字段很少的DML操作.(因为字段进行修改操作,索引也需要维护)</p><p>​    该字段经常出现在where字句中.(经常根据哪个字段查询)</p><p>主键和具有unique约束的字段自动添加检索.</p><p>查看sql语句的执行计划:<br>explain sql语句;</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207223249721.png" alt="image-20220207223249721"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207223537321.png" alt="image-20220207223537321"></p><h2 id="创建索引对象"><a href="#创建索引对象" class="headerlink" title="创建索引对象"></a>创建索引对象</h2><p>create index 索引名称 on 表名(字段);</p><h2 id="删除索引对象"><a href="#删除索引对象" class="headerlink" title="删除索引对象"></a>删除索引对象</h2><p>drop index 索引名称 on 表名;</p><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>索引底层采用的数据结构是:B+Tree</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207230139049.png" alt="image-20220207230139049"></p><h2 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h2><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207230519093.png" alt="image-20220207230519093"></p><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207232415881.png" alt="image-20220207232415881"></p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220207233712557.png" alt="image-20220207233712557"></p><h1 id="DBA命令"><a href="#DBA命令" class="headerlink" title="DBA命令"></a>DBA命令</h1><p>将数据库当中的数据导出</p><p>mysqldump 数据库名称&gt;路径 -u root -p</p><p>导入数据</p><p>create database 数据库名称;</p><p>use 数据库名;</p><p>source 路径;</p><h1 id="设计三范式"><a href="#设计三范式" class="headerlink" title="设计三范式"></a>设计三范式</h1><p>第一范式:</p><p>要有主键,字段具有原子性,不可再分</p><p>第二范式:</p><p>不能有部分依赖</p><p>多对多?</p><p>学生和老师</p><p>三张表,关系表,两个外键</p><p>第三范式:</p><p>不能有传递依赖</p><p>单对多?</p><p>学生和班级</p><p>两张表,学生一个外键.</p><p>父表和子表</p><p><img src="C:\Users\XIEJINGCHENG\AppData\Roaming\Typora\typora-user-images\image-20220208001110160.png" alt="image-20220208001110160"></p><h1 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h1><h2 id="行级锁-乐观锁"><a href="#行级锁-乐观锁" class="headerlink" title="行级锁(乐观锁)"></a>行级锁(乐观锁)</h2><p>select 语句 for update;</p><p>在一个事务没结束时必须排队,不允许其他修改</p><h2 id="表级锁-悲观锁"><a href="#表级锁-悲观锁" class="headerlink" title="表级锁(悲观锁)"></a>表级锁(悲观锁)</h2><p>允许并发操作</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity常用快捷键</title>
      <link href="/choodsire.github.io/2022/03/12/unity-chang-yong-kuai-jie-jian/"/>
      <url>/choodsire.github.io/2022/03/12/unity-chang-yong-kuai-jie-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Unity的常用快捷键"><a href="#Unity的常用快捷键" class="headerlink" title="Unity的常用快捷键"></a><font color="pink">Unity的常用快捷键</font></h1><p>F2: 重命名</p><p>q: 小手手,可以拖动场景</p><p>w: 移动工具,可以移动物体</p><p>e: 旋转工具,可以旋转物体</p><p>r: 缩放工具,可以缩放物体</p><p>t:二维缩放工具</p><p>y:全能工具,可以移动缩放旋转物体</p><p>shift + f: 可以将视图定位到物体,一定要选中物体再使用,不然没反应</p><p>ctrl + shift + f:可以将物体移动到当前视图位置.<font color="red">注:旋转与视图一致,常用与调整摄像机位置.</font></p><p>x: 在全局坐标系和局部坐标系间相互切换</p><p>z: 在出厂中心点(原始中心点)和计算中心点间相互切换.<font color="red">计算中心点是Unity计算出的中心点,在物体正中心,原始中心点是模型中心点</font></p><p>v: 按住v键,可以选择顶点,顶点吸附</p><p>ctrl:按住ctrl键,移动或旋转缩放物体,是按照一定的大小变换的.可以在edit中的Grid and snap菜单中修改单位</p><p>ctrl:按住ctrl,可以加选物体</p><p>shift:按住物体可以选择多个物体</p><p>ctrl + d: 快速复制物体</p><p>ctrl + c: 复制</p><p>ctrl + v: 粘贴</p><p>ctrl + a:全选</p><hr><p>shift + enter: 窗口最大化</p><p>ctrl + shift + b: 打包设置</p><p>ctrl + b: 打包并运行</p><p>ctrl + n:新建场景</p><p>ctrl + s: 保存</p><p>ctrl + r: 刷新</p><p>ctrl + z: 撤销</p><p>ctrl + y:重做</p><p>ctrl + p: 运行</p><p>ctrl + shift + p:暂停</p><p>ctrl + alt + p: 停止</p><p>按住鼠标右键进入漫游模式,wasd移动,按住shift加速.</p><p>其实方向键可以直接移动.</p><p>delete: 删除物体</p><p>shift + delete:强制删除(此时没有提示是否要删除)</p><p>ctrl + shift + c:打开控制台</p>]]></content>
      
      
      <categories>
          
          <category> Unity </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo建站心得</title>
      <link href="/choodsire.github.io/2022/03/11/hexo-jian-zhan-xin-de/"/>
      <url>/choodsire.github.io/2022/03/11/hexo-jian-zhan-xin-de/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次建站心得"><a href="#第一次建站心得" class="headerlink" title="第一次建站心得"></a>第一次建站心得</h1><p>总之太难了</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
